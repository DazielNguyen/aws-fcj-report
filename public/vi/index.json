[
{
	"uri": "http://localhost:1313/aws-fcj-report/vi/4-eventparticipated/4.2-event2/",
	"title": "Event 2",
	"tags": [],
	"description": "",
	"content": "Bài thu hoạch “WORKSHOP KHOA HỌC DỮ LIỆU TRÊN AWS” Mục Đích Của Sự Kiện Chia sẻ best practices trong thiết kế ứng dụng hiện đại Giới thiệu phương pháp DDD và event-driven architecture Hướng dẫn lựa chọn compute services phù hợp Giới thiệu công cụ AI hỗ trợ development lifecycle Danh Sách Diễn Giả Van Hoang Kha - Cloud Solutions Architec AWS User Group Leader Bach Doan Vuong - Cloud Develops Engineer AWS Community Builder Nội Dung Nổi Bật Tổng quan quản lý dịch vụ AI với từng trường hợp. Feature Engineering Train, Tune, Deploy Bring your own models. Giới thiệu \u0026amp; Tầm quan trọng của Cloud trong Data Science Các dịch vụ phổ biến cảu AWS có thể hỗ trợ được sinh viên trong quá trình train model như SageMarker Amazon Comprehend Chuyên tóm tắt phân loại dữ liệu, và giải pháp cho bài toàn xử lý ngôn ngữ tự nhiên hỗ trợ được nhiều ngôn nhữ khác nhau. Các trường hợp sử dụng thực tế của Amazon Comprehend. Xử lý tài liệu thông minh Xử lý mail hàng loạt -\u0026gt; Hướng trả lời cho người dùng tích cực hay tieuw cực Phân tích cảm xúc khách hàng Phân loại và gắn cho tag các type dữ liệu khác nhau. Phân tích tâm lý khách hàng Phân tích cho tổng đài tư vấn viên -\u0026gt; Trung tâm liên lạc Xác thực thông tin các nhân. Amazon Translate - Neurak machine translation service. Tương tự google dịch Có thể tích hợp các website làm đa ngôn ngữ Dễ tích hợp vào ứng dụng Độ chính xác cao theo từng ngữ cảnh khác nhau Amazon Texttrack Triết xuất Tổng quan về Data Science Pipeline trên AWS (S3, Glue, SageMaker). Demo 1: Xử lý và làm sạch dữ liệu từ dataset IMDb với AWS Glue. Thảo luận chuyên sâu về chi phí, hiệu năng (Cloud vs. On-premise). Hướng dẫn dự án nhỏ sau workshop để củng cố kiến thức. Những Gì Học Được Tư Duy Thiết Kế Business-first approach: Luôn bắt đầu từ business domain, không phải technology Ubiquitous language: Importance của common vocabulary giữa business và tech teams Bounded contexts: Cách identify và manage complexity trong large systems Kiến Trúc Kỹ Thuật Event storming technique: Phương pháp thực tế để mô hình hóa quy trình kinh doanh Sử dụng Event-driven communication thay vì synchronous calls Integration patterns: Hiểu khi nào dùng sync, async, pub/sub, streaming Compute spectrum: Criteria chọn từ VM → containers → serverless Chiến Lược Hiện Đại Hóa Phased approach: Không rush, phải có roadmap rõ ràng 7Rs framework: Nhiều con đường khác nhau tùy thuộc vào đặc điểm của mỗi ứng dụng ROI measurement: Cost reduction + business agility Ứng Dụng Vào Công Việc Áp dụng DDD cho project hiện tại: Event storming sessions với business team Refactor microservices: Sử dụng bounded contexts để identify service boundaries Implement event-driven patterns: Thay thế một số sync calls bằng async messaging Serverless adoption: Pilot AWS Lambda cho một số use cases phù hợp Try Amazon Q Developer: Integrate vào development workflow để boost productivity Trải nghiệm trong event Tham gia workshop “GenAI-powered App-DB Modernization” là một trải nghiệm rất bổ ích, giúp tôi có cái nhìn toàn diện về cách hiện đại hóa ứng dụng và cơ sở dữ liệu bằng các phương pháp và công cụ hiện đại. Một số trải nghiệm nổi bật:\nHọc hỏi từ các diễn giả có chuyên môn cao Các diễn giả đến từ AWS và các tổ chức công nghệ lớn đã chia sẻ best practices trong thiết kế ứng dụng hiện đại. Qua các case study thực tế, tôi hiểu rõ hơn cách áp dụng Domain-Driven Design (DDD) và Event-Driven Architecture vào các project lớn. Trải nghiệm kỹ thuật thực tế Tham gia các phiên trình bày về event storming giúp tôi hình dung cách mô hình hóa quy trình kinh doanh thành các domain events. Học cách phân tách microservices và xác định bounded contexts để quản lý sự phức tạp của hệ thống lớn. Hiểu rõ trade-offs giữa synchronous và asynchronous communication cũng như các pattern tích hợp như pub/sub, point-to-point, streaming. Ứng dụng công cụ hiện đại Trực tiếp tìm hiểu về Amazon Q Developer, công cụ AI hỗ trợ SDLC từ lập kế hoạch đến maintenance. Học cách tự động hóa code transformation và pilot serverless với AWS Lambda, từ đó nâng cao năng suất phát triển. Kết nối và trao đổi Workshop tạo cơ hội trao đổi trực tiếp với các chuyên gia, đồng nghiệp và team business, giúp nâng cao ngôn ngữ chung (ubiquitous language) giữa business và tech. Qua các ví dụ thực tế, tôi nhận ra tầm quan trọng của business-first approach, luôn bắt đầu từ nhu cầu kinh doanh thay vì chỉ tập trung vào công nghệ. Bài học rút ra Việc áp dụng DDD và event-driven patterns giúp giảm coupling, tăng scalability và resilience cho hệ thống. Chiến lược hiện đại hóa cần phased approach và đo lường ROI, không nên vội vàng chuyển đổi toàn bộ hệ thống. Các công cụ AI như Amazon Q Developer có thể boost productivity nếu được tích hợp vào workflow phát triển hiện tại. Một số hình ảnh khi tham gia sự kiện Thêm các hình ảnh của các bạn tại đây Tổng thể, sự kiện không chỉ cung cấp kiến thức kỹ thuật mà còn giúp tôi thay đổi cách tư duy về thiết kế ứng dụng, hiện đại hóa hệ thống và phối hợp hiệu quả hơn giữa các team.\n"
},
{
	"uri": "http://localhost:1313/aws-fcj-report/vi/",
	"title": "Báo cáo thực tập",
	"tags": [],
	"description": "",
	"content": "Báo cáo thực tập Thông tin sinh viên: Họ và tên: Nguyễn Văn Anh Duy\nSố điện thoại: 0387 883 041\nEmail: duynguyenvananh@gmail.com\nTrường: Đại học FPT TP.HCM\nNgành: Trí Tuệ Nhân Tạo\nLớp: SE181823\nCông ty thực tập: Công ty TNHH Amazon Web Services Vietnam\nVị trí thực tập: FCJ Cloud Intern\nThời gian thực tập: Từ ngày 12/08/2025 đến ngày 12/11/2025\nNội dung báo cáo Worklog Proposal Các bài blogs đã dịch Các events đã tham gia Workshop Tự đánh giá Chia sẻ, đóng góp ý kiến "
},
{
	"uri": "http://localhost:1313/aws-fcj-report/vi/3-blogstranslated/3.1-blog1/",
	"title": "Blog 1",
	"tags": [],
	"description": "",
	"content": "Bắt đầu với healthcare data lakes: Sử dụng microservices Các data lake có thể giúp các bệnh viện và cơ sở y tế chuyển dữ liệu thành những thông tin chi tiết về doanh nghiệp và duy trì hoạt động kinh doanh liên tục, đồng thời bảo vệ quyền riêng tư của bệnh nhân. Data lake là một kho lưu trữ tập trung, được quản lý và bảo mật để lưu trữ tất cả dữ liệu của bạn, cả ở dạng ban đầu và đã xử lý để phân tích. data lake cho phép bạn chia nhỏ các kho chứa dữ liệu và kết hợp các loại phân tích khác nhau để có được thông tin chi tiết và đưa ra các quyết định kinh doanh tốt hơn.\nBài đăng trên blog này là một phần của loạt bài lớn hơn về việc bắt đầu cài đặt data lake dành cho lĩnh vực y tế. Trong bài đăng blog cuối cùng của tôi trong loạt bài, “Bắt đầu với data lake dành cho lĩnh vực y tế: Đào sâu vào Amazon Cognito”, tôi tập trung vào các chi tiết cụ thể của việc sử dụng Amazon Cognito và Attribute Based Access Control (ABAC) để xác thực và ủy quyền người dùng trong giải pháp data lake y tế. Trong blog này, tôi trình bày chi tiết cách giải pháp đã phát triển ở cấp độ cơ bản, bao gồm các quyết định thiết kế mà tôi đã đưa ra và các tính năng bổ sung được sử dụng. Bạn có thể truy cập các code samples cho giải pháp tại Git repo này để tham khảo.\nHướng dẫn kiến trúc Thay đổi chính kể từ lần trình bày cuối cùng của kiến trúc tổng thể là việc tách dịch vụ đơn lẻ thành một tập hợp các dịch vụ nhỏ để cải thiện khả năng bảo trì và tính linh hoạt. Việc tích hợp một lượng lớn dữ liệu y tế khác nhau thường yêu cầu các trình kết nối chuyên biệt cho từng định dạng; bằng cách giữ chúng được đóng gói riêng biệt với microservices, chúng ta có thể thêm, xóa và sửa đổi từng trình kết nối mà không ảnh hưởng đến những kết nối khác. Các microservices được kết nối rời thông qua tin nhắn publish/subscribe tập trung trong cái mà tôi gọi là “pub/sub hub”.\nGiải pháp này đại diện cho những gì tôi sẽ coi là một lần lặp nước rút hợp lý khác từ last post của tôi. Phạm vi vẫn được giới hạn trong việc nhập và phân tích cú pháp đơn giản của các HL7v2 messages được định dạng theo Quy tắc mã hóa 7 (ER7) thông qua giao diện REST.\nKiến trúc giải pháp bây giờ như sau:\nHình 1. Kiến trúc tổng thể; những ô màu thể hiện những dịch vụ riêng biệt.\nMặc dù thuật ngữ microservices có một số sự mơ hồ cố hữu, một số đặc điểm là chung:\nChúng nhỏ, tự chủ, kết hợp rời rạc Có thể tái sử dụng, giao tiếp thông qua giao diện được xác định rõ Chuyên biệt để giải quyết một việc Thường được triển khai trong event-driven architecture Khi xác định vị trí tạo ranh giới giữa các microservices, cần cân nhắc:\nNội tại: công nghệ được sử dụng, hiệu suất, độ tin cậy, khả năng mở rộng Bên ngoài: chức năng phụ thuộc, tần suất thay đổi, khả năng tái sử dụng Con người: quyền sở hữu nhóm, quản lý cognitive load Lựa chọn công nghệ và phạm vi giao tiếp Phạm vi giao tiếp Các công nghệ / mô hình cần xem xét Trong một microservice Amazon Simple Queue Service (Amazon SQS), AWS Step Functions Giữa các microservices trong một dịch vụ AWS CloudFormation cross-stack references, Amazon Simple Notification Service (Amazon SNS) Giữa các dịch vụ Amazon EventBridge, AWS Cloud Map, Amazon API Gateway The pub/sub hub Việc sử dụng kiến trúc hub-and-spoke (hay message broker) hoạt động tốt với một số lượng nhỏ các microservices liên quan chặt chẽ.\nMỗi microservice chỉ phụ thuộc vào hub Kết nối giữa các microservice chỉ giới hạn ở nội dung của message được xuất Giảm số lượng synchronous calls vì pub/sub là push không đồng bộ một chiều Nhược điểm: cần phối hợp và giám sát để tránh microservice xử lý nhầm message.\nCore microservice Cung cấp dữ liệu nền tảng và lớp truyền thông, gồm:\nAmazon S3 bucket cho dữ liệu Amazon DynamoDB cho danh mục dữ liệu AWS Lambda để ghi message vào data lake và danh mục Amazon SNS topic làm hub Amazon S3 bucket cho artifacts như mã Lambda Chỉ cho phép truy cập ghi gián tiếp vào data lake qua hàm Lambda → đảm bảo nhất quán.\nFront door microservice Cung cấp API Gateway để tương tác REST bên ngoài Xác thực \u0026amp; ủy quyền dựa trên OIDC thông qua Amazon Cognito Cơ chế deduplication tự quản lý bằng DynamoDB thay vì SNS FIFO vì: SNS deduplication TTL chỉ 5 phút SNS FIFO yêu cầu SQS FIFO Chủ động báo cho sender biết message là bản sao Staging ER7 microservice Lambda “trigger” đăng ký với pub/sub hub, lọc message theo attribute Step Functions Express Workflow để chuyển ER7 → JSON Hai Lambda: Sửa format ER7 (newline, carriage return) Parsing logic Kết quả hoặc lỗi được đẩy lại vào pub/sub hub Tính năng mới trong giải pháp 1. AWS CloudFormation cross-stack references Ví dụ outputs trong core microservice:\nOutputs: Bucket: Value: !Ref Bucket Export: Name: !Sub ${AWS::StackName}-Bucket ArtifactBucket: Value: !Ref ArtifactBucket Export: Name: !Sub ${AWS::StackName}-ArtifactBucket Topic: Value: !Ref Topic Export: Name: !Sub ${AWS::StackName}-Topic Catalog: Value: !Ref Catalog Export: Name: !Sub ${AWS::StackName}-Catalog CatalogArn: Value: !GetAtt Catalog.Arn Export: Name: !Sub ${AWS::StackName}-CatalogArn "
},
{
	"uri": "http://localhost:1313/aws-fcj-report/vi/3-blogstranslated/3.2-blog2/",
	"title": "Blog 2",
	"tags": [],
	"description": "",
	"content": "Bắt đầu với healthcare data lakes: Sử dụng microservices Các data lake có thể giúp các bệnh viện và cơ sở y tế chuyển dữ liệu thành những thông tin chi tiết về doanh nghiệp và duy trì hoạt động kinh doanh liên tục, đồng thời bảo vệ quyền riêng tư của bệnh nhân. Data lake là một kho lưu trữ tập trung, được quản lý và bảo mật để lưu trữ tất cả dữ liệu của bạn, cả ở dạng ban đầu và đã xử lý để phân tích. data lake cho phép bạn chia nhỏ các kho chứa dữ liệu và kết hợp các loại phân tích khác nhau để có được thông tin chi tiết và đưa ra các quyết định kinh doanh tốt hơn.\nBài đăng trên blog này là một phần của loạt bài lớn hơn về việc bắt đầu cài đặt data lake dành cho lĩnh vực y tế. Trong bài đăng blog cuối cùng của tôi trong loạt bài, “Bắt đầu với data lake dành cho lĩnh vực y tế: Đào sâu vào Amazon Cognito”, tôi tập trung vào các chi tiết cụ thể của việc sử dụng Amazon Cognito và Attribute Based Access Control (ABAC) để xác thực và ủy quyền người dùng trong giải pháp data lake y tế. Trong blog này, tôi trình bày chi tiết cách giải pháp đã phát triển ở cấp độ cơ bản, bao gồm các quyết định thiết kế mà tôi đã đưa ra và các tính năng bổ sung được sử dụng. Bạn có thể truy cập các code samples cho giải pháp tại Git repo này để tham khảo.\nHướng dẫn kiến trúc Thay đổi chính kể từ lần trình bày cuối cùng của kiến trúc tổng thể là việc tách dịch vụ đơn lẻ thành một tập hợp các dịch vụ nhỏ để cải thiện khả năng bảo trì và tính linh hoạt. Việc tích hợp một lượng lớn dữ liệu y tế khác nhau thường yêu cầu các trình kết nối chuyên biệt cho từng định dạng; bằng cách giữ chúng được đóng gói riêng biệt với microservices, chúng ta có thể thêm, xóa và sửa đổi từng trình kết nối mà không ảnh hưởng đến những kết nối khác. Các microservices được kết nối rời thông qua tin nhắn publish/subscribe tập trung trong cái mà tôi gọi là “pub/sub hub”.\nGiải pháp này đại diện cho những gì tôi sẽ coi là một lần lặp nước rút hợp lý khác từ last post của tôi. Phạm vi vẫn được giới hạn trong việc nhập và phân tích cú pháp đơn giản của các HL7v2 messages được định dạng theo Quy tắc mã hóa 7 (ER7) thông qua giao diện REST.\nKiến trúc giải pháp bây giờ như sau:\nHình 1. Kiến trúc tổng thể; những ô màu thể hiện những dịch vụ riêng biệt.\nMặc dù thuật ngữ microservices có một số sự mơ hồ cố hữu, một số đặc điểm là chung:\nChúng nhỏ, tự chủ, kết hợp rời rạc Có thể tái sử dụng, giao tiếp thông qua giao diện được xác định rõ Chuyên biệt để giải quyết một việc Thường được triển khai trong event-driven architecture Khi xác định vị trí tạo ranh giới giữa các microservices, cần cân nhắc:\nNội tại: công nghệ được sử dụng, hiệu suất, độ tin cậy, khả năng mở rộng Bên ngoài: chức năng phụ thuộc, tần suất thay đổi, khả năng tái sử dụng Con người: quyền sở hữu nhóm, quản lý cognitive load Lựa chọn công nghệ và phạm vi giao tiếp Phạm vi giao tiếp Các công nghệ / mô hình cần xem xét Trong một microservice Amazon Simple Queue Service (Amazon SQS), AWS Step Functions Giữa các microservices trong một dịch vụ AWS CloudFormation cross-stack references, Amazon Simple Notification Service (Amazon SNS) Giữa các dịch vụ Amazon EventBridge, AWS Cloud Map, Amazon API Gateway The pub/sub hub Việc sử dụng kiến trúc hub-and-spoke (hay message broker) hoạt động tốt với một số lượng nhỏ các microservices liên quan chặt chẽ.\nMỗi microservice chỉ phụ thuộc vào hub Kết nối giữa các microservice chỉ giới hạn ở nội dung của message được xuất Giảm số lượng synchronous calls vì pub/sub là push không đồng bộ một chiều Nhược điểm: cần phối hợp và giám sát để tránh microservice xử lý nhầm message.\nCore microservice Cung cấp dữ liệu nền tảng và lớp truyền thông, gồm:\nAmazon S3 bucket cho dữ liệu Amazon DynamoDB cho danh mục dữ liệu AWS Lambda để ghi message vào data lake và danh mục Amazon SNS topic làm hub Amazon S3 bucket cho artifacts như mã Lambda Chỉ cho phép truy cập ghi gián tiếp vào data lake qua hàm Lambda → đảm bảo nhất quán.\nFront door microservice Cung cấp API Gateway để tương tác REST bên ngoài Xác thực \u0026amp; ủy quyền dựa trên OIDC thông qua Amazon Cognito Cơ chế deduplication tự quản lý bằng DynamoDB thay vì SNS FIFO vì: SNS deduplication TTL chỉ 5 phút SNS FIFO yêu cầu SQS FIFO Chủ động báo cho sender biết message là bản sao Staging ER7 microservice Lambda “trigger” đăng ký với pub/sub hub, lọc message theo attribute Step Functions Express Workflow để chuyển ER7 → JSON Hai Lambda: Sửa format ER7 (newline, carriage return) Parsing logic Kết quả hoặc lỗi được đẩy lại vào pub/sub hub Tính năng mới trong giải pháp 1. AWS CloudFormation cross-stack references Ví dụ outputs trong core microservice:\nOutputs: Bucket: Value: !Ref Bucket Export: Name: !Sub ${AWS::StackName}-Bucket ArtifactBucket: Value: !Ref ArtifactBucket Export: Name: !Sub ${AWS::StackName}-ArtifactBucket Topic: Value: !Ref Topic Export: Name: !Sub ${AWS::StackName}-Topic Catalog: Value: !Ref Catalog Export: Name: !Sub ${AWS::StackName}-Catalog CatalogArn: Value: !GetAtt Catalog.Arn Export: Name: !Sub ${AWS::StackName}-CatalogArn "
},
{
	"uri": "http://localhost:1313/aws-fcj-report/vi/3-blogstranslated/3.3-blog3/",
	"title": "Blog 3",
	"tags": [],
	"description": "",
	"content": "Bắt đầu với healthcare data lakes: Sử dụng microservices Các data lake có thể giúp các bệnh viện và cơ sở y tế chuyển dữ liệu thành những thông tin chi tiết về doanh nghiệp và duy trì hoạt động kinh doanh liên tục, đồng thời bảo vệ quyền riêng tư của bệnh nhân. Data lake là một kho lưu trữ tập trung, được quản lý và bảo mật để lưu trữ tất cả dữ liệu của bạn, cả ở dạng ban đầu và đã xử lý để phân tích. data lake cho phép bạn chia nhỏ các kho chứa dữ liệu và kết hợp các loại phân tích khác nhau để có được thông tin chi tiết và đưa ra các quyết định kinh doanh tốt hơn.\nBài đăng trên blog này là một phần của loạt bài lớn hơn về việc bắt đầu cài đặt data lake dành cho lĩnh vực y tế. Trong bài đăng blog cuối cùng của tôi trong loạt bài, “Bắt đầu với data lake dành cho lĩnh vực y tế: Đào sâu vào Amazon Cognito”, tôi tập trung vào các chi tiết cụ thể của việc sử dụng Amazon Cognito và Attribute Based Access Control (ABAC) để xác thực và ủy quyền người dùng trong giải pháp data lake y tế. Trong blog này, tôi trình bày chi tiết cách giải pháp đã phát triển ở cấp độ cơ bản, bao gồm các quyết định thiết kế mà tôi đã đưa ra và các tính năng bổ sung được sử dụng. Bạn có thể truy cập các code samples cho giải pháp tại Git repo này để tham khảo.\nHướng dẫn kiến trúc Thay đổi chính kể từ lần trình bày cuối cùng của kiến trúc tổng thể là việc tách dịch vụ đơn lẻ thành một tập hợp các dịch vụ nhỏ để cải thiện khả năng bảo trì và tính linh hoạt. Việc tích hợp một lượng lớn dữ liệu y tế khác nhau thường yêu cầu các trình kết nối chuyên biệt cho từng định dạng; bằng cách giữ chúng được đóng gói riêng biệt với microservices, chúng ta có thể thêm, xóa và sửa đổi từng trình kết nối mà không ảnh hưởng đến những kết nối khác. Các microservices được kết nối rời thông qua tin nhắn publish/subscribe tập trung trong cái mà tôi gọi là “pub/sub hub”.\nGiải pháp này đại diện cho những gì tôi sẽ coi là một lần lặp nước rút hợp lý khác từ last post của tôi. Phạm vi vẫn được giới hạn trong việc nhập và phân tích cú pháp đơn giản của các HL7v2 messages được định dạng theo Quy tắc mã hóa 7 (ER7) thông qua giao diện REST.\nKiến trúc giải pháp bây giờ như sau:\nHình 1. Kiến trúc tổng thể; những ô màu thể hiện những dịch vụ riêng biệt.\nMặc dù thuật ngữ microservices có một số sự mơ hồ cố hữu, một số đặc điểm là chung:\nChúng nhỏ, tự chủ, kết hợp rời rạc Có thể tái sử dụng, giao tiếp thông qua giao diện được xác định rõ Chuyên biệt để giải quyết một việc Thường được triển khai trong event-driven architecture Khi xác định vị trí tạo ranh giới giữa các microservices, cần cân nhắc:\nNội tại: công nghệ được sử dụng, hiệu suất, độ tin cậy, khả năng mở rộng Bên ngoài: chức năng phụ thuộc, tần suất thay đổi, khả năng tái sử dụng Con người: quyền sở hữu nhóm, quản lý cognitive load Lựa chọn công nghệ và phạm vi giao tiếp Phạm vi giao tiếp Các công nghệ / mô hình cần xem xét Trong một microservice Amazon Simple Queue Service (Amazon SQS), AWS Step Functions Giữa các microservices trong một dịch vụ AWS CloudFormation cross-stack references, Amazon Simple Notification Service (Amazon SNS) Giữa các dịch vụ Amazon EventBridge, AWS Cloud Map, Amazon API Gateway The pub/sub hub Việc sử dụng kiến trúc hub-and-spoke (hay message broker) hoạt động tốt với một số lượng nhỏ các microservices liên quan chặt chẽ.\nMỗi microservice chỉ phụ thuộc vào hub Kết nối giữa các microservice chỉ giới hạn ở nội dung của message được xuất Giảm số lượng synchronous calls vì pub/sub là push không đồng bộ một chiều Nhược điểm: cần phối hợp và giám sát để tránh microservice xử lý nhầm message.\nCore microservice Cung cấp dữ liệu nền tảng và lớp truyền thông, gồm:\nAmazon S3 bucket cho dữ liệu Amazon DynamoDB cho danh mục dữ liệu AWS Lambda để ghi message vào data lake và danh mục Amazon SNS topic làm hub Amazon S3 bucket cho artifacts như mã Lambda Chỉ cho phép truy cập ghi gián tiếp vào data lake qua hàm Lambda → đảm bảo nhất quán.\nFront door microservice Cung cấp API Gateway để tương tác REST bên ngoài Xác thực \u0026amp; ủy quyền dựa trên OIDC thông qua Amazon Cognito Cơ chế deduplication tự quản lý bằng DynamoDB thay vì SNS FIFO vì: SNS deduplication TTL chỉ 5 phút SNS FIFO yêu cầu SQS FIFO Chủ động báo cho sender biết message là bản sao Staging ER7 microservice Lambda “trigger” đăng ký với pub/sub hub, lọc message theo attribute Step Functions Express Workflow để chuyển ER7 → JSON Hai Lambda: Sửa format ER7 (newline, carriage return) Parsing logic Kết quả hoặc lỗi được đẩy lại vào pub/sub hub Tính năng mới trong giải pháp 1. AWS CloudFormation cross-stack references Ví dụ outputs trong core microservice:\nOutputs: Bucket: Value: !Ref Bucket Export: Name: !Sub ${AWS::StackName}-Bucket ArtifactBucket: Value: !Ref ArtifactBucket Export: Name: !Sub ${AWS::StackName}-ArtifactBucket Topic: Value: !Ref Topic Export: Name: !Sub ${AWS::StackName}-Topic Catalog: Value: !Ref Catalog Export: Name: !Sub ${AWS::StackName}-Catalog CatalogArn: Value: !GetAtt Catalog.Arn Export: Name: !Sub ${AWS::StackName}-CatalogArn "
},
{
	"uri": "http://localhost:1313/aws-fcj-report/vi/3-blogstranslated/3.4-blog4/",
	"title": "Blog 4",
	"tags": [],
	"description": "",
	"content": "Bắt đầu với healthcare data lakes: Sử dụng microservices Các data lake có thể giúp các bệnh viện và cơ sở y tế chuyển dữ liệu thành những thông tin chi tiết về doanh nghiệp và duy trì hoạt động kinh doanh liên tục, đồng thời bảo vệ quyền riêng tư của bệnh nhân. Data lake là một kho lưu trữ tập trung, được quản lý và bảo mật để lưu trữ tất cả dữ liệu của bạn, cả ở dạng ban đầu và đã xử lý để phân tích. data lake cho phép bạn chia nhỏ các kho chứa dữ liệu và kết hợp các loại phân tích khác nhau để có được thông tin chi tiết và đưa ra các quyết định kinh doanh tốt hơn.\nBài đăng trên blog này là một phần của loạt bài lớn hơn về việc bắt đầu cài đặt data lake dành cho lĩnh vực y tế. Trong bài đăng blog cuối cùng của tôi trong loạt bài, “Bắt đầu với data lake dành cho lĩnh vực y tế: Đào sâu vào Amazon Cognito”, tôi tập trung vào các chi tiết cụ thể của việc sử dụng Amazon Cognito và Attribute Based Access Control (ABAC) để xác thực và ủy quyền người dùng trong giải pháp data lake y tế. Trong blog này, tôi trình bày chi tiết cách giải pháp đã phát triển ở cấp độ cơ bản, bao gồm các quyết định thiết kế mà tôi đã đưa ra và các tính năng bổ sung được sử dụng. Bạn có thể truy cập các code samples cho giải pháp tại Git repo này để tham khảo.\nHướng dẫn kiến trúc Thay đổi chính kể từ lần trình bày cuối cùng của kiến trúc tổng thể là việc tách dịch vụ đơn lẻ thành một tập hợp các dịch vụ nhỏ để cải thiện khả năng bảo trì và tính linh hoạt. Việc tích hợp một lượng lớn dữ liệu y tế khác nhau thường yêu cầu các trình kết nối chuyên biệt cho từng định dạng; bằng cách giữ chúng được đóng gói riêng biệt với microservices, chúng ta có thể thêm, xóa và sửa đổi từng trình kết nối mà không ảnh hưởng đến những kết nối khác. Các microservices được kết nối rời thông qua tin nhắn publish/subscribe tập trung trong cái mà tôi gọi là “pub/sub hub”.\nGiải pháp này đại diện cho những gì tôi sẽ coi là một lần lặp nước rút hợp lý khác từ last post của tôi. Phạm vi vẫn được giới hạn trong việc nhập và phân tích cú pháp đơn giản của các HL7v2 messages được định dạng theo Quy tắc mã hóa 7 (ER7) thông qua giao diện REST.\nKiến trúc giải pháp bây giờ như sau:\nHình 1. Kiến trúc tổng thể; những ô màu thể hiện những dịch vụ riêng biệt.\nMặc dù thuật ngữ microservices có một số sự mơ hồ cố hữu, một số đặc điểm là chung:\nChúng nhỏ, tự chủ, kết hợp rời rạc Có thể tái sử dụng, giao tiếp thông qua giao diện được xác định rõ Chuyên biệt để giải quyết một việc Thường được triển khai trong event-driven architecture Khi xác định vị trí tạo ranh giới giữa các microservices, cần cân nhắc:\nNội tại: công nghệ được sử dụng, hiệu suất, độ tin cậy, khả năng mở rộng Bên ngoài: chức năng phụ thuộc, tần suất thay đổi, khả năng tái sử dụng Con người: quyền sở hữu nhóm, quản lý cognitive load Lựa chọn công nghệ và phạm vi giao tiếp Phạm vi giao tiếp Các công nghệ / mô hình cần xem xét Trong một microservice Amazon Simple Queue Service (Amazon SQS), AWS Step Functions Giữa các microservices trong một dịch vụ AWS CloudFormation cross-stack references, Amazon Simple Notification Service (Amazon SNS) Giữa các dịch vụ Amazon EventBridge, AWS Cloud Map, Amazon API Gateway The pub/sub hub Việc sử dụng kiến trúc hub-and-spoke (hay message broker) hoạt động tốt với một số lượng nhỏ các microservices liên quan chặt chẽ.\nMỗi microservice chỉ phụ thuộc vào hub Kết nối giữa các microservice chỉ giới hạn ở nội dung của message được xuất Giảm số lượng synchronous calls vì pub/sub là push không đồng bộ một chiều Nhược điểm: cần phối hợp và giám sát để tránh microservice xử lý nhầm message.\nCore microservice Cung cấp dữ liệu nền tảng và lớp truyền thông, gồm:\nAmazon S3 bucket cho dữ liệu Amazon DynamoDB cho danh mục dữ liệu AWS Lambda để ghi message vào data lake và danh mục Amazon SNS topic làm hub Amazon S3 bucket cho artifacts như mã Lambda Chỉ cho phép truy cập ghi gián tiếp vào data lake qua hàm Lambda → đảm bảo nhất quán.\nFront door microservice Cung cấp API Gateway để tương tác REST bên ngoài Xác thực \u0026amp; ủy quyền dựa trên OIDC thông qua Amazon Cognito Cơ chế deduplication tự quản lý bằng DynamoDB thay vì SNS FIFO vì: SNS deduplication TTL chỉ 5 phút SNS FIFO yêu cầu SQS FIFO Chủ động báo cho sender biết message là bản sao Staging ER7 microservice Lambda “trigger” đăng ký với pub/sub hub, lọc message theo attribute Step Functions Express Workflow để chuyển ER7 → JSON Hai Lambda: Sửa format ER7 (newline, carriage return) Parsing logic Kết quả hoặc lỗi được đẩy lại vào pub/sub hub Tính năng mới trong giải pháp 1. AWS CloudFormation cross-stack references Ví dụ outputs trong core microservice:\nOutputs: Bucket: Value: !Ref Bucket Export: Name: !Sub ${AWS::StackName}-Bucket ArtifactBucket: Value: !Ref ArtifactBucket Export: Name: !Sub ${AWS::StackName}-ArtifactBucket Topic: Value: !Ref Topic Export: Name: !Sub ${AWS::StackName}-Topic Catalog: Value: !Ref Catalog Export: Name: !Sub ${AWS::StackName}-Catalog CatalogArn: Value: !GetAtt Catalog.Arn Export: Name: !Sub ${AWS::StackName}-CatalogArn "
},
{
	"uri": "http://localhost:1313/aws-fcj-report/vi/3-blogstranslated/3.5-blog5/",
	"title": "Blog 5",
	"tags": [],
	"description": "",
	"content": "Bắt đầu với healthcare data lakes: Sử dụng microservices Các data lake có thể giúp các bệnh viện và cơ sở y tế chuyển dữ liệu thành những thông tin chi tiết về doanh nghiệp và duy trì hoạt động kinh doanh liên tục, đồng thời bảo vệ quyền riêng tư của bệnh nhân. Data lake là một kho lưu trữ tập trung, được quản lý và bảo mật để lưu trữ tất cả dữ liệu của bạn, cả ở dạng ban đầu và đã xử lý để phân tích. data lake cho phép bạn chia nhỏ các kho chứa dữ liệu và kết hợp các loại phân tích khác nhau để có được thông tin chi tiết và đưa ra các quyết định kinh doanh tốt hơn.\nBài đăng trên blog này là một phần của loạt bài lớn hơn về việc bắt đầu cài đặt data lake dành cho lĩnh vực y tế. Trong bài đăng blog cuối cùng của tôi trong loạt bài, “Bắt đầu với data lake dành cho lĩnh vực y tế: Đào sâu vào Amazon Cognito”, tôi tập trung vào các chi tiết cụ thể của việc sử dụng Amazon Cognito và Attribute Based Access Control (ABAC) để xác thực và ủy quyền người dùng trong giải pháp data lake y tế. Trong blog này, tôi trình bày chi tiết cách giải pháp đã phát triển ở cấp độ cơ bản, bao gồm các quyết định thiết kế mà tôi đã đưa ra và các tính năng bổ sung được sử dụng. Bạn có thể truy cập các code samples cho giải pháp tại Git repo này để tham khảo.\nHướng dẫn kiến trúc Thay đổi chính kể từ lần trình bày cuối cùng của kiến trúc tổng thể là việc tách dịch vụ đơn lẻ thành một tập hợp các dịch vụ nhỏ để cải thiện khả năng bảo trì và tính linh hoạt. Việc tích hợp một lượng lớn dữ liệu y tế khác nhau thường yêu cầu các trình kết nối chuyên biệt cho từng định dạng; bằng cách giữ chúng được đóng gói riêng biệt với microservices, chúng ta có thể thêm, xóa và sửa đổi từng trình kết nối mà không ảnh hưởng đến những kết nối khác. Các microservices được kết nối rời thông qua tin nhắn publish/subscribe tập trung trong cái mà tôi gọi là “pub/sub hub”.\nGiải pháp này đại diện cho những gì tôi sẽ coi là một lần lặp nước rút hợp lý khác từ last post của tôi. Phạm vi vẫn được giới hạn trong việc nhập và phân tích cú pháp đơn giản của các HL7v2 messages được định dạng theo Quy tắc mã hóa 7 (ER7) thông qua giao diện REST.\nKiến trúc giải pháp bây giờ như sau:\nHình 1. Kiến trúc tổng thể; những ô màu thể hiện những dịch vụ riêng biệt.\nMặc dù thuật ngữ microservices có một số sự mơ hồ cố hữu, một số đặc điểm là chung:\nChúng nhỏ, tự chủ, kết hợp rời rạc Có thể tái sử dụng, giao tiếp thông qua giao diện được xác định rõ Chuyên biệt để giải quyết một việc Thường được triển khai trong event-driven architecture Khi xác định vị trí tạo ranh giới giữa các microservices, cần cân nhắc:\nNội tại: công nghệ được sử dụng, hiệu suất, độ tin cậy, khả năng mở rộng Bên ngoài: chức năng phụ thuộc, tần suất thay đổi, khả năng tái sử dụng Con người: quyền sở hữu nhóm, quản lý cognitive load Lựa chọn công nghệ và phạm vi giao tiếp Phạm vi giao tiếp Các công nghệ / mô hình cần xem xét Trong một microservice Amazon Simple Queue Service (Amazon SQS), AWS Step Functions Giữa các microservices trong một dịch vụ AWS CloudFormation cross-stack references, Amazon Simple Notification Service (Amazon SNS) Giữa các dịch vụ Amazon EventBridge, AWS Cloud Map, Amazon API Gateway The pub/sub hub Việc sử dụng kiến trúc hub-and-spoke (hay message broker) hoạt động tốt với một số lượng nhỏ các microservices liên quan chặt chẽ.\nMỗi microservice chỉ phụ thuộc vào hub Kết nối giữa các microservice chỉ giới hạn ở nội dung của message được xuất Giảm số lượng synchronous calls vì pub/sub là push không đồng bộ một chiều Nhược điểm: cần phối hợp và giám sát để tránh microservice xử lý nhầm message.\nCore microservice Cung cấp dữ liệu nền tảng và lớp truyền thông, gồm:\nAmazon S3 bucket cho dữ liệu Amazon DynamoDB cho danh mục dữ liệu AWS Lambda để ghi message vào data lake và danh mục Amazon SNS topic làm hub Amazon S3 bucket cho artifacts như mã Lambda Chỉ cho phép truy cập ghi gián tiếp vào data lake qua hàm Lambda → đảm bảo nhất quán.\nFront door microservice Cung cấp API Gateway để tương tác REST bên ngoài Xác thực \u0026amp; ủy quyền dựa trên OIDC thông qua Amazon Cognito Cơ chế deduplication tự quản lý bằng DynamoDB thay vì SNS FIFO vì: SNS deduplication TTL chỉ 5 phút SNS FIFO yêu cầu SQS FIFO Chủ động báo cho sender biết message là bản sao Staging ER7 microservice Lambda “trigger” đăng ký với pub/sub hub, lọc message theo attribute Step Functions Express Workflow để chuyển ER7 → JSON Hai Lambda: Sửa format ER7 (newline, carriage return) Parsing logic Kết quả hoặc lỗi được đẩy lại vào pub/sub hub Tính năng mới trong giải pháp 1. AWS CloudFormation cross-stack references Ví dụ outputs trong core microservice:\nOutputs: Bucket: Value: !Ref Bucket Export: Name: !Sub ${AWS::StackName}-Bucket ArtifactBucket: Value: !Ref ArtifactBucket Export: Name: !Sub ${AWS::StackName}-ArtifactBucket Topic: Value: !Ref Topic Export: Name: !Sub ${AWS::StackName}-Topic Catalog: Value: !Ref Catalog Export: Name: !Sub ${AWS::StackName}-Catalog CatalogArn: Value: !GetAtt Catalog.Arn Export: Name: !Sub ${AWS::StackName}-CatalogArn "
},
{
	"uri": "http://localhost:1313/aws-fcj-report/vi/3-blogstranslated/3.6-blog6/",
	"title": "Blog 6",
	"tags": [],
	"description": "",
	"content": "Bắt đầu với healthcare data lakes: Sử dụng microservices Các data lake có thể giúp các bệnh viện và cơ sở y tế chuyển dữ liệu thành những thông tin chi tiết về doanh nghiệp và duy trì hoạt động kinh doanh liên tục, đồng thời bảo vệ quyền riêng tư của bệnh nhân. Data lake là một kho lưu trữ tập trung, được quản lý và bảo mật để lưu trữ tất cả dữ liệu của bạn, cả ở dạng ban đầu và đã xử lý để phân tích. data lake cho phép bạn chia nhỏ các kho chứa dữ liệu và kết hợp các loại phân tích khác nhau để có được thông tin chi tiết và đưa ra các quyết định kinh doanh tốt hơn.\nBài đăng trên blog này là một phần của loạt bài lớn hơn về việc bắt đầu cài đặt data lake dành cho lĩnh vực y tế. Trong bài đăng blog cuối cùng của tôi trong loạt bài, “Bắt đầu với data lake dành cho lĩnh vực y tế: Đào sâu vào Amazon Cognito”, tôi tập trung vào các chi tiết cụ thể của việc sử dụng Amazon Cognito và Attribute Based Access Control (ABAC) để xác thực và ủy quyền người dùng trong giải pháp data lake y tế. Trong blog này, tôi trình bày chi tiết cách giải pháp đã phát triển ở cấp độ cơ bản, bao gồm các quyết định thiết kế mà tôi đã đưa ra và các tính năng bổ sung được sử dụng. Bạn có thể truy cập các code samples cho giải pháp tại Git repo này để tham khảo.\nHướng dẫn kiến trúc Thay đổi chính kể từ lần trình bày cuối cùng của kiến trúc tổng thể là việc tách dịch vụ đơn lẻ thành một tập hợp các dịch vụ nhỏ để cải thiện khả năng bảo trì và tính linh hoạt. Việc tích hợp một lượng lớn dữ liệu y tế khác nhau thường yêu cầu các trình kết nối chuyên biệt cho từng định dạng; bằng cách giữ chúng được đóng gói riêng biệt với microservices, chúng ta có thể thêm, xóa và sửa đổi từng trình kết nối mà không ảnh hưởng đến những kết nối khác. Các microservices được kết nối rời thông qua tin nhắn publish/subscribe tập trung trong cái mà tôi gọi là “pub/sub hub”.\nGiải pháp này đại diện cho những gì tôi sẽ coi là một lần lặp nước rút hợp lý khác từ last post của tôi. Phạm vi vẫn được giới hạn trong việc nhập và phân tích cú pháp đơn giản của các HL7v2 messages được định dạng theo Quy tắc mã hóa 7 (ER7) thông qua giao diện REST.\nKiến trúc giải pháp bây giờ như sau:\nHình 1. Kiến trúc tổng thể; những ô màu thể hiện những dịch vụ riêng biệt.\nMặc dù thuật ngữ microservices có một số sự mơ hồ cố hữu, một số đặc điểm là chung:\nChúng nhỏ, tự chủ, kết hợp rời rạc Có thể tái sử dụng, giao tiếp thông qua giao diện được xác định rõ Chuyên biệt để giải quyết một việc Thường được triển khai trong event-driven architecture Khi xác định vị trí tạo ranh giới giữa các microservices, cần cân nhắc:\nNội tại: công nghệ được sử dụng, hiệu suất, độ tin cậy, khả năng mở rộng Bên ngoài: chức năng phụ thuộc, tần suất thay đổi, khả năng tái sử dụng Con người: quyền sở hữu nhóm, quản lý cognitive load Lựa chọn công nghệ và phạm vi giao tiếp Phạm vi giao tiếp Các công nghệ / mô hình cần xem xét Trong một microservice Amazon Simple Queue Service (Amazon SQS), AWS Step Functions Giữa các microservices trong một dịch vụ AWS CloudFormation cross-stack references, Amazon Simple Notification Service (Amazon SNS) Giữa các dịch vụ Amazon EventBridge, AWS Cloud Map, Amazon API Gateway The pub/sub hub Việc sử dụng kiến trúc hub-and-spoke (hay message broker) hoạt động tốt với một số lượng nhỏ các microservices liên quan chặt chẽ.\nMỗi microservice chỉ phụ thuộc vào hub Kết nối giữa các microservice chỉ giới hạn ở nội dung của message được xuất Giảm số lượng synchronous calls vì pub/sub là push không đồng bộ một chiều Nhược điểm: cần phối hợp và giám sát để tránh microservice xử lý nhầm message.\nCore microservice Cung cấp dữ liệu nền tảng và lớp truyền thông, gồm:\nAmazon S3 bucket cho dữ liệu Amazon DynamoDB cho danh mục dữ liệu AWS Lambda để ghi message vào data lake và danh mục Amazon SNS topic làm hub Amazon S3 bucket cho artifacts như mã Lambda Chỉ cho phép truy cập ghi gián tiếp vào data lake qua hàm Lambda → đảm bảo nhất quán.\nFront door microservice Cung cấp API Gateway để tương tác REST bên ngoài Xác thực \u0026amp; ủy quyền dựa trên OIDC thông qua Amazon Cognito Cơ chế deduplication tự quản lý bằng DynamoDB thay vì SNS FIFO vì: SNS deduplication TTL chỉ 5 phút SNS FIFO yêu cầu SQS FIFO Chủ động báo cho sender biết message là bản sao Staging ER7 microservice Lambda “trigger” đăng ký với pub/sub hub, lọc message theo attribute Step Functions Express Workflow để chuyển ER7 → JSON Hai Lambda: Sửa format ER7 (newline, carriage return) Parsing logic Kết quả hoặc lỗi được đẩy lại vào pub/sub hub Tính năng mới trong giải pháp 1. AWS CloudFormation cross-stack references Ví dụ outputs trong core microservice:\nOutputs: Bucket: Value: !Ref Bucket Export: Name: !Sub ${AWS::StackName}-Bucket ArtifactBucket: Value: !Ref ArtifactBucket Export: Name: !Sub ${AWS::StackName}-ArtifactBucket Topic: Value: !Ref Topic Export: Name: !Sub ${AWS::StackName}-Topic Catalog: Value: !Ref Catalog Export: Name: !Sub ${AWS::StackName}-Catalog CatalogArn: Value: !GetAtt Catalog.Arn Export: Name: !Sub ${AWS::StackName}-CatalogArn "
},
{
	"uri": "http://localhost:1313/aws-fcj-report/vi/5-workshop/5.4-s3-onprem/5.4.1-prepare/",
	"title": "Chuẩn bị tài nguyên",
	"tags": [],
	"description": "",
	"content": "Để chuẩn bị cho phần này của workshop, bạn sẽ cần phải:\nTriển khai CloudFormation stack Sửa đổi bảng định tuyến VPC. Các thành phần này hoạt động cùng nhau để mô phỏng DNS forwarding và name resolution.\nTriển khai CloudFormation stack Mẫu CloudFormation sẽ tạo các dịch vụ bổ sung để hỗ trợ mô phỏng môi trường truyền thống:\nMột Route 53 Private Hosted Zone lưu trữ các bản ghi Bí danh (Alias records) cho điểm cuối PrivateLink S3 Một Route 53 Inbound Resolver endpoint cho phép \u0026ldquo;VPC Cloud\u0026rdquo; giải quyết các yêu cầu resolve DNS gửi đến Private Hosted Zone Một Route 53 Outbound Resolver endpoint cho phép \u0026ldquo;VPC On-prem\u0026rdquo; chuyển tiếp các yêu cầu DNS cho S3 sang \u0026ldquo;VPC Cloud\u0026rdquo; Click link sau để mở AWS CloudFormation console. Mẫu yêu cầu sẽ được tải sẵn vào menu. Chấp nhận tất cả mặc định và nhấp vào Tạo stack. Có thể mất vài phút để triển khai stack hoàn tất. Bạn có thể tiếp tục với bước tiếp theo mà không cần đợi quá trình triển khai kết thúc.\nCập nhật bảng định tuyến private on-premise Workshop này sử dụng StrongSwan VPN chạy trên EC2 instance để mô phỏng khả năng kết nối giữa trung tâm dữ liệu truyền thống và môi trường cloud AWS. Hầu hết các thành phần bắt buộc đều được cung cấp trước khi bạn bắt đầu. Để hoàn tất cấu hình VPN, bạn sẽ sửa đổi bảng định tuyến \u0026ldquo;VPC on-prem\u0026rdquo; để hướng lưu lượng đến cloud đi qua StrongSwan VPN instance.\nMở Amazon EC2 console\nChọn instance tên infra-vpngw-test. Từ Details tab, copy Instance ID và paste vào text editor của bạn để sử dụng ở những bước tiếp theo\nĐi đến VPC menu bằng cách gõ \u0026ldquo;VPC\u0026rdquo; vào Search box\nClick vào Route Tables, chọn RT Private On-prem route table, chọn Routes tab, và click Edit Routes.\nClick Add route. Destination: CIDR block của Cloud VPC Target: ID của infra-vpngw-test instance (bạn đã lưu lại ở bước trên) Click Save changes "
},
{
	"uri": "http://localhost:1313/aws-fcj-report/vi/4-eventparticipated/4.1-event1/",
	"title": "Event 1",
	"tags": [],
	"description": "",
	"content": "Bài thu hoạch “Vietnam Cloud Day 2025: Ho Chi Minh City Connect Edition for Builders (Track 2: Migration \u0026amp; Modernization)” Mục Đích Của Sự Kiện Hoàn thành quá trình di chuyển và hiện đại hóa quy mô lớn với AWS Hiện đại hóa ứng dụng bằng các công cụ hỗ trợ AI tạo sinh Thảo luận nhóm: Hiện đại hóa ứng dụng: Đẩy nhanh quá trình chuyển đổi kinh doanh Chuyển đổi VMware với công nghệ hiện đại hóa đám mây dựa trên AI Bảo mật AWS ở quy mô lớn: Từ phát triển đến sản xuất Danh Sách Diễn Giả Nguyen Van Hai - Director of Software Engineering, Techcombank Nguyen The Vinh - Co-Founder \u0026amp; CTO, Ninety Eight Nguyen Minh Nganh - AI Specialist, OCB Nguyen Manh Tuyen - Head of Data Application, LPBank Securities Nội Dung Nổi Bật 1. Tìm hiểu về các chiến lược di chuyển và hiện đại hóa quy mô lớn với AWS thông qua các nghiên cứu điển hình thực tế từ Techcombank. Hành trình hiện đại hóa của Techcombank\nAssess: Đánh giá được môi trường kiểm kê, và xác định được khoảng trống. Mobilize: Thiết lập CCoE, xác định hàng rào, xây dựng sự lưu loát của điện toán đám mây. Migrate \u0026amp; Modernize: Ưu tiên khối lượng công việc có tác động cao Reinvent: AI, tự động hóa, sản phẩm dữ liệu, mô hình doanh mới. Generative trong hiện đại hóa quy mô.\nCode Transformation: Java 8 -\u0026gt; 21, .NET -\u0026gt; .NET 8 Dependency Mapping: Lập bản đồ phụ thuộc để phân tích tự động các mối quan hệ của hệ thống. Environment Assessment: Amazon có hàng ngàn dịch vụ hiện tại hóa với AI có thể đáp ứng được cho doanh nghiệp. Giải pháp và chiến lược mà Techcombank đã ứng dụng trong việc dùng các dịch vụ của AWS.\nAmazon EKS Amazon Aurora MySQL Amazon MSK Amazon ElastiCache for Redis OSS. Tổng quan về chiến lược Modernization Strategy Blueprint. Hiện đại hóa với các công nghệ gốc của AWS.\nAlign: Tài trợ việc triển khai và động lực doanh nghiệp. | Assess: Hiểu rõ về con người, quy trình, và công nghệ | Mobilize: CoE, quản trị, đào tạo | Modernize: Replatform, refactor, rebuild | Reinvent: Data, AI và hiện đại hóa các ứng dụng cho sự đổi mới 2. Tìm hiểu về việc hiện đại hóa ứng dụng bằng các công cụ Generative AI, với những hiểu biết thực tế từ VPBank Hiện đại hóa là quá trình chuyển đổi dần dần các ứng dụng để đạt được lợi ích về tính khả dụng, khả năng mở rộng, tính linh hoạt trong kinh doanh và tối ưu hóa chi phí khi chạy trên nền tảng đám mây Top 4 trường hợp sử dụng hàng đầu - Hiện đại hóa ứng dụng với Generative AI.\nUse case 1: Streamline VMware Migration with AWS Transform for VMware\nĐẩy nhanh quá trình di chuyển và hiện đại hóa cơ sở hạ tầng với khám phá thông minh và thực thi tự động\nRút ngắn thời gian di chuyển VMware với tính năng tự động hóa thông minh của AWS Transform.\nChuyển đổi các cấu hình mạng phức tạp chỉ trong vài giờ thay vì vài tuần nhờ tính năng khám phá, ánh xạ phụ thuộc và lập kế hoạch làn sóng tự động do AWS cung cấp.\nMở rộng quy trình di chuyển của bạn với tính năng tạo nhóm bảo mật tự động, lựa chọn phiên bản EC2 thông minh và các tùy chọn triển khai linh hoạt, bao gồm cấu hình VPC dạng hub-and-spoke hoặc cấu hình VPC riêng biệt.\nCải thiện thời gian thực hiện lên đến 90%, đồng thời giảm 80% công sức thủ công.\nUse case 2: GenAl Development with AWS Serverless and Container Solutions\nXây dựng các ứng dụng GenAl sẵn sàng cho doanh nghiệp trên nền tảng AWS Serverless và Container\nAWS cung cấp hai giải pháp mạnh mẽ cho việc phát triển và triển khai ứng dụng GenAl:\nKhông máy chủ với AWS Bedrock: Phát triển và triển khai nhanh chóng các ứng dụng GenAl bằng AWS Lambda, ECS với Fargate, Step Functions và EventBridge. Lý tưởng cho chatbot, tạo tài liệu và xử lý nội dung thông minh. Tận dụng các bản cập nhật và kiến ​​trúc tham chiếu mới nhất của AWS Bedrock.\nDựa trên container với Amazon EKS: Xây dựng, đào tạo và chạy các ứng dụng GenAl trên Kubernetes, tận dụng khả năng điều phối mạnh mẽ của nó. Sử dụng các công cụ nguồn mở và dịch vụ đám mây gốc cho khối lượng công việc GenAl có khả năng mở rộng. Triển khai linh hoạt trên cả môi trường đám mây và tại chỗ với sự đổi mới liên tục từ cộng đồng OSS.\nChọn một trong hai cách tiếp cận hoặc kết hợp cả hai để phù hợp nhất với yêu cầu ứng dụng GenAl cụ thể của bạn và đẩy nhanh hành trình AI của bạn.\nUse case 3: Revolutionize NET Modernization with AWS Transform for NET\nChuyển đổi các ứng dụng Windown cũ sang Cloud-native với tự động hóa được hỗ trợ bởi AI-powered.\nHiện đại hóa các ứng dụng chạy trên Windows nhanh hơn tới 4 lần với AWS Transform for NET. Tận dụng khả năng tự động hóa của AI để phân tích các phụ thuộc, tái cấu trúc mã và tối ưu hóa cho việc triển khai Linux, đồng thời cắt giảm chi phí cấp phép tới 40%. Chuyển đổi hàng trăm ứng dụng song song với khả năng kiểm tra và xác thực tự động - từ các ứng dụng MVC cũ sang các dịch vụ WCF. Các tính năng nâng cao bao gồm hiện đại hóa Ul tự động, xử lý gói riêng và lập kế hoạch sóng thông minh, mang lại khả năng hiện đại hóa toàn diện với tốc độ vượt trội. Use case 4: Nâng cao Kỹ thuật Nền tảng với Gen Al \u0026amp; IDP\nTận dụng sức mạnh của các trợ lý thông minh như AWS Transform Developer với Nền tảng phát triển nội bộ.\nViệc mở rộng quy mô hiện đại hóa ở cấp độ doanh nghiệp đòi hỏi thời gian và đầu tư để phát triển Nền tảng Phát triển Nội bộ (IDP). Gartner dự đoán rằng đến năm 2026, 80% các tổ chức kỹ thuật phần mềm sẽ thành lập các nhóm nền tảng với tư cách là nhà cung cấp nội bộ các dịch vụ, thành phần và công cụ có thể tái sử dụng để triển khai ứng dụng.\nKhai thác sức mạnh của các trợ lý thông minh như AWS Transform Developer với IDP để:\nTạo quy trình làm việc và tự động hóa các tác vụ lặp lại.\nTìm hiểu các phương pháp hay nhất của IDP từ các tổ chức hàng đầu, chẳng hạn như Adobe, Expedia, JPMC và Goldman Sachs.\nHiểu rõ các bản thiết kế container và kiến ​​trúc tham chiếu của AWS để mang lại tốc độ và khả năng mở rộng nhanh chóng cho sáng kiến ​​hiện đại hóa quy mô doanh nghiệp.\nCác động lực hiện đại hóa phổ biến\nGiảm chi phí\nGiảm/loại bỏ chi phí bản quyền Windows \u0026amp; SQL Server Xây dựng kiến trúc khớp với tải thực tế để tối ưu chi phí Tận dụng kiến trúc ARM64 để có hiệu năng/giá thành tốt hơn Tăng tốc độ đổi mới\nTách monolith thành các dịch vụ nhỏ hơn / microservices Tận dụng công nghệ mới và các tính năng ngôn ngữ C# Tự động hóa các quy trình thủ công Cải thiện khả năng mở rộng\nMở rộng từng thành phần / dịch vụ riêng lẻ Mở rộng chi tiết với containers / serverless Thu hút và giữ chân nhân tài\n3. Nhận thông tin chuyên sâu từ các chuyên gia hàng đầu trong ngành thông qua các buổi thảo luận chuyên đề về hiện đại hóa ứng dụng .NET Framework so với đa nền tảng .NET\n.NET Framework:\nChỉ hệ điều hành Windows Phiên bản 1.0 được phát hành vào năm 2002 Phiên bản cuối cùng là 4.8*, phát hành năm 2019 Cài đặt nguyên khối - Số lượng lớn các thư viện được cài đặt cùng một lúc. EC2, Elastic Beanstalk, ECS và EKS. .NET (trước đây là .NET Core)\nĐa nền tảng (Windows, Linux, MacOS) Phiên bản 1.0 được phát hành năm 2016 Phiên bản GA hiện tại là 8.0, được phát hành vào năm 2023 Hỗ trợ nhiều phiên bản để cài đặt Hầu hết các thư viện được phân phối riêng lẻ EC2, Elastic Beanstalk, ECS, EKS, Lambda Fargate AWS Transform: Trí thông minh được phối hợp\nTrải nghiệm web thống nhất -\u0026gt; Tự động hóa đầu cuối -\u0026gt; Cơ quan chuyên trách -\u0026gt; Định hướng mục tiêu -\u0026gt; Con người trong vòng lặp -\u0026gt; Hợp tác được đơn giản hóa AWS Transform cho .NET\nLợi ích khách hàng\nGiảm chi phí vận hành lên đến 40% Loại bỏ thương mại giấy phép hệ điều hành Tiếp cận nhóm nhà phát triển lớn hơn Quy mô đám mây và hiệu suất. Lợi ích kỹ thuật\nHỗ trợ khắc phục lỗ hổng bảo mật Hỗ trợ đa nền tảng: Windows, macOS, Linux (x86-64, arm64) Tương thích với x86-64 và arm64 LightweightContainer Kiến trúc Lambda Serverless Hoàn thành nâng cấp ngôn ngữ trong vài phút thông qua Amazon Q\nĐẩy nhanh hiện đại hóa ứng dụng Nâng cấp Ngôn ngữ Tự động (Java, .NET) Giảm Nợ Kỹ thuật Tiết kiệm Chi phí và Hiệu quả Vận hành Nâng cao Lợi thế Cạnh tranh Ứng dụng Kiro: Giải pháp cho việc phát triển theo thông số kĩ thuật\nKiro giúp các nhà phát triển và nhóm kỹ thuật vận chuyển phần mềm chất lượng cao với các tác nhân AI. Kiro biến lời nhắc của bạn thành các yêu cầu rõ ràng, thiết kế hệ thống và các nhiệm vụ riêng biệt Lặp lại với Kiro trên thông số kỹ thuật và kiến ​​trúc của bạn Các tác nhân Kiro triển khai thông số kỹ thuật trong khi vẫn giúp bạn kiểm soát. Agent hook\nPhân quyền các tác vụ cho các tác nhân Al được kích hoạt khi có sự kiện như \u0026rsquo;lưu tệp' Các tác nhân tự động thực thi ở chế độ nền dựa trên các lời nhắc được xác định trước của bạn Các hook tác nhân giúp bạn mở rộng quy mô công việc bằng cách tạo tài liệu, kiểm tra đơn vị hoặc tối ưu hóa hiệu suất mã Quản lí ngữ cảnh nâng cao\nKết nối với tài liệu, cơ sở dữ liệu, API và nhiều hơn nữa với tích hợp MCP gốc Cấu hình cách bạn muốn các tác nhân Kiro tương tác với từng dự án thông qua các tệp chỉ đạo Thả một hình ảnh về thiết kế Ul của bạn hoặc một bức ảnh về buổi thảo luận kiến ​​trúc của bạn và Kiro có thể sử dụng nó để hướng dẫn việc triển khai Sức mạnh, tính linh hoạt và bảo mật\nTương thích với VS code\nKiro hỗ trợ plugin, theme và cài đặt VS Code Open VSX trong môi trường Al-ready được sắp xếp hợp lý Các mô hình Claude tiên tiến\nLựa chọn giữa các mô hình Claude Sonnet 3.7 hoặc Sonnet 4, với nhiều tùy chọn hơn sẽ sớm được bổ sung Bảo mật cấp doanh nghiệp\nKiro được xây dựng và vận hành bởi AWS Các trường hợp sử dụng\nXây dựng ứng dụng mới\nNhanh chóng chuyển từ nguyên mẫu sang mã sản xuất và triển khai, với các phương pháp hay nhất được tích hợp sẵn, bao gồm thiết kế có cấu trúc, tài liệu hướng dẫn hoặc phạm vi kiểm thử Xây dựng trên các ứng dụng hiện có\nVới thông số kỹ thuật và quản lý ngữ cảnh thông minh, Kiro giúp bạn dễ dàng tích hợp và xây dựng trên các ứng dụng hiện có mà vẫn duy trì tính nhất quán Tái cấu trúc và hiện đại hóa\nKiro hiểu rõ cơ sở mã của bạn và có thể hướng dẫn bạn chính xác trong việc tái cấu trúc hơn một triệu cơ sở mã LOC 4. Tìm hiểu về hiện đại hóa đám mây dựa trên AI dành riêng cho môi trường VMware Trạng thái tương lai của khối lượng công việc VMware của bạn\nRELOCATE: Amazon EVS | REHOST: Amazon EC2 | REPLATFORM TO CONTAINERS: Amazon ECS or Amazon EKS | REPLATFORM TO MANAGED SERVICES: Amazon RDS, Amazon FSx, Amazon WorkSpaces, and more | REFACTOR: Modern Application =\u0026gt; Áp dụng nhanh chóng, nền tảng của lợi ích đám mây và ROI nhanh....................----\u0026gt;....................Tất cả các lợi ích gốc của đám mây và ROl cao Chuyển đổi AWS cho VMware\nHiện đại hóa khối lượng công việc VMware lên Amazon EC2 với các tác nhân AI được thiết kế riêng Tự động hóa và đơn giản hóa các tác vụ chuyển đổi Giảm chi phí và phí cấp phép với Amazon EC2 Nâng cao bảo mật, khả năng mở rộng và phục hồi Thúc đẩy đổi mới với hơn 200 dịch vụ gốc của AWS Lập bản đồ công nghệ gốc từ VMware sang AWS\nMột cách tiếp cận dựa trên AI của agentic để hiện đại hóa VMware\n1. Kết nối với môi trường VMware của bạn | 2. Phân tích khối lượng công việc, sự phụ thuộc và mức độ sẵn sàng | 3. Chuyển đổi cấu hình mạng VMware sang các cấu trúc AWS gốc | 4. Tạo các kế hoạch sóng thông minh dựa trên sự phụ thuộc của ứng dụng | 5. Xác thực với nhóm của bạn, sau đó thực hiện =\u0026gt; Chuyển đổi từng bước với xác thực human-in-the-loop Lí do AWS Transform dành cho việc di chuyển sang VMware?\nChi phí thấp hơn\nLoại bỏ phí cấp phép VMware Tối ưu hóa chi phí cơ sở hạ tầng với khả năng điều chỉnh kích thước phiên bản do AI điều khiển Di chuyển nhanh hơn\nTăng tốc chuyển đổi mạng lên đến 80 lần Giảm thiểu gián đoạn, bảo toàn tính toàn vẹn của ứng dụng và đẩy nhanh quá trình chuyển đổi Cải thiện bảo mật\nTăng cường bảo mật với nền tảng đám mây gốc Di chuyển an toàn với quy trình xác thực human-in-the-loop Đổi mới ở quy mô lớn\nGiảm nợ kỹ thuật và xây dựng các ứng dụng hiện đại, có khả năng mở rộng Tích hợp liền mạch với hơn 200 dịch vụ gốc của AWS như data lakes, phân tích nâng cao và AI/ML 5. Kết nối và học hỏi trực tiếp từ các Kiến trúc sư Giải pháp AWS và các chuyên gia trong ngành Phần này các chuyên gia đưa ra những vấn đề khó khăn khi những bước đầu triển khai hiện đại hóa toàn bộ hệ thống từ on-premises lên AWS.\nHọ đưa ra những kế hoạch và chiến lược cụ thể ở từng phần, và họ chuyển những phần quan trọng nhất và thực hiện nó trước. Trong đó họ cũng tuân thủ các quy định và luật pháp hiện hành trong việc quản lí và không thu thập thông tin người dùng. Khi họ đưa lên AWS điều quan trọng nhất là họ có thể mở rộng quy mô của mình rất nhanh, và do đó họ nhận được rất nhiều lợi nhuận khi chuyển lên môi trường AWS. Và việc ứng dụng AI hiện nay rất hiệu quả trong công việc kinh doanh của họ, như anh Vinh đã ứng dụng AI trong việc nhận biết những giao dịch có khả năng lừa đảo, chống Hacker trong Blockchain. 6. Hiểu các phương pháp hay nhất về bảo mật AWS từ phát triển đến môi trường sản xuất Những Gì Học Được Khung 5 bước: Align → Assess → Mobilize → Modernize → Reinvent. GenAI-assisted modernization: code transformation (Java 8→21, .NET→8), dependency mapping, environment assessment. Ưu tiên workloads tác động cao, human-in-the-loop, đo ROI. Tư Duy Thiết Kế Problem→Pilot→Scale; ưu tiên value-first. Strangler Fig refactor từng phần; event-driven mindset. Platform thinking/IDP, security-by-design, governance sớm. Kiến Trúc Kỹ Thuật Microservices, containers (EKS/ECS/Fargate), serverless (Lambda/Step Functions/EventBridge). Data: Aurora MySQL, MSK (Kafka), ElastiCache (Redis). VMware→AWS: rehost EC2 → replatform containers/managed → refactor app. Multi-arch (x86_64 + ARM64), observability end-to-end. Chiến Lược Hiện Đại Hóa Assess/Mobilize/MM/Reinvent (Techcombank blueprint). AWS Transform: for VMware \u0026amp; .NET (tự động hóa di trú/kiểm thử/UL modernization). Cost-first: bỏ license Windows/SQL, right-size, ARM64. Scale \u0026amp; Innovate: tách monolith, automation CI/CD, adopt GenAI. Ứng Dụng Vào Công Việc Lập migration backlog theo ROI; chọn pilot nhỏ. Chuẩn hóa container baseline (EKS) + Bedrock pattern cho GenAI. Dùng Amazon Q/Transform để nâng cấp ngôn ngữ \u0026amp; refactor nhanh. Thiết kế IDP nội bộ: template dịch vụ, golden path, policy guardrails. Trải nghiệm trong event “GenAI-powered Migration \u0026amp; Modernization mang lại cái nhìn toàn diện về cách chuyển đổi ứng dụng \u0026amp; DB ở quy mô doanh nghiệp. Điểm nổi bật: demo tự động hóa di chuyển VMware/.NET, kiến trúc tham chiếu serverless–container, bài học định lượng ROI và mô hình governance thực chiến, cùng case study giúp rút ngắn thời gian di chuyển và giảm chi phí đáng kể.”\nHọc hỏi từ các diễn giả có chuyên môn cao Techcombank: vận hành theo CCoE, đo business outcomes, lộ trình 5 bước. Ninety Eight: AI chống gian lận, security posture mạnh, realtime. OCB/LPBankS: data products, automation, cloud scale an toàn. Trải nghiệm kỹ thuật thực tế Thấy rõ dependency mapping, wave planning, auto SG/EC2 sizing, hub-and-spoke VPC. Auto code upgrade, cross-platform .NET, UI modernization tự động. Ứng dụng công cụ hiện đại AWS Transform (VMware/.NET), Amazon Q (auto language upgrade). Bedrock, Lambda, ECS/Fargate, EKS, Step Functions, EventBridge. Aurora, MSK, ElastiCache, EC2; IDP tooling; Kiro (spec→tasks/agents, MCP). Kết nối và trao đổi Chốt best practices từ SA \u0026amp; ngân hàng lớn; checklist governance/security. Kết nối để mentorship, pattern reuse, đối chiếu ROI \u0026amp; benchmark. Event tạo cơ hội trao đổi trực tiếp với các chuyên gia, đồng nghiệp và team business, giúp nâng cao ngôn ngữ chung (ubiquitous language) giữa business và tech. Bài học rút ra Việc áp dụng DDD và event-driven patterns giúp giảm coupling, tăng scalability và resilience cho hệ thống.\nChiến lược hiện đại hóa cần phased approach và đo lường ROI, không nên vội vàng chuyển đổi toàn bộ hệ thống.\nCác công cụ AI như Amazon Q Developer có thể boost productivity nếu được tích hợp vào workflow phát triển hiện tại.\nModernize có chiến lược: đo lường ROI, ưu tiên theo giá trị.\nTự động hóa + GenAI rút ngắn thời gian, giảm nợ kỹ thuật.\nPlatform/IDP là đòn bẩy quy mô; security-by-default không thể thiếu.\nHuman-in-the-loop đảm bảo an toàn khi tự động hóa diện rộng.\nMột số hình ảnh khi tham gia sự kiện Hơn 400 nhà phát triển công nghệ đầy nhiệt huyết tại Thành phố Hồ Chí Minh, văn phòng AWS (Tầng 36) đã tụ họp để theo dõi phiên họp toàn thể trực tiếp từ Hà Nội, cùng chia sẻ sự phấn khích và kiến ​​thức về AWS Cloud Day Vietnam 2025\nTổng thể, sự kiện không chỉ cung cấp kiến thức kỹ thuật mà còn giúp tôi thay đổi cách tư duy về thiết kế ứng dụng, hiện đại hóa hệ thống và phối hợp hiệu quả hơn giữa các team.\n"
},
{
	"uri": "http://localhost:1313/aws-fcj-report/vi/5-workshop/5.1-workshop-overview/",
	"title": "Giới thiệu",
	"tags": [],
	"description": "",
	"content": "Giới thiệu về VPC Endpoint Điểm cuối VPC (endpoint) là thiết bị ảo. Chúng là các thành phần VPC có thể mở rộng theo chiều ngang, dự phòng và có tính sẵn sàng cao. Chúng cho phép giao tiếp giữa tài nguyên điện toán của bạn và dịch vụ AWS mà không gây ra rủi ro về tính sẵn sàng. Tài nguyên điện toán đang chạy trong VPC có thể truy cập Amazon S3 bằng cách sử dụng điểm cuối Gateway. Interface Endpoint PrivateLink có thể được sử dụng bởi tài nguyên chạy trong VPC hoặc tại TTDL. Tổng quan về workshop Trong workshop này, bạn sẽ sử dụng hai VPC.\n\u0026ldquo;VPC Cloud\u0026rdquo; dành cho các tài nguyên cloud như Gateway endpoint và EC2 instance để kiểm tra. \u0026ldquo;VPC On-Prem\u0026rdquo; mô phỏng môi trường truyền thống như nhà máy hoặc trung tâm dữ liệu của công ty. Một EC2 Instance chạy phần mềm StrongSwan VPN đã được triển khai trong \u0026ldquo;VPC On-prem\u0026rdquo; và được cấu hình tự động để thiết lập đường hầm VPN Site-to-Site với AWS Transit Gateway. VPN này mô phỏng kết nối từ một vị trí tại TTDL (on-prem) với AWS cloud. Để giảm thiểu chi phí, chỉ một phiên bản VPN được cung cấp để hỗ trợ workshop này. Khi lập kế hoạch kết nối VPN cho production workloads của bạn, AWS khuyên bạn nên sử dụng nhiều thiết bị VPN để có tính sẵn sàng cao. "
},
{
	"uri": "http://localhost:1313/aws-fcj-report/vi/1-worklog/",
	"title": "Nhật ký công việc",
	"tags": [],
	"description": "",
	"content": "Trong trang này bạn sẽ cần giới thiệu worklog của bạn như thế nào? Bạn hoàn thành chương trình trong vòng bao nhiêu tuần? Bạn đã làm gì trong các tuần đó?\nThông thường và cũng là tiêu chuẩn, một worklog được thực hiện trong khoảng 3 tháng (trong suốt thời gian thực tập) với nội dung các tuần như sau:\nTuần 1: Làm quen với các nền tảng AWS và tìm hiểu về chương trình FCJ 2025\nTuần 2: Dịch vụ mạng trên AWS (AWS VPC, VPC Peering \u0026amp; Transit Gateway, VPN \u0026amp; Direct Connect, Elastic Load Balancing)\nTuần 3: Dịch vụ Compute VM trên AWS (Amazon EC2, Amazon Lighsail, Amazon EFS/FSX, AWS Application Migration Service (MGN) Tuần 4: Dịch vụ lưu trữ trên AWS (S3, Snow Family, Amazon Storage Gateway, Disaster Recovery on AWS, AWS Backup)\nTuần 5: Dịch vụ Bảo Mật trên AWS - \u0026ldquo;Security is job zero\u0026rdquo; (Share Responsibility Model, AWS Identify and Access Management, Amazon Cognito, AWS Organization, AWS Identify Center (SSO), AWS Key Management Service - KMS, AWS Security Hub)\nTuần 6: Dịch vụ Cơ sở dữ liệu trên AWS (Database Concepts, Amazon RDS, Amazon Aurora, Amazon Redshift, Amazon ElastiCache)\nTuần 7: Làm công việc G\u0026hellip;\nTuần 8: Làm công việc H\u0026hellip;\nTuần 9: Làm công việc I\u0026hellip;\nTuần 10: Làm công việc L\u0026hellip;\nTuần 11: Làm công việc M\u0026hellip;\nTuần 12: Làm công việc N\u0026hellip;\n"
},
{
	"uri": "http://localhost:1313/aws-fcj-report/vi/5-workshop/5.3-s3-vpc/5.3.1-create-gwe/",
	"title": "Tạo một Gateway Endpoint",
	"tags": [],
	"description": "",
	"content": " Mở Amazon VPC console Trong thanh điều hướng, chọn Endpoints, click Create Endpoint: Bạn sẽ thấy 6 điểm cuối VPC hiện có hỗ trợ AWS Systems Manager (SSM). Các điểm cuối này được Mẫu CloudFormation triển khai tự động cho workshop này.\nTrong Create endpoint console: Đặt tên cho endpoint: s3-gwe Trong service category, chọn aws services Trong Services, gõ \u0026ldquo;s3\u0026rdquo; trong hộp tìm kiếm và chọn dịch vụ với loại gateway Đối với VPC, chọn VPC Cloud từ drop-down menu. Đối với Route tables, chọn bảng định tuyến mà đã liên kết với 2 subnets (lưu ý: đây không phải là bảng định tuyến chính cho VPC mà là bảng định tuyến thứ hai do CloudFormation tạo). Đối với Policy, để tùy chọn mặc định là Full access để cho phép toàn quyền truy cập vào dịch vụ. Bạn sẽ triển khai VPC endpoint policy trong phần sau để chứng minh việc hạn chế quyền truy cập vào S3 bucket dựa trên các policies. Không thêm tag vào VPC endpoint. Click Create endpoint, click x sau khi nhận được thông báo tạo thành công. "
},
{
	"uri": "http://localhost:1313/aws-fcj-report/vi/1-worklog/1.1-week1/",
	"title": "Worklog Tuần 1",
	"tags": [],
	"description": "",
	"content": "Mục tiêu tuần 1: Kết nối với những bạn trong team và làm quen với các anh chị Champion trong First Cloud Journey. Tìm hiểu về các dịch vụ của AWS đem lại cho khách hàng. Hoàn thành bài Lab cũng như kiến thức của Module 1 trong FJC 2025 Các công việc cần triển khai trong tuần này: Thứ Công việc Ngày bắt đầu Ngày kết thúc Nguồn tài liệu và ghi chú học tập 2 - Đọc kĩ các lưu ý, nội quy và quy định tại AWS\n- Kết nối và giao lưu với các thành viên trong team\n- Lập nhóm và lên kế hoạch học tập cũng như về timing của dự án cần chuẩn bị trong kì thực tập tại doanh nghiệp.\n- Tạo google sheet để quản lí việc học tập và cũng như theo dõi tiến độ của thành viên trong team. 08/09/2025 08/09/2025 - Documentation: https://cloudjourney.awsstudygroup.com/\n- Youtube: https://youtube.com/playlist?list=PLahN4TLWtox2a3vElknwzU_urND8hLn1i\u0026si=W80Cdf_fSc6sjOV\n- Notes: https://github.com/DazielNguyen/aws-fcj-report/blob/main/TAKE_NOTES_%26_LABS/Module_01/Take_notes_module_01.md 3 - Tìm hiểu về các khái niệm cơ bản:\n+ Hiểu về điện toán đám mây là gì?\n+ Lợi ích của việc sử dụng điện toán đám mây là gì?.\n+ Điều gì tạo nên sự khác biệt của AWS.\n+ Làm sao để bắt đầu một hành trình lên mây? 09/09/2025 09/09/2025 - Documentation: https://cloudjourney.awsstudygroup.com/\n- Youtube: https://youtube.com/playlist?list=PLahN4TLWtox2a3vElknwzU_urND8hLn1i\u0026si=W80Cdf_fSc6sjOV\n- Notes: https://github.com/DazielNguyen/aws-fcj-report/blob/main/TAKE_NOTES_%26_LABS/Module_01/Take_notes_module_01.md\" 4 - Tìm hiểu về hạ tầng toàn cầu của AWS.\n- Tìm hiểu về công cụ Quản Lý AWS Services.\n- Cách tối ưu hóa chi phí trên AWS.\n- Thực hành Lab 01:\n+ Tạo AWS account.\n+ Cài MFA cho tài khoản cũng như hiểu về MFA là gì?\n+ Tạo Admin Group và Admin User.\n+ Thử nghiệm dùng AWS Support. 10/09/2025 10/09/2025 - Documentation: https://cloudjourney.awsstudygroup.com/\n- Youtube: https://youtube.com/playlist?list=PLahN4TLWtox2a3vElknwzU_urND8hLn1i\u0026si=W80Cdf_fSc6sjOV\n- Notes: https://github.com/DazielNguyen/aws-fcj-report/blob/main/TAKE_NOTES_%26_LABS/Module_01/Take_notes_module_01.md\" 5 - Thực hành Lab 07:\n+ Tạo Budget\n+ Tạo Cost Budget\n+ Tạo Usage Budget\n+ Tạo RI Budget\n+ Tạo Saving Plan Budget\n+ Cách xóa tài nguyên.\n- Tìm hiểu về các dịch vụ của từng Budget\n- Và nhận biết những Budget nào phù hợp với đối tượng nào. 11/09/2025 11/09/2025 - Documentation: https://cloudjourney.awsstudygroup.com/\n- Youtube: https://youtube.com/playlist?list=PLahN4TLWtox2a3vElknwzU_urND8hLn1i\u0026si=W80Cdf_fSc6sjOV\n- Notes: https://github.com/DazielNguyen/aws-fcj-report/blob/main/TAKE_NOTES_%26_LABS/Module_01/Take_notes_module_01.md\" 6 - Thực hành Lab 09:\n+ Tìm hiểu các gói hỗ trợ của AWS Support\n+ Truy cập AWS Support\n+ Khởi tạo các yêu cầu hỗ trợ. 12/09/2025 12/09/2025 - Documentation: https://cloudjourney.awsstudygroup.com/\n- Youtube: https://youtube.com/playlist?list=PLahN4TLWtox2a3vElknwzU_urND8hLn1i\u0026si=W80Cdf_fSc6sjOV\n- Notes: https://github.com/DazielNguyen/aws-fcj-report/blob/main/TAKE_NOTES_%26_LABS/Module_02/Take_notes_module_02.md Kết quả đạt được tuần 1: Hiểu AWS là gì và các khái niệm và dịch vụ mà AWS cung cấp:\nĐiện toán đám mây. Sự khác biệt của AWS Cách để bắt đầu một hành trình lên mây Hạ tầng toàn cầu của AWS Công cụ quản lí AWS Services Cách tối ưu hóa chi phí trên AWS Đã tạo và cấu hình AWS Free Tier account thành công.\nLàm quen với AWS Management Console và biết cách tìm, truy cập, sử dụng dịch vụ từ giao diện web.\nCài đặt và cấu hình AWS CLI trên máy tính bao gồm:\nAccess Key Secret Key Region mặc định MFA cho tài khoản Admin Group Admin User AWS Support Biết cách thiết lập các Budget:\nCost Budget Usage Budget RI Budget Saving Plan Budget Clean tài nguyên Hiểu rõ về các gói hỗ trợ và cách truy cập AWS Support\nGói Basic Gói Developer Gói Business Gói Enterprise "
},
{
	"uri": "http://localhost:1313/aws-fcj-report/vi/1-worklog/1.2-week2/",
	"title": "Worklog Tuần 2",
	"tags": [],
	"description": "",
	"content": "Mục tiêu tuần 2: Hiểu rõ AWS VPC: Nắm vững khái niệm cơ bản về VPC (Virtual Private Cloud) như một môi trường mạng logic cô lập, bao gồm các thành phần chính như Subnets (Public và Private), Route Tables, và ENI.\nKiểm soát lưu lượng và bảo mật: Học cách cấu hình các lớp bảo mật (Security Groups và NACLs) và kiểm soát đường đi của lưu lượng mạng ra/vào Internet (Internet Gateway và NAT Gateway).\nKết nối mạng phức tạp: Phân biệt và biết cách sử dụng các phương thức kết nối giữa các VPC (VPC Peering) và mô hình kết nối trung tâm (Transit Gateway).\nXây dựng môi trường Hybrid Cloud: Tìm hiểu các giải pháp kết nối mạng tại chỗ (on-premises) với AWS, bao gồm VPN (Site-to-Site) và kết nối riêng tư (AWS Direct Connect).\nPhân phối tải ứng dụng: Hiểu chức năng của Elastic Load Balancing (ELB) và phân biệt được các loại bộ cân bằng tải khác nhau (ALB, NLB, CLB, GLB) để đảm bảo tính sẵn sàng cao và khả năng mở rộng cho ứng dụng.\nCác công việc cần triển khai trong tuần này: Thứ Công việc Ngày bắt đầu Ngày kết thúc Nguồn tài liệu và ghi chú học tập 2 - Tìm hiểu về AWS Virtual Private Cloud (VPC)\n+ VPC là gì?\n+ Cấu trúc của VPC được hoạt động như thế nào?\n- Tìm hiểu về VPC-Subnets và kiến trúc của Subnet?\n- Tìm hiểu về VPC-Route Table?\n- Tìm hiểu về VPC-ENI và kiến trúc của VPC-ENI?\n- Tìm hiểu về VPC-Endpoint và kiến trúc của VPC-Endpoint?\n- Tìm hiểu về VPC-Internet Gateway và kiến trúc của VPC-Internet Gateway?\n- Tìm hiểu về VPC-NAT Gateway và kiến trúc của VPC-NAT Gateway?\n- Tìm hiểu về VPC-Security Group và kiến trúc của VPC-Security Group?\n- Tìm hiểu về VPC-NACL và kiên trúc của VPC-NACL?\n- Tìm hiểu về VPC-Flow Logs 15/09/2025 15/09/2025 Documentation: https://cloudjourney.awsstudygroup.com/\nYoutube: https://youtube.com/playlist?list=PLahN4TLWtox2a3vElknwzU_urND8hLn1i\u0026si=W80Cdf_fSc6sjOV\nNotes: https://github.com/DazielNguyen/aws-fcj-report/blob/main/TAKE_NOTES_%26_LABS/Module_02/Take_notes_module_02.md 3 - Tìm hiểu về các dịch vụ mạng trên AWS?\n- Tìm hiểu về VPC Peering và kiến trúc của VPC Peering?\n- Tìm hiểu về Transit Gateway và kiến trúc của Transit Gateway?\n- Nắm rõ các khái niệm về dịch vụ VPN \u0026amp; Direct Connect?\n- VPN Site to Site là gì? Việc thiết lập nó như thế nào?\n- Tìm hiểu về VPN Client to Site?\n- AWS Direct Connect là gì? 16/09/2025 16/09/2025 Documentation: https://cloudjourney.awsstudygroup.com/\nYoutube: https://youtube.com/playlist?list=PLahN4TLWtox2a3vElknwzU_urND8hLn1i\u0026si=W80Cdf_fSc6sjOV\nNotes: https://github.com/DazielNguyen/aws-fcj-report/blob/main/TAKE_NOTES_%26_LABS/Module_02/Take_notes_module_02.md 4 - Tìm hiểu về các khái niệm và tổng quan về Elastic Load Balancing? Và các loại ELB hiện nay?\n- Tìm hiểu về ELB - Application Load Balancer và kiến trúc của nó?\n- Tìm hiểu về ELB - Network Load Balancer và nắm rõ khái niệm?\n- Tìm hiểu về ELB - Classic Load Balancer và nắm rõ khái niệm?\n- Tìm hiểu về ELB - ELB - Gateway Load Balancer và kiến trúc của nó? 17/09/2025 17/09/2025 Documentation: https://cloudjourney.awsstudygroup.com/\nYoutube: https://youtube.com/playlist?list=PLahN4TLWtox2a3vElknwzU_urND8hLn1i\u0026si=W80Cdf_fSc6sjOV\nNotes: https://github.com/DazielNguyen/aws-fcj-report/blob/main/TAKE_NOTES_%26_LABS/Module_02/Take_notes_module_02.md 5 - Lab 03 - Khởi tạo VPC\n1. Cấu hình tường lửa VPC\n2.Thực hành tạo 1 VPC\n3. Cấu hình Site to Site VPN\n- Lab 58 - System Manage - Session Manage\n1. Tạo kết nối đến máy chủ EC2\n2. Quản lí sessioin logs\n3. Sử tính năng Port Forwarding\n- Lab 19 - Thiết lập VPC Peering\n1. Cập nhật Network ACL\n2. Tạo kết nối Peering\n3. Cấu hình Route tables\n4. Kích hoạt Cross-Peer DNS 18/09/2025 18/09/2025 Documentation: https://cloudjourney.awsstudygroup.com/\nYoutube: https://youtube.com/playlist?list=PLahN4TLWtox2a3vElknwzU_urND8hLn1i\u0026si=W80Cdf_fSc6sjOV\nNotes: https://github.com/DazielNguyen/aws-fcj-report/blob/main/TAKE_NOTES_%26_LABS/Module_02/Take_notes_module_02.md 6 - Lab 20 - Thiết lập Transit Gateway\n1. Thiết lập hạ tầng\n2. Tạo Transit Gateway -\u0026gt; Nối nhiều VPC lại với nhau\n3. Transit Gateway Attachments\n4. Tạo Route Table cho TGW\n5. Thêm Gateway vào Route Tables \u0026amp; Kiểm tra kết quả\n- Lab 10 - Hybrid DNS\n1. Thiết lập Hybrid DNS\n2. Tạo Outbound Endpoint\n3. Tạo Route 53 Resolver Rule\n4. Tạo Inbound Endpoint.\n- Nghiên cứu bổ sung về AWS Advanced Networking - Specialty Study Guid 19/09/2025 19/09/2025 Documentation: https://cloudjourney.awsstudygroup.com/\nYoutube: https://youtube.com/playlist?list=PLahN4TLWtox2a3vElknwzU_urND8hLn1i\u0026si=W80Cdf_fSc6sjOV\nNotes: https://github.com/DazielNguyen/aws-fcj-report/blob/main/TAKE_NOTES_%26_LABS/Module_02/Take_notes_module_02.md Research Link: https://www.amazon.com/Certified-Advanced-Networking-Official-Study/dp/1119439833 Kết quả đạt được tuần 2: Giải thích được VPC là gì, vai trò của nó trong AWS, và các thành phần cốt lõi của nó (Subnet, Route Table, ENI). Phân biệt rõ ràng giữa Public Subnet (có Internet Gateway) và Private Subnet (sử dụng NAT Gateway để truy cập Internet). So sánh và đối chiếu hai cơ chế tường lửa chính: Security Group (stateful, áp dụng cho ENI) và NACL (stateless, áp dụng cho Subnet). Trình bày được cách thức kết nối riêng tư từ VPC đến các dịch vụ AWS (như S3) mà không cần qua Internet bằng VPC Endpoint. Đánh giá được ưu nhược điểm giữa hai giải pháp kết nối VPC: VPC Peering (kết nối 1:1, không hỗ trợ bắc cầu) và Transit Gateway (mô hình hub-and-spoke, đơn giản hóa quản lý). Mô tả được các phương thức thiết lập kết nối hybrid cloud, bao gồm VPN Site-to-Site (qua Internet) và AWS Direct Connect (kết nối vật lý riêng). Phân loại và lựa chọn được loại Elastic Load Balancer phù hợp cho từng kịch bản cụ thể: Application Load Balancer (ALB): Cho lưu lượng HTTP/HTTPS (Layer 7), hỗ trợ path-based routing. Network Load Balancer (NLB): Cho lưu lượng TCP/TLS (Layer 4), cần hiệu suất cực cao và IP tĩnh. Gateway Load Balancer (GLB): Dùng để tích hợp các thiết bị mạng ảo (virtual appliances). Xác định được các bài thực hành (Lab) cần thiết để củng cố kiến thức đã học về VPC, Peering, Transit Gateway và các dịch vụ liên quan. "
},
{
	"uri": "http://localhost:1313/aws-fcj-report/vi/2-proposal/",
	"title": "Bản đề xuất",
	"tags": [],
	"description": "",
	"content": "Tại phần này, bạn cần tóm tắt các nội dung trong workshop mà bạn dự tính sẽ làm.\nIoT Weather Platform for Lab Research Giải pháp AWS Serverless hợp nhất cho giám sát thời tiết thời gian thực 1. Tóm tắt điều hành IoT Weather Platform được thiết kế dành cho nhóm ITea Lab tại TP. Hồ Chí Minh nhằm nâng cao khả năng thu thập và phân tích dữ liệu thời tiết. Nền tảng hỗ trợ tối đa 5 trạm thời tiết, có khả năng mở rộng lên 10–15 trạm, sử dụng thiết bị biên Raspberry Pi kết hợp cảm biến ESP32 để truyền dữ liệu qua MQTT. Nền tảng tận dụng các dịch vụ AWS Serverless để cung cấp giám sát thời gian thực, phân tích dự đoán và tiết kiệm chi phí, với quyền truy cập giới hạn cho 5 thành viên phòng lab thông qua Amazon Cognito.\n2. Tuyên bố vấn đề Vấn đề hiện tại\nCác trạm thời tiết hiện tại yêu cầu thu thập dữ liệu thủ công, khó quản lý khi có nhiều trạm. Không có hệ thống tập trung cho dữ liệu hoặc phân tích thời gian thực, và các nền tảng bên thứ ba thường tốn kém và quá phức tạp.\nGiải pháp\nNền tảng sử dụng AWS IoT Core để tiếp nhận dữ liệu MQTT, AWS Lambda và API Gateway để xử lý, Amazon S3 để lưu trữ (bao gồm data lake), và AWS Glue Crawlers cùng các tác vụ ETL để trích xuất, chuyển đổi, tải dữ liệu từ S3 data lake sang một S3 bucket khác để phân tích. AWS Amplify với Next.js cung cấp giao diện web, và Amazon Cognito đảm bảo quyền truy cập an toàn. Tương tự như Thingsboard và CoreIoT, người dùng có thể đăng ký thiết bị mới và quản lý kết nối, nhưng nền tảng này hoạt động ở quy mô nhỏ hơn và phục vụ mục đích sử dụng nội bộ. Các tính năng chính bao gồm bảng điều khiển thời gian thực, phân tích xu hướng và chi phí vận hành thấp.\nLợi ích và hoàn vốn đầu tư (ROI)\nGiải pháp tạo nền tảng cơ bản để các thành viên phòng lab phát triển một nền tảng IoT lớn hơn, đồng thời cung cấp nguồn dữ liệu cho những người nghiên cứu AI phục vụ huấn luyện mô hình hoặc phân tích. Nền tảng giảm bớt báo cáo thủ công cho từng trạm thông qua hệ thống tập trung, đơn giản hóa quản lý và bảo trì, đồng thời cải thiện độ tin cậy dữ liệu. Chi phí hàng tháng ước tính 0,66 USD (theo AWS Pricing Calculator), tổng cộng 7,92 USD cho 12 tháng. Tất cả thiết bị IoT đã được trang bị từ hệ thống trạm thời tiết hiện tại, không phát sinh chi phí phát triển thêm. Thời gian hoàn vốn 6–12 tháng nhờ tiết kiệm đáng kể thời gian thao tác thủ công.\n3. Kiến trúc giải pháp Nền tảng áp dụng kiến trúc AWS Serverless để quản lý dữ liệu từ 5 trạm dựa trên Raspberry Pi, có thể mở rộng lên 15 trạm. Dữ liệu được tiếp nhận qua AWS IoT Core, lưu trữ trong S3 data lake và xử lý bởi AWS Glue Crawlers và ETL jobs để chuyển đổi và tải vào một S3 bucket khác cho mục đích phân tích. Lambda và API Gateway xử lý bổ sung, trong khi Amplify với Next.js cung cấp bảng điều khiển được bảo mật bởi Cognito.\nDịch vụ AWS sử dụng\nAWS IoT Core: Tiếp nhận dữ liệu MQTT từ 5 trạm, mở rộng lên 15. AWS Lambda: Xử lý dữ liệu và kích hoạt Glue jobs (2 hàm). Amazon API Gateway: Giao tiếp với ứng dụng web. Amazon S3: Lưu trữ dữ liệu thô (data lake) và dữ liệu đã xử lý (2 bucket). AWS Glue: Crawlers lập chỉ mục dữ liệu, ETL jobs chuyển đổi và tải dữ liệu. AWS Amplify: Lưu trữ giao diện web Next.js. Amazon Cognito: Quản lý quyền truy cập cho người dùng phòng lab. Thiết kế thành phần\nThiết bị biên: Raspberry Pi thu thập và lọc dữ liệu cảm biến, gửi tới IoT Core. Tiếp nhận dữ liệu: AWS IoT Core nhận tin nhắn MQTT từ thiết bị biên. Lưu trữ dữ liệu: Dữ liệu thô lưu trong S3 data lake; dữ liệu đã xử lý lưu ở một S3 bucket khác. Xử lý dữ liệu: AWS Glue Crawlers lập chỉ mục dữ liệu; ETL jobs chuyển đổi để phân tích. Giao diện web: AWS Amplify lưu trữ ứng dụng Next.js cho bảng điều khiển và phân tích thời gian thực. Quản lý người dùng: Amazon Cognito giới hạn 5 tài khoản hoạt động. 4. Triển khai kỹ thuật Các giai đoạn triển khai\nDự án gồm 2 phần — thiết lập trạm thời tiết biên và xây dựng nền tảng thời tiết — mỗi phần trải qua 4 giai đoạn:\nNghiên cứu và vẽ kiến trúc: Nghiên cứu Raspberry Pi với cảm biến ESP32 và thiết kế kiến trúc AWS Serverless (1 tháng trước kỳ thực tập). Tính toán chi phí và kiểm tra tính khả thi: Sử dụng AWS Pricing Calculator để ước tính và điều chỉnh (Tháng 1). Điều chỉnh kiến trúc để tối ưu chi phí/giải pháp: Tinh chỉnh (ví dụ tối ưu Lambda với Next.js) để đảm bảo hiệu quả (Tháng 2). Phát triển, kiểm thử, triển khai: Lập trình Raspberry Pi, AWS services với CDK/SDK và ứng dụng Next.js, sau đó kiểm thử và đưa vào vận hành (Tháng 2–3). Yêu cầu kỹ thuật\nTrạm thời tiết biên: Cảm biến (nhiệt độ, độ ẩm, lượng mưa, tốc độ gió), vi điều khiển ESP32, Raspberry Pi làm thiết bị biên. Raspberry Pi chạy Raspbian, sử dụng Docker để lọc dữ liệu và gửi 1 MB/ngày/trạm qua MQTT qua Wi-Fi. Nền tảng thời tiết: Kiến thức thực tế về AWS Amplify (lưu trữ Next.js), Lambda (giảm thiểu do Next.js xử lý), AWS Glue (ETL), S3 (2 bucket), IoT Core (gateway và rules), và Cognito (5 người dùng). Sử dụng AWS CDK/SDK để lập trình (ví dụ IoT Core rules tới S3). Next.js giúp giảm tải Lambda cho ứng dụng web fullstack. 5. Lộ trình \u0026amp; Mốc triển khai Trước thực tập (Tháng 0): 1 tháng lên kế hoạch và đánh giá trạm cũ. Thực tập (Tháng 1–3): Tháng 1: Học AWS và nâng cấp phần cứng. Tháng 2: Thiết kế và điều chỉnh kiến trúc. Tháng 3: Triển khai, kiểm thử, đưa vào sử dụng. Sau triển khai: Nghiên cứu thêm trong vòng 1 năm. 6. Ước tính ngân sách Có thể xem chi phí trên AWS Pricing Calculator\nHoặc tải tệp ước tính ngân sách.\nChi phí hạ tầng\nAWS Lambda: 0,00 USD/tháng (1.000 request, 512 MB lưu trữ). S3 Standard: 0,15 USD/tháng (6 GB, 2.100 request, 1 GB quét). Truyền dữ liệu: 0,02 USD/tháng (1 GB vào, 1 GB ra). AWS Amplify: 0,35 USD/tháng (256 MB, request 500 ms). Amazon API Gateway: 0,01 USD/tháng (2.000 request). AWS Glue ETL Jobs: 0,02 USD/tháng (2 DPU). AWS Glue Crawlers: 0,07 USD/tháng (1 crawler). MQTT (IoT Core): 0,08 USD/tháng (5 thiết bị, 45.000 tin nhắn). Tổng: 0,7 USD/tháng, 8,40 USD/12 tháng\nPhần cứng: 265 USD một lần (Raspberry Pi 5 và cảm biến). 7. Đánh giá rủi ro Ma trận rủi ro\nMất mạng: Ảnh hưởng trung bình, xác suất trung bình. Hỏng cảm biến: Ảnh hưởng cao, xác suất thấp. Vượt ngân sách: Ảnh hưởng trung bình, xác suất thấp. Chiến lược giảm thiểu\nMạng: Lưu trữ cục bộ trên Raspberry Pi với Docker. Cảm biến: Kiểm tra định kỳ, dự phòng linh kiện. Chi phí: Cảnh báo ngân sách AWS, tối ưu dịch vụ. Kế hoạch dự phòng\nQuay lại thu thập thủ công nếu AWS gặp sự cố. Sử dụng CloudFormation để khôi phục cấu hình liên quan đến chi phí. 8. Kết quả kỳ vọng Cải tiến kỹ thuật: Dữ liệu và phân tích thời gian thực thay thế quy trình thủ công. Có thể mở rộng tới 10–15 trạm.\nGiá trị dài hạn: Nền tảng dữ liệu 1 năm cho nghiên cứu AI, có thể tái sử dụng cho các dự án tương lai.\n"
},
{
	"uri": "http://localhost:1313/aws-fcj-report/vi/5-workshop/5.2-prerequiste/",
	"title": "Các bước chuẩn bị",
	"tags": [],
	"description": "",
	"content": "IAM permissions Gắn IAM permission policy sau vào tài khoản aws user của bạn để triển khai và dọn dẹp tài nguyên trong workshop này.\n{ \u0026#34;Version\u0026#34;: \u0026#34;2012-10-17\u0026#34;, \u0026#34;Statement\u0026#34;: [ { \u0026#34;Sid\u0026#34;: \u0026#34;VisualEditor0\u0026#34;, \u0026#34;Effect\u0026#34;: \u0026#34;Allow\u0026#34;, \u0026#34;Action\u0026#34;: [ \u0026#34;cloudformation:*\u0026#34;, \u0026#34;cloudwatch:*\u0026#34;, \u0026#34;ec2:AcceptTransitGatewayPeeringAttachment\u0026#34;, \u0026#34;ec2:AcceptTransitGatewayVpcAttachment\u0026#34;, \u0026#34;ec2:AllocateAddress\u0026#34;, \u0026#34;ec2:AssociateAddress\u0026#34;, \u0026#34;ec2:AssociateIamInstanceProfile\u0026#34;, \u0026#34;ec2:AssociateRouteTable\u0026#34;, \u0026#34;ec2:AssociateSubnetCidrBlock\u0026#34;, \u0026#34;ec2:AssociateTransitGatewayRouteTable\u0026#34;, \u0026#34;ec2:AssociateVpcCidrBlock\u0026#34;, \u0026#34;ec2:AttachInternetGateway\u0026#34;, \u0026#34;ec2:AttachNetworkInterface\u0026#34;, \u0026#34;ec2:AttachVolume\u0026#34;, \u0026#34;ec2:AttachVpnGateway\u0026#34;, \u0026#34;ec2:AuthorizeSecurityGroupEgress\u0026#34;, \u0026#34;ec2:AuthorizeSecurityGroupIngress\u0026#34;, \u0026#34;ec2:CreateClientVpnEndpoint\u0026#34;, \u0026#34;ec2:CreateClientVpnRoute\u0026#34;, \u0026#34;ec2:CreateCustomerGateway\u0026#34;, \u0026#34;ec2:CreateDhcpOptions\u0026#34;, \u0026#34;ec2:CreateFlowLogs\u0026#34;, \u0026#34;ec2:CreateInternetGateway\u0026#34;, \u0026#34;ec2:CreateLaunchTemplate\u0026#34;, \u0026#34;ec2:CreateNetworkAcl\u0026#34;, \u0026#34;ec2:CreateNetworkInterface\u0026#34;, \u0026#34;ec2:CreateNetworkInterfacePermission\u0026#34;, \u0026#34;ec2:CreateRoute\u0026#34;, \u0026#34;ec2:CreateRouteTable\u0026#34;, \u0026#34;ec2:CreateSecurityGroup\u0026#34;, \u0026#34;ec2:CreateSubnet\u0026#34;, \u0026#34;ec2:CreateSubnetCidrReservation\u0026#34;, \u0026#34;ec2:CreateTags\u0026#34;, \u0026#34;ec2:CreateTransitGateway\u0026#34;, \u0026#34;ec2:CreateTransitGatewayPeeringAttachment\u0026#34;, \u0026#34;ec2:CreateTransitGatewayPrefixListReference\u0026#34;, \u0026#34;ec2:CreateTransitGatewayRoute\u0026#34;, \u0026#34;ec2:CreateTransitGatewayRouteTable\u0026#34;, \u0026#34;ec2:CreateTransitGatewayVpcAttachment\u0026#34;, \u0026#34;ec2:CreateVpc\u0026#34;, \u0026#34;ec2:CreateVpcEndpoint\u0026#34;, \u0026#34;ec2:CreateVpcEndpointConnectionNotification\u0026#34;, \u0026#34;ec2:CreateVpcEndpointServiceConfiguration\u0026#34;, \u0026#34;ec2:CreateVpnConnection\u0026#34;, \u0026#34;ec2:CreateVpnConnectionRoute\u0026#34;, \u0026#34;ec2:CreateVpnGateway\u0026#34;, \u0026#34;ec2:DeleteCustomerGateway\u0026#34;, \u0026#34;ec2:DeleteFlowLogs\u0026#34;, \u0026#34;ec2:DeleteInternetGateway\u0026#34;, \u0026#34;ec2:DeleteNetworkInterface\u0026#34;, \u0026#34;ec2:DeleteNetworkInterfacePermission\u0026#34;, \u0026#34;ec2:DeleteRoute\u0026#34;, \u0026#34;ec2:DeleteRouteTable\u0026#34;, \u0026#34;ec2:DeleteSecurityGroup\u0026#34;, \u0026#34;ec2:DeleteSubnet\u0026#34;, \u0026#34;ec2:DeleteSubnetCidrReservation\u0026#34;, \u0026#34;ec2:DeleteTags\u0026#34;, \u0026#34;ec2:DeleteTransitGateway\u0026#34;, \u0026#34;ec2:DeleteTransitGatewayPeeringAttachment\u0026#34;, \u0026#34;ec2:DeleteTransitGatewayPrefixListReference\u0026#34;, \u0026#34;ec2:DeleteTransitGatewayRoute\u0026#34;, \u0026#34;ec2:DeleteTransitGatewayRouteTable\u0026#34;, \u0026#34;ec2:DeleteTransitGatewayVpcAttachment\u0026#34;, \u0026#34;ec2:DeleteVpc\u0026#34;, \u0026#34;ec2:DeleteVpcEndpoints\u0026#34;, \u0026#34;ec2:DeleteVpcEndpointServiceConfigurations\u0026#34;, \u0026#34;ec2:DeleteVpnConnection\u0026#34;, \u0026#34;ec2:DeleteVpnConnectionRoute\u0026#34;, \u0026#34;ec2:Describe*\u0026#34;, \u0026#34;ec2:DetachInternetGateway\u0026#34;, \u0026#34;ec2:DisassociateAddress\u0026#34;, \u0026#34;ec2:DisassociateRouteTable\u0026#34;, \u0026#34;ec2:GetLaunchTemplateData\u0026#34;, \u0026#34;ec2:GetTransitGatewayAttachmentPropagations\u0026#34;, \u0026#34;ec2:ModifyInstanceAttribute\u0026#34;, \u0026#34;ec2:ModifySecurityGroupRules\u0026#34;, \u0026#34;ec2:ModifyTransitGatewayVpcAttachment\u0026#34;, \u0026#34;ec2:ModifyVpcAttribute\u0026#34;, \u0026#34;ec2:ModifyVpcEndpoint\u0026#34;, \u0026#34;ec2:ReleaseAddress\u0026#34;, \u0026#34;ec2:ReplaceRoute\u0026#34;, \u0026#34;ec2:RevokeSecurityGroupEgress\u0026#34;, \u0026#34;ec2:RevokeSecurityGroupIngress\u0026#34;, \u0026#34;ec2:RunInstances\u0026#34;, \u0026#34;ec2:StartInstances\u0026#34;, \u0026#34;ec2:StopInstances\u0026#34;, \u0026#34;ec2:UpdateSecurityGroupRuleDescriptionsEgress\u0026#34;, \u0026#34;ec2:UpdateSecurityGroupRuleDescriptionsIngress\u0026#34;, \u0026#34;iam:AddRoleToInstanceProfile\u0026#34;, \u0026#34;iam:AttachRolePolicy\u0026#34;, \u0026#34;iam:CreateInstanceProfile\u0026#34;, \u0026#34;iam:CreatePolicy\u0026#34;, \u0026#34;iam:CreateRole\u0026#34;, \u0026#34;iam:DeleteInstanceProfile\u0026#34;, \u0026#34;iam:DeletePolicy\u0026#34;, \u0026#34;iam:DeleteRole\u0026#34;, \u0026#34;iam:DeleteRolePolicy\u0026#34;, \u0026#34;iam:DetachRolePolicy\u0026#34;, \u0026#34;iam:GetInstanceProfile\u0026#34;, \u0026#34;iam:GetPolicy\u0026#34;, \u0026#34;iam:GetRole\u0026#34;, \u0026#34;iam:GetRolePolicy\u0026#34;, \u0026#34;iam:ListPolicyVersions\u0026#34;, \u0026#34;iam:ListRoles\u0026#34;, \u0026#34;iam:PassRole\u0026#34;, \u0026#34;iam:PutRolePolicy\u0026#34;, \u0026#34;iam:RemoveRoleFromInstanceProfile\u0026#34;, \u0026#34;lambda:CreateFunction\u0026#34;, \u0026#34;lambda:DeleteFunction\u0026#34;, \u0026#34;lambda:DeleteLayerVersion\u0026#34;, \u0026#34;lambda:GetFunction\u0026#34;, \u0026#34;lambda:GetLayerVersion\u0026#34;, \u0026#34;lambda:InvokeFunction\u0026#34;, \u0026#34;lambda:PublishLayerVersion\u0026#34;, \u0026#34;logs:CreateLogGroup\u0026#34;, \u0026#34;logs:DeleteLogGroup\u0026#34;, \u0026#34;logs:DescribeLogGroups\u0026#34;, \u0026#34;logs:PutRetentionPolicy\u0026#34;, \u0026#34;route53:ChangeTagsForResource\u0026#34;, \u0026#34;route53:CreateHealthCheck\u0026#34;, \u0026#34;route53:CreateHostedZone\u0026#34;, \u0026#34;route53:CreateTrafficPolicy\u0026#34;, \u0026#34;route53:DeleteHostedZone\u0026#34;, \u0026#34;route53:DisassociateVPCFromHostedZone\u0026#34;, \u0026#34;route53:GetHostedZone\u0026#34;, \u0026#34;route53:ListHostedZones\u0026#34;, \u0026#34;route53domains:ListDomains\u0026#34;, \u0026#34;route53domains:ListOperations\u0026#34;, \u0026#34;route53domains:ListTagsForDomain\u0026#34;, \u0026#34;route53resolver:AssociateResolverEndpointIpAddress\u0026#34;, \u0026#34;route53resolver:AssociateResolverRule\u0026#34;, \u0026#34;route53resolver:CreateResolverEndpoint\u0026#34;, \u0026#34;route53resolver:CreateResolverRule\u0026#34;, \u0026#34;route53resolver:DeleteResolverEndpoint\u0026#34;, \u0026#34;route53resolver:DeleteResolverRule\u0026#34;, \u0026#34;route53resolver:DisassociateResolverEndpointIpAddress\u0026#34;, \u0026#34;route53resolver:DisassociateResolverRule\u0026#34;, \u0026#34;route53resolver:GetResolverEndpoint\u0026#34;, \u0026#34;route53resolver:GetResolverRule\u0026#34;, \u0026#34;route53resolver:ListResolverEndpointIpAddresses\u0026#34;, \u0026#34;route53resolver:ListResolverEndpoints\u0026#34;, \u0026#34;route53resolver:ListResolverRuleAssociations\u0026#34;, \u0026#34;route53resolver:ListResolverRules\u0026#34;, \u0026#34;route53resolver:ListTagsForResource\u0026#34;, \u0026#34;route53resolver:UpdateResolverEndpoint\u0026#34;, \u0026#34;route53resolver:UpdateResolverRule\u0026#34;, \u0026#34;s3:AbortMultipartUpload\u0026#34;, \u0026#34;s3:CreateBucket\u0026#34;, \u0026#34;s3:DeleteBucket\u0026#34;, \u0026#34;s3:DeleteObject\u0026#34;, \u0026#34;s3:GetAccountPublicAccessBlock\u0026#34;, \u0026#34;s3:GetBucketAcl\u0026#34;, \u0026#34;s3:GetBucketOwnershipControls\u0026#34;, \u0026#34;s3:GetBucketPolicy\u0026#34;, \u0026#34;s3:GetBucketPolicyStatus\u0026#34;, \u0026#34;s3:GetBucketPublicAccessBlock\u0026#34;, \u0026#34;s3:GetObject\u0026#34;, \u0026#34;s3:GetObjectVersion\u0026#34;, \u0026#34;s3:GetBucketVersioning\u0026#34;, \u0026#34;s3:ListAccessPoints\u0026#34;, \u0026#34;s3:ListAccessPointsForObjectLambda\u0026#34;, \u0026#34;s3:ListAllMyBuckets\u0026#34;, \u0026#34;s3:ListBucket\u0026#34;, \u0026#34;s3:ListBucketMultipartUploads\u0026#34;, \u0026#34;s3:ListBucketVersions\u0026#34;, \u0026#34;s3:ListJobs\u0026#34;, \u0026#34;s3:ListMultipartUploadParts\u0026#34;, \u0026#34;s3:ListMultiRegionAccessPoints\u0026#34;, \u0026#34;s3:ListStorageLensConfigurations\u0026#34;, \u0026#34;s3:PutAccountPublicAccessBlock\u0026#34;, \u0026#34;s3:PutBucketAcl\u0026#34;, \u0026#34;s3:PutBucketPolicy\u0026#34;, \u0026#34;s3:PutBucketPublicAccessBlock\u0026#34;, \u0026#34;s3:PutObject\u0026#34;, \u0026#34;secretsmanager:CreateSecret\u0026#34;, \u0026#34;secretsmanager:DeleteSecret\u0026#34;, \u0026#34;secretsmanager:DescribeSecret\u0026#34;, \u0026#34;secretsmanager:GetSecretValue\u0026#34;, \u0026#34;secretsmanager:ListSecrets\u0026#34;, \u0026#34;secretsmanager:ListSecretVersionIds\u0026#34;, \u0026#34;secretsmanager:PutResourcePolicy\u0026#34;, \u0026#34;secretsmanager:TagResource\u0026#34;, \u0026#34;secretsmanager:UpdateSecret\u0026#34;, \u0026#34;sns:ListTopics\u0026#34;, \u0026#34;ssm:DescribeInstanceProperties\u0026#34;, \u0026#34;ssm:DescribeSessions\u0026#34;, \u0026#34;ssm:GetConnectionStatus\u0026#34;, \u0026#34;ssm:GetParameters\u0026#34;, \u0026#34;ssm:ListAssociations\u0026#34;, \u0026#34;ssm:ResumeSession\u0026#34;, \u0026#34;ssm:StartSession\u0026#34;, \u0026#34;ssm:TerminateSession\u0026#34; ], \u0026#34;Resource\u0026#34;: \u0026#34;*\u0026#34; } ] } Khởi tạo tài nguyên bằng CloudFormation Trong lab này, chúng ta sẽ dùng N.Virginia region (us-east-1).\nĐể chuẩn bị cho môi trường làm workshop, chúng ta deploy CloudFormation template sau (click link): PrivateLinkWorkshop . Để nguyên các lựa chọn mặc định.\nLựa chọn 2 mục acknowledgement Chọn Create stack Quá trình triển khai CloudFormation cần khoảng 15 phút để hoàn thành.\n2 VPCs đã được tạo 3 EC2s đã được tạo "
},
{
	"uri": "http://localhost:1313/aws-fcj-report/vi/5-workshop/5.3-s3-vpc/5.3.2-test-gwe/",
	"title": "Kiểm tra Gateway Endpoint",
	"tags": [],
	"description": "",
	"content": "Tạo S3 bucket Đi đến S3 management console Trong Bucket console, chọn Create bucket Trong Create bucket console Đặt tên bucket: chọn 1 tên mà không bị trùng trong phạm vi toàn cầu (gợi ý: lab\u0026lt;số-lab\u0026gt;\u0026lt;tên-bạn\u0026gt;) Giữ nguyên giá trị của các fields khác (default) Kéo chuột xuống và chọn Create bucket Tạo thành công S3 bucket Kết nối với EC2 bằng session manager Trong workshop này, bạn sẽ dùng AWS Session Manager để kết nối đến các EC2 instances. Session Manager là 1 tính năng trong dịch vụ Systems Manager được quản lý hoàn toàn bởi AWS. System manager cho phép bạn quản lý Amazon EC2 instances và các máy ảo on-premises (VMs)thông qua 1 browser-based shell. Session Manager cung cấp khả năng quản lý phiên bản an toàn và có thể kiểm tra mà không cần mở cổng vào, duy trì máy chủ bastion host hoặc quản lý khóa SSH.\nFirst cloud journey Lab để hiểu sâu hơn về Session manager.\nTrong AWS Management Console, gõ Systems Manager trong ô tìm kiếm và nhấn Enter: Từ Systems Manager menu, tìm Node Management ở thanh bên trái và chọn Session Manager: Click Start Session, và chọn EC2 instance tên Test-Gateway-Endpoint. Phiên bản EC2 này đã chạy trong \u0026ldquo;VPC cloud\u0026rdquo; và sẽ được dùng để kiểm tra khả năng kết nối với Amazon S3 thông qua điểm cuối Cổng mà bạn vừa tạo (s3-gwe).\nSession Manager sẽ mở browser tab mới với shell prompt: sh-4.2 $\nBạn đã bắt đầu phiên kết nối đến EC2 trong VPC Cloud thành công. Trong bước tiếp theo, chúng ta sẽ tạo một S3 bucket và một tệp trong đó.\nCreate a file and upload to s3 bucket Đổi về ssm-user\u0026rsquo;s thư mục bằng lệnh \u0026ldquo;cd ~\u0026rdquo; Tạo 1 file để kiểm tra bằng lệnh \u0026ldquo;fallocate -l 1G testfile.xyz\u0026rdquo;, 1 file tên \u0026ldquo;testfile.xyz\u0026rdquo; có kích thước 1GB sẽ được tạo. Tải file mình vừa tạo lên S3 với lệnh \u0026ldquo;aws s3 cp testfile.xyz s3://your-bucket-name\u0026rdquo;. Thay your-bucket-name bằng tên S3 bạn đã tạo. Bạn đã tải thành công tệp lên bộ chứa S3 của mình. Bây giờ bạn có thể kết thúc session.\nKiểm tra object trong S3 bucket Đi đến S3 console. Click tên s3 bucket của bạn Trong Bucket console, bạn sẽ thấy tệp bạn đã tải lên S3 bucket của mình Tóm tắt Chúc mừng bạn đã hoàn thành truy cập S3 từ VPC. Trong phần này, bạn đã tạo gateway endpoint cho Amazon S3 và sử dụng AWS CLI để tải file lên. Quá trình tải lên hoạt động vì gateway endpoint cho phép giao tiếp với S3 mà không cần Internet gateway gắn vào \u0026ldquo;VPC Cloud\u0026rdquo;. Điều này thể hiện chức năng của gateway endpoint như một đường dẫn an toàn đến S3 mà không cần đi qua pub lic Internet.\n"
},
{
	"uri": "http://localhost:1313/aws-fcj-report/vi/5-workshop/5.4-s3-onprem/5.4.2-create-interface-enpoint/",
	"title": "Tạo một S3 Interface endpoint",
	"tags": [],
	"description": "",
	"content": "Trong phần này, bạn sẽ tạo và kiểm tra Interface Endpoint S3 bằng cách sử dụng môi trường truyền thống mô phỏng.\nQuay lại Amazon VPC menu. Trong thanh điều hướng bên trái, chọn Endpoints, sau đó click Create Endpoint.\nTrong Create endpoint console:\nĐặt tên interface endpoint Trong Service category, chọn aws services Trong Search box, gõ S3 và nhấn Enter. Chọn endpoint có tên com.amazonaws.us-east-1.s3. Đảm bảo rằng cột Type có giá trị Interface. Đối với VPC, chọn VPC Cloud từ drop-down. Đảm bảo rằng bạn chọn \u0026ldquo;VPC Cloud\u0026rdquo; và không phải \u0026ldquo;VPC On-prem\u0026rdquo;\nMở rộng Additional settings và đảm bảo rằng Enable DNS name không được chọn (sẽ sử dụng điều này trong phần tiếp theo của workshop) Chọn 2 subnets trong AZs sau: us-east-1a and us-east-1b Đối với Security group, chọn SGforS3Endpoint: Giữ default policy - full access và click Create endpoint Chúc mừng bạn đã tạo thành công S3 interface endpoint. Ở bước tiếp theo, chúng ta sẽ kiểm tra interface endpoint.\n"
},
{
	"uri": "http://localhost:1313/aws-fcj-report/vi/1-worklog/1.3-week3/",
	"title": "Worklog Tuần 3",
	"tags": [],
	"description": "",
	"content": "Mục tiêu tuần 3: Hiểu kiến thức toàn diện về các dịch vụ máy chủ ảo (Compute VM) trên AWS. Tập trung vào dịch vụ cốt lõi là Amazon EC2, bao gồm cách lựa chọn cấu hình (Instance Types), các loại lưu trữ (EBS, Instance Store), và cách tự động hóa (User data, Auto Scaling). Tìm hiểu về các các dịch vụ liên quan như Amazon Lightsail (dịch vụ chi phí thấp), các giải pháp lưu trữ file chia sẻ (EFS cho Linux và FSx cho Windows/Linux), và dịch vụ di dời ứng dụng AWS MGN để chuyển máy chủ lên AWS hoặc xây dựng Disaster Recovery. Các công việc cần triển khai trong tuần này: Thứ Công việc Ngày bắt đầu Ngày kết thúc Nguồn tài liệu và ghi chú học tập 2 Amazon Elastic Compute Cloud (EC2)\n- Học về kiến trúc của Amazon EC2, một dịch vụ máy chủ ảo linh hoạt, có khả năng khởi tạo nhanh và co giãn tài nguyên mạnh mẽ.\n- Tìm hiểu về kĩ thuật lựa chọn cấu hình máy chủ thông qua EC2 Instance Type, yếu tố quyết định các yếu tố như CPU, Memory, Network và Storage.\n- Học về cách sử dụng AMI (Amazon Machine Image) để khởi tạo (provision) một hoặc nhiều EC2 Instances và dùng Key Pair (public và private key) để mã hóa thông tin đăng nhập.\n- Tìm hiểu về kĩ thuật lưu trữ khối EBS (Elastic Block Store), vốn hoạt động độc lập, được replicate dữ liệu (nhân 3) để đảm bảo độ sẵn sàng và kết nối với EC2 qua mạng.\n- Phân biệt EBS với Instance Store, là vùng đĩa NVME tốc độ cực cao nhưng dữ liệu sẽ bị xóa hết khi stop EC2.\n- Học về kĩ thuật tự động hóa User Data, một đoạn script (bash shell hoặc powershell) chạy một lần khi khởi tạo EC2.\n- Tìm hiểu về Meta Data, các thông tin liên quan đến EC2 (như IP, Hostname) có thể được truy cập từ chính máy chủ đó, thường dùng cho tự động hóa.\n- Tìm hiểu về kĩ thuật EC2 Auto Scaling để tự động tăng (scale-out) hoặc giảm (scale-in) số lượng EC2 Instance dựa theo các điều kiện (scaling policy).\n- Học về các EC2 Pricing Option (On-demand, Reserved Instance, Saving Plans, Spot Instance) để tối ưu chi phí. 22/09/2025 22/09/2025 Documentation: https://cloudjourney.awsstudygroup.com/\nYoutube: https://youtube.com/playlist?list=PLahN4TLWtox2a3vElknwzU_urND8hLn1i\u0026si=W80Cdf_fSc6sjOV\nNotes: https://github.com/DazielNguyen/aws-fcj-report/blob/main/TAKE_NOTES_%26_LABS/Module_03/Take_notes_module_03.md 3 Amazon Lightsail\n- Học về dịch vụ Amazon Lightsail, một giải pháp máy chủ ảo chi phí thấp (từ 3,5$/tháng) phù hợp cho các workload nhẹ, môi trường test/dev.\n- Tìm hiểu về kĩ thuật kết nối Lightsail (nằm trong VPC đặc biệt) với VPC thông thường qua VPC Peering (chỉ bằng 1 click).\nAmazon EFS/FSX\n- Học về EFS (Elastic File System), dịch vụ lưu trữ file mạng (NFSv4) cho phép nhiều EC2 Instance (chỉ hỗ trợ Linux) mount vào cùng lúc, tính phí theo dung lượng sử dụng.\n- Học về Amazon FSx, dịch vụ cho phép tạo NTFS volume (giao thức SMB) để gán vào nhiều EC2 Instance (hỗ trợ Windows và Linux).\n- Tìm hiểu về kĩ thuật deduplication của FSx giúp giảm trùng lặp dữ liệu và giảm chi phí lưu trữ.\nAWS Application Migration Service (MGN)\n- Học về dịch vụ AWS MGN dùng để migrate (di dời) và replicate máy chủ (thật hoặc ảo) từ on-premise lên môi trường AWS.\n- Tìm hiểu về kĩ thuật sao chép (replication) của MGN để phục vụ mục đích xây dựng Disaster Recovery Site với chi phí thấp (sử dụng các máy staging cấu hình nhỏ). 23/09/2025 23/09/2025 Documentation: https://cloudjourney.awsstudygroup.com/\nYoutube: https://youtube.com/playlist?list=PLahN4TLWtox2a3vElknwzU_urND8hLn1i\u0026si=W80Cdf_fSc6sjOV\nNotes: https://github.com/DazielNguyen/aws-fcj-report/blob/main/TAKE_NOTES_%26_LABS/Module_03/Take_notes_module_03.md 4 Lab: 000004 - Thao tác EC2 cơ bản.\n- Tạo máy chủ EC2\n- Thực hiện snapshot EC2 Instance\n- Cài đặt ứng dụng trên EC2\nLab: 000027 - Quản lí tài nguyên bằng Tag và Resource Group\n- Sử dụng Tag\n- Sử dụng Resource Group 24/09/2025 24/09/2025 Documentation: https://cloudjourney.awsstudygroup.com/\nYoutube: https://youtube.com/playlist?list=PLahN4TLWtox2a3vElknwzU_urND8hLn1i\u0026si=W80Cdf_fSc6sjOV\nNotes: https://github.com/DazielNguyen/aws-fcj-report/blob/main/TAKE_NOTES_%26_LABS/Module_03/Take_notes_module_03.md 5 Lab: 000008 - Quản lí tài nguyên với Amazon Cloud Watch\n- CloudWatch Agent\n- Tạo CloudWatch Dashboard\nLab: 000006 - Triển khai Autoscaling Group\n- Khởi tạo Launch Template\n- Khởi tạo Target Group\n- Khởi tạo Load Balancer\n- Khởi tạo Auto Scaling Group\n- Kiểm tra kết quả. 25/09/2025 25/09/2025 Documentation: https://cloudjourney.awsstudygroup.com/\nYoutube: https://youtube.com/playlist?list=PLahN4TLWtox2a3vElknwzU_urND8hLn1i\u0026si=W80Cdf_fSc6sjOV\nNotes: https://github.com/DazielNguyen/aws-fcj-report/blob/main/TAKE_NOTES_%26_LABS/Module_03/Take_notes_module_03.md 6 Lab: 000045 - Bắt đầu với Amazon Lightsail\n- Chuẩn bị\n- Kiểm tra ứng dụng trên Lightsail\n- Sử dụng Lightsail Loadbalancer\n- Sử dụng RDS\n- Dịch chuyển sang EC2.\n[Nghiên cứu bổ sung] - Microsoft Workloads on AWS\n- Series các bài thực hành bố sung dành cho việc chạy các máy chủ và ứng dụng của Microsoft trên AWS\n- Bổ sung kiến thức về hệ điều hành\n- Bổ sung các kiến thức về hệ điều hành Linux như LBI1, LBI2\n- Bổ sung các kiến thức về hệ điều hành Window học thêm về hệ thống quản trị Bundo. Tham khảo các series thực hành 26/09/2025 26/09/2025 Documentation: https://cloudjourney.awsstudygroup.com/\nYoutube: https://youtube.com/playlist?list=PLahN4TLWtox2a3vElknwzU_urND8hLn1i\u0026si=W80Cdf_fSc6sjOV\nNotes: https://github.com/DazielNguyen/aws-fcj-report/blob/main/TAKE_NOTES_%26_LABS/Module_03/Take_notes_module_03.md\nResearch Link: [https://www.youtube.com/playlist?list=PLhr1KZpdzukdJ|IxuIUM7pMB7aJ2_FfTP] Kết quả đạt được tuần 3: Dịch vụ EC2: Hiểu rõ EC2 là dịch vụ máy chủ ảo cốt lõi của AWS. Kĩ thuật cấu hình EC2: Biết cách lựa chọn Instance Type (cấu hình CPU, RAM, Network) và sử dụng AMI để khởi tạo hệ điều hành cho máy chủ. Kĩ thuật bảo mật EC2: Nắm được cách dùng Key Pair (public/private key) để mã hóa thông tin đăng nhập, thay vì dùng mật khẩu. Dịch vụ lưu trữ (Storage): Phân biệt rõ ràng 2 loại lưu trữ đĩa chính cho EC2: EBS (Elastic Block Store): Là ổ đĩa mạng, hoạt động độc lập, dữ liệu được replicate x3 trong 1 AZ (độ sẵn sàng 99.999%), có thể backup bằng snapshot. Instance Store: Là ổ đĩa vật lý (NVME) tốc độ cực cao, nhưng dữ liệu là tạm thời (sẽ bị xóa khi stop EC2), thường dùng cho cache/buffer hoặc swap. Kĩ thuật tự động hóa (Automation): Biết cách dùng User Data để chạy script 1 lần khi máy chủ khởi động (ví dụ: cài đặt web server). Hiểu Meta Data là gì và cách dùng nó để lấy thông tin (IP, hostname) của máy chủ từ bên trong chính nó, phục vụ cho các script tự động hóa. Kĩ thuật co giãn (Scaling): Nắm vững khái niệm EC2 Auto Scaling để tự động tăng (scale-out) hoặc giảm (scale-in) số lượng máy chủ theo tải (ví dụ: khi ActiveConnectionCount cao hoặc thấp). Kĩ thuật tối ưu chi phí (Pricing): Nhận biết 4 mô hình giá EC2: On-demand (theo giờ/giây, đắt nhất), Reserved Instance (cam kết 1-3 năm), Saving Plans (cam kết 1-3 năm, linh hoạt hơn), và Spot Instance (giá rẻ, tận dụng tài nguyên dư nhưng có thể bị đòi lại). Dịch vụ Lightsail: Hiểu Amazon Lightsail là dịch vụ VM chi phí thấp, đơn giản hóa, phù hợp cho workload nhẹ, và biết cách peering nó với VPC. Dịch vụ lưu trữ file (File Storage): Phân biệt 2 dịch vụ lưu trữ file chia sẻ cho nhiều máy chủ: EFS (Elastic File System): Dùng cho Linux (giao thức NFSv4), tính phí theo dung lượng sử dụng. FSx: Dùng cho Windows/Linux (giao thức SMB), hỗ trợ tính năng deduplication để giảm chi phí. Dịch vụ di dời (Migration): Hiểu AWS MGN là dịch vụ để di dời máy chủ từ on-premise lên AWS hoặc dùng để xây dựng hệ thống Disaster Recovery (DR) với chi phí thấp thông qua staging area. Thực hành: Nắm được các bước thực hành cơ bản với EC2 (tạo, snapshot), triển khai một cụm Auto Scaling Group hoàn chỉnh (với Load Balancer), và làm quen với Lightsail. "
},
{
	"uri": "http://localhost:1313/aws-fcj-report/vi/3-blogstranslated/",
	"title": "Các bài blogs đã dịch",
	"tags": [],
	"description": "",
	"content": "Tại đây sẽ là phần liệt kê, giới thiệu các blogs mà các bạn đã dịch. Ví dụ:\nBlog 1 - Getting started with healthcare data lakes: Using microservices Blog này giới thiệu cách bắt đầu xây dựng data lake trong lĩnh vực y tế bằng cách áp dụng kiến trúc microservices. Bạn sẽ tìm hiểu vì sao data lake quan trọng trong việc lưu trữ và phân tích dữ liệu y tế đa dạng (hồ sơ bệnh án điện tử, dữ liệu xét nghiệm, thiết bị IoT y tế…), cách microservices giúp hệ thống linh hoạt, dễ mở rộng và dễ bảo trì hơn. Bài viết cũng hướng dẫn các bước khởi tạo môi trường, tổ chức pipeline xử lý dữ liệu, và đảm bảo tuân thủ các tiêu chuẩn bảo mật \u0026amp; quyền riêng tư như HIPAA.\nBlog 2 - \u0026hellip; Blog này giới thiệu cách bắt đầu xây dựng data lake trong lĩnh vực y tế bằng cách áp dụng kiến trúc microservices. Bạn sẽ tìm hiểu vì sao data lake quan trọng trong việc lưu trữ và phân tích dữ liệu y tế đa dạng (hồ sơ bệnh án điện tử, dữ liệu xét nghiệm, thiết bị IoT y tế…), cách microservices giúp hệ thống linh hoạt, dễ mở rộng và dễ bảo trì hơn. Bài viết cũng hướng dẫn các bước khởi tạo môi trường, tổ chức pipeline xử lý dữ liệu, và đảm bảo tuân thủ các tiêu chuẩn bảo mật \u0026amp; quyền riêng tư như HIPAA.\nBlog 3 - \u0026hellip; Blog này giới thiệu cách bắt đầu xây dựng data lake trong lĩnh vực y tế bằng cách áp dụng kiến trúc microservices. Bạn sẽ tìm hiểu vì sao data lake quan trọng trong việc lưu trữ và phân tích dữ liệu y tế đa dạng (hồ sơ bệnh án điện tử, dữ liệu xét nghiệm, thiết bị IoT y tế…), cách microservices giúp hệ thống linh hoạt, dễ mở rộng và dễ bảo trì hơn. Bài viết cũng hướng dẫn các bước khởi tạo môi trường, tổ chức pipeline xử lý dữ liệu, và đảm bảo tuân thủ các tiêu chuẩn bảo mật \u0026amp; quyền riêng tư như HIPAA.\nBlog 4 - \u0026hellip; Blog này giới thiệu cách bắt đầu xây dựng data lake trong lĩnh vực y tế bằng cách áp dụng kiến trúc microservices. Bạn sẽ tìm hiểu vì sao data lake quan trọng trong việc lưu trữ và phân tích dữ liệu y tế đa dạng (hồ sơ bệnh án điện tử, dữ liệu xét nghiệm, thiết bị IoT y tế…), cách microservices giúp hệ thống linh hoạt, dễ mở rộng và dễ bảo trì hơn. Bài viết cũng hướng dẫn các bước khởi tạo môi trường, tổ chức pipeline xử lý dữ liệu, và đảm bảo tuân thủ các tiêu chuẩn bảo mật \u0026amp; quyền riêng tư như HIPAA.\nBlog 5 - \u0026hellip; Blog này giới thiệu cách bắt đầu xây dựng data lake trong lĩnh vực y tế bằng cách áp dụng kiến trúc microservices. Bạn sẽ tìm hiểu vì sao data lake quan trọng trong việc lưu trữ và phân tích dữ liệu y tế đa dạng (hồ sơ bệnh án điện tử, dữ liệu xét nghiệm, thiết bị IoT y tế…), cách microservices giúp hệ thống linh hoạt, dễ mở rộng và dễ bảo trì hơn. Bài viết cũng hướng dẫn các bước khởi tạo môi trường, tổ chức pipeline xử lý dữ liệu, và đảm bảo tuân thủ các tiêu chuẩn bảo mật \u0026amp; quyền riêng tư như HIPAA.\nBlog 6 - \u0026hellip; Blog này giới thiệu cách bắt đầu xây dựng data lake trong lĩnh vực y tế bằng cách áp dụng kiến trúc microservices. Bạn sẽ tìm hiểu vì sao data lake quan trọng trong việc lưu trữ và phân tích dữ liệu y tế đa dạng (hồ sơ bệnh án điện tử, dữ liệu xét nghiệm, thiết bị IoT y tế…), cách microservices giúp hệ thống linh hoạt, dễ mở rộng và dễ bảo trì hơn. Bài viết cũng hướng dẫn các bước khởi tạo môi trường, tổ chức pipeline xử lý dữ liệu, và đảm bảo tuân thủ các tiêu chuẩn bảo mật \u0026amp; quyền riêng tư như HIPAA.\n"
},
{
	"uri": "http://localhost:1313/aws-fcj-report/vi/5-workshop/5.4-s3-onprem/5.4.3-test-endpoint/",
	"title": "Kiểm tra Interface Endpoint",
	"tags": [],
	"description": "",
	"content": "Lấy regional DNS name (tên DNS khu vực) của S3 interface endpoint Trong Amazon VPC menu, chọn Endpoints.\nClick tên của endpoint chúng ta mới tạo ở mục 4.2: s3-interface-endpoint. Click details và lưu lại regional DNS name của endpoint (cái đầu tiên) vào text-editor của bạn để dùng ở các bước sau.\nKết nối đến EC2 instance ở trong \u0026ldquo;VPC On-prem\u0026rdquo; (giả lập môi trường truyền thống) Đi đến Session manager bằng cách gõ \u0026ldquo;session manager\u0026rdquo; vào ô tìm kiếm\nClick Start Session, chọn EC2 instance có tên Test-Interface-Endpoint. EC2 instance này đang chạy trên \u0026ldquo;VPC On-prem\u0026rdquo; và sẽ được sử dụng để kiểm tra kết nối đến Amazon S3 thông qua Interface endpoint. Session Manager sẽ mở 1 browser tab mới với shell prompt: sh-4.2 $\nĐi đến ssm-user\u0026rsquo;s home directory với lệnh \u0026ldquo;cd ~\u0026rdquo;\nTạo 1 file tên testfile2.xyz\nfallocate -l 1G testfile2.xyz Copy file vào S3 bucket mình tạo ở section 4.2 aws s3 cp --endpoint-url https://bucket.\u0026lt;Regional-DNS-Name\u0026gt; testfile2.xyz s3://\u0026lt;your-bucket-name\u0026gt; Câu lệnh này yêu cầu thông số \u0026ndash;endpoint-url, bởi vì bạn cần sử dụng DNS name chỉ định cho endpoint để truy cập vào S3 thông qua Interface endpoint. Không lấy \u0026rsquo; * \u0026rsquo; khi copy/paste tên DNS khu vực. Cung cấp tên S3 bucket của bạn Bây giờ tệp đã được thêm vào bộ chứa S3 của bạn. Hãy kiểm tra bộ chứa S3 của bạn trong bước tiếp theo.\nKiểm tra Object trong S3 bucket Đi đến S3 console Click Buckets Click tên bucket của bạn và bạn sẽ thấy testfile2.xyz đã được thêm vào s3 bucket của bạn "
},
{
	"uri": "http://localhost:1313/aws-fcj-report/vi/5-workshop/5.3-s3-vpc/",
	"title": "Truy cập S3 từ VPC",
	"tags": [],
	"description": "",
	"content": "Sử dụng Gateway endpoint Trong phần này, bạn sẽ tạo một Gateway endpoint để truy cập Amazon S3 từ một EC2 instance. Gateway endpoint sẽ cho phép tải một object lên S3 bucket mà không cần sử dụng Internet Công cộng. Để tạo endpoint, bạn phải chỉ định VPC mà bạn muốn tạo endpoint và dịch vụ (trong trường hợp này là S3) mà bạn muốn thiết lập kết nối.\nNội dung Tạo gateway endpoint Test gateway endpoint "
},
{
	"uri": "http://localhost:1313/aws-fcj-report/vi/1-worklog/1.4-week4/",
	"title": "Worklog Tuần 4",
	"tags": [],
	"description": "",
	"content": "Mục tiêu tuần 4: Tìm hiểu kiến thức toàn diện về các dịch vụ lưu trữ đa dạng trên AWS. Tập trung sâu vào dịch vụ cốt lõi là Amazon S3 (Simple Storage Service), một dịch vụ lưu trữ đối tượng, bao gồm các đặc tính (như độ bền 11 số 9, nhân bản 3 AZ), các lớp lưu trữ (Storage Classes). Học về các tính năng quan trọng như quản lý vòng đời (Lifecycle Management), Versioning (lập phiên bản), và Static Website Hosting. Các giải pháp di dời dữ liệu quy mô lớn (dòng Snow Family), giải pháp lưu trữ hybrid kết nối on-premise với cloud (Storage Gateway), dịch vụ quản lý sao lưu tập trung (AWS Backup), và các khái niệm, chiến lược cơ bản về Disaster Recovery (DR). Các công việc cần triển khai trong tuần này: Thứ Công việc Ngày bắt đầu Ngày kết thúc Nguồn tài liệu và ghi chú học tập 2 Amazon Simple Storage Service - S3\n- Học về kiến trúc của Amazon S3, một dịch vụ lưu trữ dạng đối tượng (object), phù hợp với dữ liệu ghi một lần đọc nhiều lần (WORM).\n- Tìm hiểu về kĩ thuật nhân bản dữ liệu tự động trên 3 AZ trong 1 Region để đảm bảo độ sẵn sàng cao.\n- Tìm hiểu về độ bền (durability) của S3 được thiết kế lên đến 99.999999999% (11 số 9).\n- Tìm hiểu về kĩ thuật upload (HTTP PUT) và truy cập (HTTP GET) dữ liệu S3 thông qua REST API.\n- Học về kiến trúc của các lớp lưu trữ (Storage Class), bao gồm S3 Standard, S3 Standard IA, S3 Intelligent Tiering, S3 One Zone IA, và Amazon Glacier/Deep Archive.\n- Tìm hiểu về kĩ thuật quản lý vòng đời (Object Life Cycle Management) để tự động di chuyển object giữa các lớp lưu trữ theo thời gian.\n- Tìm hiểu về kĩ thuật host Static Website (phù hợp cho Single Page Application) và cấu hình CORS (Cross-origin resource sharing).\n- Tìm hiểu về kĩ thuật kiểm soát truy cập (Control Access) bằng S3 Access Control List (ACL) (gắn vào bucket/object) và S3 Bucket Policy (dễ quản lý hơn).\n- Học về kiến trúc của S3 Endpoint, cho phép truy cập S3 bucket thông qua mạng riêng của AWS mà không cần Internet.\n- Tìm hiểu về kĩ thuật Versioning (lập phiên bản) để khôi phục đối tượng sau khi vô tình xóa hay ghi đè, và hỗ trợ chống ransomware.\n- Tìm hiểu về kĩ thuật tối ưu hiệu năng (performance) S3 bằng cách dùng random prefix (tiền tố ngẫu nhiên) cho object key, giúp S3 lưu trữ object trên nhiều partition.\n- Học về kiến trúc của S3 Glacier, dịch vụ lưu trữ chi phí thấp, dài hạn, yêu cầu phải retrieve (truy xuất) dữ liệu (Expedited, Standard, Bulk) về S3 Bucket trước khi sử dụng. 29/09/2025 29/09/2025 Documentation: https://cloudjourney.awsstudygroup.com/\nYoutube: https://youtube.com/playlist?list=PLahN4TLWtox2a3vElknwzU_urND8hLn1i\u0026si=W80Cdf_fSc6sjOV\nNotes: https://github.com/DazielNguyen/aws-fcj-report/blob/main/TAKE_NOTES_%26_LABS/Module_04/Take_notes_module_04.md 3 Snow Family\n- Học về các dịch vụ Snow Family (Snowball, Snowball Edge, Snowmobile) dùng để di dời (migrate) dữ liệu quy mô PetaByte (PB) đến Exabyte (EB) từ on-premise lên AWS (S3 hoặc Glacier).\n- Tìm hiểu về kĩ thuật của Snowball Edge là thiết bị đặc biệt có sẵn tài nguyên tính toán (compute) để xử lý dữ liệu local.\nAmazon Storage Gateway\n- Học về kiến trúc của AWS Storage Gateway, một giải pháp lưu trữ Hybrid kết hợp dung lượng lưu trữ trên AWS với on-premise.\n- Tìm hiểu về kĩ thuật của ba loại gateway:\n+ File Gateway: Cho phép lưu trữ file lên S3 qua giao thức NFS và SMB.\n+ Volume Gateway: Cung cấp lưu trữ dạng khối (block storage) qua iSCSI, dữ liệu được lưu trên S3.\n+ Tape Gateway: Cung cấp thư viện băng từ ảo (VTL) iSCSI, lưu dữ liệu tape ảo vào S3 hoặc Glacier. 30/09/2025 30/09/2025 Documentation: https://cloudjourney.awsstudygroup.com/\nYoutube: https://youtube.com/playlist?list=PLahN4TLWtox2a3vElknwzU_urND8hLn1i\u0026si=W80Cdf_fSc6sjOV\nNotes: https://github.com/DazielNguyen/aws-fcj-report/blob/main/TAKE_NOTES_%26_LABS/Module_04/Take_notes_module_04.md 4 Disaster Recovery on AWS\n- Tìm hiểu về kĩ thuật\u0026hellip; thiết kế Disaster Recovery (DR) dựa trên hai chỉ số chính:\n+ RTO (Recovery Time Objective): Thời gian cần thiết để phục hồi dịch vụ.\n+ RPO (Recovery Point Objective): Khoảng thời gian tối đa mà dữ liệu có thể bị mất.\n- Học về 4 chiến lược DR trên AWS: Sao lưu và khôi phục, Pilot Light, Low Capacity Active-Active, và Full Capacity Active-Active.\nAWS Backup\n- Học về dịch vụ AWS Backup, một dịch vụ quản lý tập trung, cho phép cấu hình và lập lịch (schedule), chính sách lưu giữ (retention) cho việc sao lưu nhiều tài nguyên AWS (EBS, EC2, RDS, EFS, Storage Gateway\u0026hellip;). 01/10/2025 01/10/2025 Documentation: https://cloudjourney.awsstudygroup.com/\nYoutube: https://youtube.com/playlist?list=PLahN4TLWtox2a3vElknwzU_urND8hLn1i\u0026si=W80Cdf_fSc6sjOV\nNotes: https://github.com/DazielNguyen/aws-fcj-report/blob/main/TAKE_NOTES_%26_LABS/Module_04/Take_notes_module_04.md 5 Lab: 000057 - Khởi đầu với Amazon S3\n- Tạo S3 Bucket\n- Upload dữ liệu trên S3\n- Host static website trên S3\nLab: 000013 - AWS Backup\n- Chuẩn bị hạ tầng\n- Khởi tạo Backup Plan\n- Thiết lập Notification\n- Kiểm tra hoạt động\nLab: 000014 - AWS Import/Export\n- Chuẩn bị máy ảo\n- Import máy ảo lên AWS\n- Export máy ảo từ AWS 02/10/2025 02/10/2025 Documentation: https://cloudjourney.awsstudygroup.com/\nYoutube: https://youtube.com/playlist?list=PLahN4TLWtox2a3vElknwzU_urND8hLn1i\u0026si=W80Cdf_fSc6sjOV\nNotes: https://github.com/DazielNguyen/aws-fcj-report/blob/main/TAKE_NOTES_%26_LABS/Module_04/Take_notes_module_04.md 6 Lab: 000024 - Storage Gateway\n- Khởi tạo Storage Gateway\n- Khởi tạo File Sharing\n- Kết nối File Share với máy\nLab: 000025 - FSX\n- AWS Managed MS AD\n- Triển khai Instance\n- Thiết lập và sử dụng FSx\n[Nghiên cứu bổ sung] - AWS Skill Builder\n- Series các bài lý thuyết chuyên sâu cho chuyên gia lưu trữ trên AWS.\n- Storage Learning Plan: Block Storage\n- Storage Learning Plan: Object Storage 03/10/2025 03/10/2025 Documentation: https://cloudjourney.awsstudygroup.com/\nYoutube: https://youtube.com/playlist?list=PLahN4TLWtox2a3vElknwzU_urND8hLn1i\u0026si=W80Cdf_fSc6sjOV\nNotes: https://github.com/DazielNguyen/aws-fcj-report/blob/main/TAKE_NOTES_%26_LABS/Module_04/Take_notes_module_04.md\nResearch Link: https://explore.skillbuilder.aws/ Kết quả đạt được tuần 4: Dịch vụ S3 (Cơ bản): Hiểu rõ Amazon S3 là dịch vụ lưu trữ đối tượng (object storage), không phải lưu trữ khối, hoạt động theo mô hình WORM (Ghi 1 lần, đọc nhiều lần). Bài học về Độ bền (Durability): Nắm được S3 được thiết kế cho độ bền 11 số 9 (99.999999999%) bằng cách tự động nhân bản dữ liệu trên 3 Availability Zone (AZ). Kĩ thuật Tối ưu chi phí S3: Phân biệt được các lớp lưu trữ (Storage Classes) như S3 Standard (truy cập thường xuyên), S3 Standard IA (không thường xuyên), và S3 Glacier (lưu trữ dài hạn, chi phí thấp, phải retrieve). Kĩ thuật Tự động hóa S3: Biết cách dùng Object Life Cycle Management để tự động chuyển dữ liệu xuống các lớp rẻ hơn (ví dụ: từ Standard sang Glacier) theo thời gian. Hiểu về Trigger Event (ví dụ: kích hoạt serverless function khi upload file). Kĩ thuật Bảo mật S3: Phân biệt hai cơ chế kiểm soát truy cập: S3 ACL (cơ chế cũ) và S3 Bucket Policy (dễ dàng xác định quyền truy cập hơn). Bài học về Bảo vệ Dữ liệu (S3): Hiểu rõ tính năng Versioning (lập phiên bản) cho phép khôi phục lại các phiên bản cũ của file, giúp chống xóa nhầm hoặc tấn công ransomware. Kĩ thuật Mạng S3: Nắm được cách dùng S3 Endpoint để truy cập S3 từ trong VPC qua mạng riêng của AWS mà không cần Internet. Biết cách host Static Website trên S3 và cấu hình CORS. Dịch vụ Di dời Dữ liệu (Migration): Nhận biết dòng Snow Family (Snowball, Snowmobile) là giải pháp di dời dữ liệu vật lý quy mô lớn (Petabyte, Exabyte) từ on-premise. Dịch vụ Lưu trữ Hybrid: Hiểu Storage Gateway là giải pháp lưu trữ lai, cho phép các ứng dụng on-premise sử dụng các giao thức (NFS, SMB, iSCSI) để lưu trữ dữ liệu lên S3/Glacier. Bài học về Disaster Recovery (DR): Nắm được 2 khái niệm cơ bản để thiết kế DR là RTO (thời gian phục hồi) và RPO (lượng dữ liệu chấp nhận mất). Dịch vụ Sao lưu (Backup): Biết AWS Backup là dịch vụ quản lý tập trung, giúp tự động hóa việc sao lưu (schedule, retention) cho nhiều tài nguyên AWS (EBS, RDS, EFS\u0026hellip;). Thực hành: Nắm được các bước thực hành tạo S3 bucket, host website tĩnh, và cấu hình AWS Backup. "
},
{
	"uri": "http://localhost:1313/aws-fcj-report/vi/4-eventparticipated/",
	"title": "Các events đã tham gia",
	"tags": [],
	"description": "",
	"content": "Trong quá trình thực tập, em đã tham gia 2 events, với mỗi event là một trải nghiệm đáng nhớ với những kiến thức mới, hay và bổ ích, cùng với đó là nhứng món quà và những khoảnh khắc rất tuyệt vời.\nEvent 1 Tên sự kiện: Vietnam Cloud Day 2025 - Ho Chi Minh City Connect Edition for Builders (Track 1: GenAI \u0026amp; Data)\nThời gian: 09:00 ngày 18/09/2025\nĐịa điểm: Tầng 26, tòa nhà Bitexco, số 02 đường Hải Triều, phường Sài Gòn, thành phố Hồ Chí Minh\nVai trò trong sự kiện: Người tham dự\nEvent 2 Tên sự kiện: GenAI-powered App-DB Modernization workshop\nThời gian: 09:00 ngày 13/08/2025\nĐịa điểm: Tầng 26, tòa nhà Bitexco, số 02 đường Hải Triều, phường Sài Gòn, thành phố Hồ Chí Minh\nVai trò trong sự kiện: Người tham dự\n"
},
{
	"uri": "http://localhost:1313/aws-fcj-report/vi/5-workshop/5.4-s3-onprem/5.4.4-dns-simulation/",
	"title": "Mô phỏng On-premises DNS ",
	"tags": [],
	"description": "",
	"content": "AWS PrivateLink endpoint có một địa chỉ IP cố định trong từng AZ nơi chúng được triển khai, trong suốt thời gian tồn tại của endpoint (cho đến khi endpoint bị xóa). Các địa chỉ IP này được gắn vào Elastic network interface (ENI). AWS khuyến nghị sử dụng DNS để resolve địa chỉ IP cho endpoint để các ứng dụng downstream sử dụng địa chỉ IP mới nhất khi ENIs được thêm vào AZ mới hoặc bị xóa theo thời gian.\nTrong phần này, bạn sẽ tạo một quy tắc chuyển tiếp (forwarding rule) để gửi các yêu cầu resolve DNS từ môi trường truyền thống (mô phỏng) đến Private Hosted Zone trên Route 53. Phần này tận dụng cơ sở hạ tầng do CloudFormation triển khai trong phần Chuẩn bị môi trường.\nTạo DNS Alias Records cho Interface endpoint Click link để đi đến Route 53 management console (Hosted Zones section). Mẫu CloudFormation mà bạn triển khai trong phần Chuẩn bị môi trường đã tạo Private Hosted Zone này. Nhấp vào tên của Private Hosted Zone, s3.us-east-1.amazonaws.com: Tạo 1 record mới trong Private Hosted Zone: Giữ nguyên Record name và record type Alias Button: click để enable Route traffic to: Alias to VPC Endpoint Region: US East (N. Virginia) [us-east-1] Chọn endpoint: Paste tên (Regional VPC Endpoint DNS) bạn đã lưu lại ở phần 4.3 Click Add another record, và add 1 cái record thứ 2 sử dụng những thông số sau: Record name: *. Record type: giữ giá trị default (type A) Alias Button: Click để enable Route traffic to: Alias to VPC Endpoint Region: US East (N. Virginia) [us-east-1] Chọn endpoint: Paste tên (Regional VPC Endpoint DNS) bạn đã lưu lại ở phần 4.3 Click Create records Record mới xuất hiện trên giao diện Route 53.\nTạo một Resolver Forwarding Rule Route 53 Resolver Forwarding Rules cho phép bạn chuyển tiếp các DNS queries từ VPC của bạn đến các nguồn khác để resolve name. Bên ngoài môi trường workshop, bạn có thể sử dụng tính năng này để chuyển tiếp các DNS queries từ VPC của bạn đến các máy chủ DNS chạy trên on-premises. Trong phần này, bạn sẽ mô phỏng một on-premises conditional forwarder bằng cách tạo một forwarding rule để chuyển tiếp các DNS queries for Amazon S3 đến một Private Hosted Zone chạy trong \u0026ldquo;VPC Cloud\u0026rdquo; để resolve PrivateLink interface endpoint regional DNS name.\nTừ giao diện Route 53, chọn Inbound endpoints trên thanh bên trái\nTrong giao diện Inbound endpoint, Chọn ID của Inbound endpoint.\nSao chép 2 địa chỉ IP trong danh sách vào trình chỉnh sửa. Từ giao diện Route 53, chọn Resolver \u0026gt; Rules và chọn Create rule Trong giao diện Create rule Name: myS3Rule Rule type: Forward Domain name: s3.us-east-1.amazonaws.com VPC: VPC On-prem Outbound endpoint: VPCOnpremOutboundEndpoint Target IP Addresses: điền cả hai IP bạn đã lưu trữ trên trình soạn thảo (inbound endpoint addresses) và sau đó chọn Submit Bạn đã tạo thành công resolver forwarding rule.\nKiểm tra on-premises DNS mô phỏng. Kết nối đến Test-Interface-Endpoint EC2 instance với Session Manager Kiểm tra DNS resolution. Lệnh dig sẽ trả về địa chỉ IP được gán cho VPC endpoint interface đang chạy trên VPC (địa chỉ IP của bạn sẽ khác): dig +short s3.us-east-1.amazonaws.com Các địa chỉ IP được trả về là các địa chỉ IP VPC enpoint, KHÔNG phải là các địa chỉ IP Resolver mà bạn đã dán từ trình chỉnh sửa văn bản của mình. Các địa chỉ IP của Resolver endpoint và VPC endpoin trông giống nhau vì chúng đều từ khối CIDR VPC Cloud.\nTruy cập vào menu VPC (phần Endpoints), chọn S3 interface endpoint. Nhấp vào tab Subnets và xác nhận rằng các địa chỉ IP được trả về bởi lệnh Dig khớp với VPC endpoint: Hãy quay lại shell của bạn và sử dụng AWS CLI để kiểm tra danh sách các bucket S3 của bạn: aws s3 ls --endpoint-url https://s3.us-east-1.amazonaws.com Kết thúc phiên làm việc của Session Manager của bạn: Trong phần này, bạn đã tạo một Interface Endpoint cho Amazon S3. Điểm cuối này có thể được truy cập từ on-premises thông qua Site-to-Site VPN hoặc AWS Direct Connect. Các điểm cuối Route 53 Resolver outbound giả lập chuyển tiếp các yêu cầu DNS từ on-premises đến một Private Hosted Zone đang chạy trên đám mây. Các điểm cuối Route 53 inbound nhận yêu cầu giải quyết và trả về một phản hồi chứa địa chỉ IP của Interface Endpoint VPC. Sử dụng DNS để giải quyết các địa chỉ IP của điểm cuối cung cấp tính sẵn sàng cao trong trường hợp một Availability Zone gặp sự cố.\n"
},
{
	"uri": "http://localhost:1313/aws-fcj-report/vi/5-workshop/5.4-s3-onprem/",
	"title": "Truy cập S3 từ môi trường truyền thống",
	"tags": [],
	"description": "",
	"content": "Tổng quan Trong phần này, bạn sẽ tạo một Interface Endpoint để truy cập Amazon S3 từ môi trường truyền thống mô phỏng. Interface Endpoint sẽ cho phép bạn định tuyến đến Amazon S3 qua kết nối VPN từ môi trường truyền thống mô phỏng của bạn.\nTại sao nên sử dụng Interface Endpoint:\nCác Gateway endpoints chỉ hoạt động với các tài nguyên đang chạy trong VPC nơi chúng được tạo. Interface Endpoint hoạt động với tài nguyên chạy trong VPC và cả tài nguyên chạy trong môi trường truyền thống. Khả năng kết nối từ môi trường truyền thống của bạn với aws cloud có thể được cung cấp bởi AWS Site-to-Site VPN hoặc AWS Direct Connect. Interface Endpoint cho phép bạn kết nối với các dịch vụ do AWS PrivateLink cung cấp. Các dịch vụ này bao gồm một số dịch vụ AWS, dịch vụ do các đối tác và khách hàng AWS lưu trữ trong VPC của riêng họ (gọi tắt là Dịch vụ PrivateLink endpoints) và các dịch vụ Đối tác AWS Marketplace. Đối với workshop này, chúng ta sẽ tập trung vào việc kết nối với Amazon S3. "
},
{
	"uri": "http://localhost:1313/aws-fcj-report/vi/1-worklog/1.5-week5/",
	"title": "Worklog Tuần 5",
	"tags": [],
	"description": "",
	"content": "Mục tiêu tuần 5: Tìm hiểu kiến thức nền tảng và các dịch vụ cốt lõi về bảo mật trên AWS, xoay quanh triết lý \u0026ldquo;Security is job zero\u0026rdquo;. Bắt đầu với khái niệm cơ bản nhất là Mô hình chia sẻ trách nhiệm (Share Responsibility Model). Tập trung sâu vào việc quản lý định danh và quyền truy cập (Identify and Access Management - IAM), bao gồm các thành phần: User, Group, Policy, và Role. Mở rộng tìm hiểu thêm các dịch vụ quản lý định danh ở quy mô lớn hơn như AWS Organizations (quản lý nhiều tài khoản), AWS Identity Center (SSO) (đăng nhập một lần), và Amazon Cognito (quản lý người dùng cho ứng dụng web/di động). Nắm rõ kiến thức về bảo vệ dữ liệu thông qua mã hóa với AWS KMS và giám sát, kiểm tra tuân thủ với AWS Security Hub. Các công việc cần triển khai trong tuần này: Thứ Công việc Ngày bắt đầu Ngày kết thúc Nguồn tài liệu và ghi chú học tập 2 Share Responsibility Model\n- Học về Mô hình chia sẻ trách nhiệm, trong đó AWS chịu trách nhiệm bảo mật của đám mây (hạ tầng vật lý, software nền tảng) và khách hàng chịu trách nhiệm bảo mật trong đám mây (cấu hình, dữ liệu, ứng dụng).\n- Tìm hiểu về sự thay đổi trách nhiệm bảo mật tùy thuộc vào loại hình dịch vụ (hạ tầng, quản lý kết hợp, hay quản lý hoàn toàn).\nAWS Identify and Access Management (IAM)\n- Tìm hiểu về Root Account, tài khoản có toàn quyền tuyệt đối, và các best practice để bảo vệ nó (tạo IAM Admin User để dùng thay thế, khóa root credentials).\n- Học về IAM User, một thực thể (principal) dùng để tương tác với AWS, khi mới tạo mặc định không có bất cứ quyền gì.\n- Tìm hiểu về kĩ thuật quản lý user hiệu quả bằng cách gom nhiều IAM User vào chung một IAM Group.\n- Học về IAM Policy, một văn bản JSON định nghĩa quyền hạn, bao gồm 2 loại:\n+ Identity-based Policy: Gán trực tiếp cho một IAM Principal (User, Group, Role).\n+ Resource-based Policy: Gán trực tiếp vào một tài nguyên (ví dụ: S3 Bucket Policy).\n- Tìm hiểu về kĩ thuật đánh giá quyền của IAM, trong đó một Deny tường minh (explicit deny) luôn luôn được ưu tiên, bất kể có policy Allow nào khác.\n- Học về kiến trúc của IAM Role, một tập hợp quyền (policy) mà không đi kèm credentials (mật khẩu/access key) vĩnh viễn.\n- Tìm hiểu về kĩ thuật Assume Role: Một IAM User (hoặc Service) sử dụng dịch vụ AWS STS (Security Token Service) để tạm thời \u0026ldquo;đảm nhận\u0026rdquo; quyền của IAM Role và nhận về thông tin chứng thực tạm thời.\n- Tìm hiểu về ứng dụng thực tế của IAM Role, ví dụ cấp quyền cho dịch vụ EC2 truy cập vào S3 mà không cần lưu trữ access key trên máy chủ. 06/10/2025 06/10/2025 Documentation: https://cloudjourney.awsstudygroup.com/\nYoutube: https://youtube.com/playlist?list=PLahN4TLWtox2a3vElknwzU_urND8hLn1i\u0026si=W80Cdf_fSc6sjOV\nNotes: https://github.com/DazielNguyen/aws-fcj-report/blob/main/TAKE_NOTES_%26_LABS/Module_05/Take_notes_module_05.md 3 Amazon Cognito\n- Học về Amazon Cognito, dịch vụ quản lý xác thực (đăng nhập, đăng ký) và cấp phép cho người dùng cuối của các ứng dụng web và di động (khác với IAM User là người quản trị AWS).\n- Tìm hiểu về hai thành phần chính của Cognito:\n+ User Pool: Thư mục quản lý người dùng, hỗ trợ đăng nhập trực tiếp hoặc qua các bên thứ ba (Facebook, Google).\n+ Identity Pool: Cấp cho người dùng ứng dụng quyền truy cập (thường là tạm thời) vào các dịch vụ AWS khác.\nAWS Organization\n- Học về AWS Organizations, dịch vụ giúp quản lý và điều hành tập trung nhiều tài khoản AWS.\n- Tìm hiểu về kĩ thuật Consolidated Billing (thanh toán tập trung) cho tất cả tài khoản.\n- Tìm hiểu về kĩ thuật gom các tài khoản vào OU (Organization Unit) và áp dụng Service Control Policies (SCP) để giới hạn quyền tối đa mà các IAM User/Role trong tài khoản đó có thể thực hiện (kể cả deny-based).\nAWS Identify Center (SSO)\n- Học về AWS Identity Center (SSO), dịch vụ giúp quản lý quyền truy cập tập trung (đăng nhập một lần) vào tất cả các tài khoản AWS trong Organization và các ứng dụng bên ngoài.\n- Tìm hiểu về kĩ thuật sử dụng Permission Set (một bộ quyền được lưu trữ trong Identity Center) để gán cho User/Group. Khi user truy cập 1 tài khoản, Permission Set sẽ được cấp dưới dạng một IAM Role trong tài khoản đó. 07/10/2025 07/10/2025 Documentation: https://cloudjourney.awsstudygroup.com/\nYoutube: https://youtube.com/playlist?list=PLahN4TLWtox2a3vElknwzU_urND8hLn1i\u0026si=W80Cdf_fSc6sjOV\nNotes: https://github.com/DazielNguyen/aws-fcj-report/blob/main/TAKE_NOTES_%26_LABS/Module_05/Take_notes_module_05.md 4 AWS Key Management Service (KMS)\n- Học về AWS KMS, dịch vụ tạo và quản lý các khóa mã hóa (encryption key) để bảo vệ dữ liệu ở trạng thái nghỉ (Encryption at rest).\n- Tìm hiểu về\u0026hellip; CMK (Customer Managed Key) (khóa chính nằm trong KMS) và Data Key (khóa dùng để mã hóa/giải mã dữ liệu thực tế, được tạo ra bởi CMK).\nAWS Security Hub\n- Học về AWS Security Hub, dịch vụ kiểm tra bảo mật liên tục, dựa trên các best practices của AWS và tiêu chuẩn ngành (như PCIDSS).\n- Tìm hiểu về cách Security Hub cung cấp kết quả dưới dạng điểm số và xác định các tài nguyên cần chú ý.\nLab: 000002 - Bắt đầu với IAM và IAM Role\n- IAM Group và IAM User\n- Tạo IAM Role\n- Assume Role\nLab: 000044 - IAM Role và Condition\n- Giới thiệu về IAM\n- Tạo User quản trị EC2\n- Tạo User quản trị RDS\n- Tạo Group quản trị-Cấu hình IAM Role Condition\n- Tạo IAM Role có quyền Admin 5.2 Tạo IAM User 5.3 Cấu hình Switch role 5.4 Giới hạn IP 5.5 Giới hạn theo thời gian.\n08/10/2025 08/10/2025 Documentation: https://cloudjourney.awsstudygroup.com/\nYoutube: https://youtube.com/playlist?list=PLahN4TLWtox2a3vElknwzU_urND8hLn1i\u0026si=W80Cdf_fSc6sjOV\nNotes: https://github.com/DazielNguyen/aws-fcj-report/blob/main/TAKE_NOTES_%26_LABS/Module_05/Take_notes_module_05.md 5 Lab: 000048 - IAM Role và Application\n- Sử dụng access key\n- IAM Role trên EC2\nLab: 000030 - IAM Permission Boundary\n- Giới thiệu IAM Permission Boundary\n- Tạo Policy giới hạn\n- Tạo IAM User giới hạn quyền\n- Kiểm tra User bị giới hạn\nLab: 000027 - Tag và Resource Groups\n- Sử dụng thẻ\n- Sử dụng thẻ bằng Console\n- Hiển thị các thẻ\n- Thêm hoặc xóa thẻ\n- Gắn thẻ cho một máy ảo\n- Lọc tài nguyên theo thẻ\n- Sử dụng thẻ bằng CLI\n- Resource Group\nLab: 000028 - Quản lý EC2 qua Resource Tag\n- Tạo IAM Policy\n- Tạo IAM Role\n- Kiểm tra IAM Role 09/10/2025 09/10/2025 Documentation: https://cloudjourney.awsstudygroup.com/\nYoutube: https://youtube.com/playlist?list=PLahN4TLWtox2a3vElknwzU_urND8hLn1i\u0026si=W80Cdf_fSc6sjOV\nNotes: https://github.com/DazielNguyen/aws-fcj-report/blob/main/TAKE_NOTES_%26_LABS/Module_05/Take_notes_module_05.md 6 Lab: 000018 - Sử dụng AWS Security Hub\n- Các tiêu chuẩn bảo mật\n- Kích hoạt Security HUb\n- Điểm từng bộ tiêu chuẩn\nLab: 000012 - Sử dụng AWS SSO\n- Các bước chuẩn bị\n- Tạo AWS Account trong AWS Organizations\n- Thiết lập Organization Unit\n- Thiết lập AWS SSO\n- Kiểm tra\nLab: 000033 - KMS Workshop\n- Thiết lập môi trường\n- Bắt đầu với AWS KMS\n- Mã hóa với AWS KMS\n- Key Policy và các best practices\n- Giám sát việc sử dụng AWS KMS.\n[Nghiên cứu bổ sung] - AWS Certified Security Special All-in-One-Exam Guide (Exam SCS-C01)\n- Tài liệu học để thi chúng chỉ Security Specialty 10/10/2025 10/10/2025 \u0026ldquo;Documentation: https://cloudjourney.awsstudygroup.com/\nYoutube: https://youtube.com/playlist?list=PLahN4TLWtox2a3vElknwzU_urND8hLn1i\u0026si=W80Cdf_fSc6sjOV\nNotes: https://github.com/DazielNguyen/aws-fcj-report/blob/main/TAKE_NOTES_%26_LABS/Module_05/Take_notes_module_05.md\nResearch Link: [https://www.amazon.com/Certified-Security-Specialty-Guide-SCS-C01/dp/1260461726]\u0026rdquo; Kết quả đạt được tuần 5: Bài học Nền tảng: Nắm vững Mô hình chia sẻ trách nhiệm (Share Responsibility Model), hiểu rõ đâu là trách nhiệm của AWS và đâu là của khách hàng. Dịch vụ IAM (Cốt lõi): Phân biệt rõ ràng Root Account (toàn quyền, cần khóa lại) và IAM User (dùng hàng ngày, mặc định không có quyền). Nắm vững 3 thành phần chính để cấp quyền: IAM User (đối tượng), IAM Policy (giấy phép - viết bằng JSON), và IAM Group (nhóm các đối tượng). Hiểu rõ IAM Role: một cơ chế cấp quyền tạm thời (không có credentials vĩnh viễn) cho cả User và Service (như EC2). Kĩ thuật IAM (Quan trọng): Biết cách một User/Service \u0026ldquo;nhận\u0026rdquo; quyền của Role thông qua kĩ thuật Assume Role (sử dụng dịch vụ STS). Hiểu quy tắc đánh giá quyền: Explicit Deny (Deny tường minh) luôn thắng mọi quyền Allow. Dịch vụ Quản lý Định danh (Identity Services): Phân biệt rõ IAM (quản lý người quản trị AWS) và Amazon Cognito (quản lý người dùng cuối của ứng dụng web/mobile). Biết Cognito User Pool là thư mục người dùng (có thể login bằng Facebook, Google) và Identity Pool là nơi cấp quyền cho user đó truy cập tài nguyên AWS. Dịch vụ Quản lý Đa tài khoản (Multi-Account): Hiểu AWS Organizations dùng để quản lý tập trung nhiều tài khoản, cho phép Consolidated Billing (thanh toán gộp). Biết dùng Service Control Policies (SCP) trong Organization để giới hạn quyền tối đa của các tài khoản con. Nắm được AWS Identity Center (SSO) là giải pháp đăng nhập một lần, sử dụng Permission Set để cấp quyền vào các tài khoản trong Organization. Dịch vụ Mã hóa (Encryption): Biết AWS KMS là dịch vụ để tạo và quản lý khóa mã hóa. Hiểu cơ chế mã hóa Encryption at rest và phân biệt được CMK (khóa chính trong KMS) với Data Key (khóa dùng để mã hóa dữ liệu thực tế). Dịch vụ Giám sát Bảo mật (Monitoring): Biết AWS Security Hub là dịch vụ quét và chấm điểm bảo mật, giúp kiểm tra tuân thủ (compliance) theo các tiêu chuẩn (như PCIDSS). Thực hành: Thực hành tạo và quản lý User, Group, Policy, Role. Thực hành triển khai SSO và KMS. Thực hành sử dụng các tính năng nâng cao của IAM như Conditions và Permission Boundary. "
},
{
	"uri": "http://localhost:1313/aws-fcj-report/vi/5-workshop/5.5-policy/",
	"title": "VPC Endpoint Policies",
	"tags": [],
	"description": "",
	"content": "Khi bạn tạo một Interface Endpoint hoặc cổng, bạn có thể đính kèm một chính sách điểm cuối để kiểm soát quyền truy cập vào dịch vụ mà bạn đang kết nối. Chính sách VPC Endpoint là chính sách tài nguyên IAM mà bạn đính kèm vào điểm cuối. Nếu bạn không đính kèm chính sách khi tạo điểm cuối, thì AWS sẽ đính kèm chính sách mặc định cho bạn để cho phép toàn quyền truy cập vào dịch vụ thông qua điểm cuối.\nBạn có thể tạo chính sách chỉ hạn chế quyền truy cập vào các S3 bucket cụ thể. Điều này hữu ích nếu bạn chỉ muốn một số Bộ chứa S3 nhất định có thể truy cập được thông qua điểm cuối.\nTrong phần này, bạn sẽ tạo chính sách VPC Endpoint hạn chế quyền truy cập vào S3 bucket được chỉ định trong chính sách VPC Endpoint.\nKết nối tới EC2 và xác minh kết nối tới S3. Bắt đầu một phiên AWS Session Manager mới trên máy chủ có tên là Test-Gateway-Endpoint. Từ phiên này, xác minh rằng bạn có thể liệt kê nội dung của bucket mà bạn đã tạo trong Phần 1: Truy cập S3 từ VPC. aws s3 ls s3://\u0026lt;your-bucket-name\u0026gt; Nội dung của bucket bao gồm hai tệp có dung lượng 1GB đã được tải lên trước đó.\nTạo một bucket S3 mới; tuân thủ mẫu đặt tên mà bạn đã sử dụng trong Phần 1, nhưng thêm \u0026lsquo;-2\u0026rsquo; vào tên. Để các trường khác là mặc định và nhấp vào Create. Tạo bucket thành công. Policy mặc định cho phép truy cập vào tất cả các S3 Buckets thông qua VPC endpoint.\nTrong giao diện Edit Policy, sao chép và dán theo policy sau, thay thế yourbucketname-2 với tên bucket thứ hai của bạn. Policy này sẽ cho phép truy cập đến bucket mới thông qua VPC endpoint, nhưng không cho phép truy cập đến các bucket còn lại. Chọn Save để kích hoạt policy. { \u0026#34;Id\u0026#34;: \u0026#34;Policy1631305502445\u0026#34;, \u0026#34;Version\u0026#34;: \u0026#34;2012-10-17\u0026#34;, \u0026#34;Statement\u0026#34;: [ { \u0026#34;Sid\u0026#34;: \u0026#34;Stmt1631305501021\u0026#34;, \u0026#34;Action\u0026#34;: \u0026#34;s3:*\u0026#34;, \u0026#34;Effect\u0026#34;: \u0026#34;Allow\u0026#34;, \u0026#34;Resource\u0026#34;: [ \u0026#34;arn:aws:s3:::yourbucketname-2\u0026#34;, \u0026#34;arn:aws:s3:::yourbucketname-2/*\u0026#34; ], \u0026#34;Principal\u0026#34;: \u0026#34;*\u0026#34; } ] } Cấu hình policy thành công.\nTừ session của bạn trên Test-Gateway-Endpoint instance, kiểm tra truy cập đến S3 bucket bạn tạo ở bước đầu aws s3 ls s3://\u0026lt;yourbucketname\u0026gt; Câu lệnh trả về lỗi bởi vì truy cập vào S3 bucket không có quyền trong VPC endpoint policy.\nTrở lại home directory của bạn trên EC2 instance cd~ Tạo file fallocate -l 1G test-bucket2.xyz Sao chép file lên bucket thứ 2 aws s3 cp test-bucket2.xyz s3://\u0026lt;your-2nd-bucket-name\u0026gt; Thao tác này được cho phép bởi VPC endpoint policy.\nSau đó chúng ta kiểm tra truy cập vào S3 bucket đầu tiên\naws s3 cp test-bucket2.xyz s3://\u0026lt;your-1st-bucket-name\u0026gt;\nCâu lệnh xảy ra lỗi bởi vì bucket không có quyền truy cập bởi VPC endpoint policy.\nTrong phần này, bạn đã tạo chính sách VPC Endpoint cho Amazon S3 và sử dụng AWS CLI để kiểm tra chính sách. Các hoạt động AWS CLI liên quan đến bucket S3 ban đầu của bạn thất bại vì bạn áp dụng một chính sách chỉ cho phép truy cập đến bucket thứ hai mà bạn đã tạo. Các hoạt động AWS CLI nhắm vào bucket thứ hai của bạn thành công vì chính sách cho phép chúng. Những chính sách này có thể hữu ích trong các tình huống khi bạn cần kiểm soát quyền truy cập vào tài nguyên thông qua VPC Endpoint.\n"
},
{
	"uri": "http://localhost:1313/aws-fcj-report/vi/5-workshop/",
	"title": "Workshop",
	"tags": [],
	"description": "",
	"content": "Đảm bảo truy cập Hybrid an toàn đến S3 bằng cách sử dụng VPC endpoint Tổng quan AWS PrivateLink cung cấp kết nối riêng tư đến các dịch vụ aws từ VPCs hoặc trung tâm dữ liệu (on-premise) mà không làm lộ lưu lượng truy cập ra ngoài public internet.\nTrong bài lab này, chúng ta sẽ học cách tạo, cấu hình, và kiểm tra VPC endpoints để cho phép workload của bạn tiếp cận các dịch vụ AWS mà không cần đi qua Internet công cộng.\nChúng ta sẽ tạo hai loại endpoints để truy cập đến Amazon S3: gateway vpc endpoint và interface vpc endpoint. Hai loại vpc endpoints này mang đến nhiều lợi ích tùy thuộc vào việc bạn truy cập đến S3 từ môi trường cloud hay từ trung tâm dữ liệu (on-premise).\nGateway - Tạo gateway endpoint để gửi lưu lượng đến Amazon S3 hoặc DynamoDB using private IP addresses. Bạn điều hướng lưu lượng từ VPC của bạn đến gateway endpoint bằng các bảng định tuyến (route tables) Interface - Tạo interface endpoint để gửi lưu lượng đến các dịch vụ điểm cuối (endpoints) sử dụng Network Load Balancer để phân phối lưu lượng. Lưu lượng dành cho dịch vụ điểm cuối được resolved bằng DNS. Nội dung Tổng quan về workshop Chuẩn bị Truy cập đến S3 từ VPC Truy cập đến S3 từ TTDL On-premises VPC Endpoint Policies (làm thêm) Dọn dẹp tài nguyên "
},
{
	"uri": "http://localhost:1313/aws-fcj-report/vi/1-worklog/1.6-week6/",
	"title": "Worklog Tuần 6",
	"tags": [],
	"description": "",
	"content": "Mục tiêu tuần 6: Ôn tập các khái niệm cơ sở dữ liệu (CSDL) nền tảng, bao gồm RDBMS (khóa chính, khóa ngoại), các kỹ thuật tối ưu (Index, Partition), và các khái niệm về vận hành (Database Log, Buffer). Phân biệt rõ hai loại hệ thống CSDL chính: OLTP (Online Transaction Processing - xử lý giao dịch) và OLAP (Online Analytical Processing - xử lý phân tích hay Kho dữ liệu). Hiểu rõ dịch vụ CSDL quan hệ được quản lý Amazon RDS, bao gồm các tính năng cốt lõi như Multi-AZ (cho tính sẵn sàng cao) và Read Replicas (cho hiệu năng đọc). Tìm hiểu về Amazon Aurora, dịch vụ CSDL cloud-native của AWS, với kiến trúc lưu trữ chia sẻ độc đáo, hiệu năng cao và các tính năng vượt trội như Zero Replication Lag. Tìm hiểu về Amazon Redshift, dịch vụ kho dữ liệu (Data Warehouse) quy mô petabyte, được thiết kế cho OLAP, và hiểu rõ kiến trúc MPP cùng kỹ thuật Columnar Storage. Hiểu về vai trò của Amazon ElastiCache (Redis, Memcached) như một lớp bộ nhớ đệm (caching) tốc độ cao để giảm tải cho CSDL chính. Các công việc cần triển khai trong tuần này: Thứ Công việc Ngày bắt đầu Ngày kết thúc Nguồn tài liệu và ghi chú học tập 2 Database Concepts\n- Bài học: Ôn tập các khái niệm CSDL căn bản như Database (hệ thống thông tin có cấu trúc) và Session (phiên làm việc).\n- Học về kiến trúc: CSDL Quan hệ (RDBMS), bao gồm Primary Key (Khóa chính) để xác định duy nhất một hàng và Foreign Key (Khóa ngoại) để tạo liên kết giữa các bảng.\n- Tìm hiểu về kĩ thuật: Normalization (Chuẩn hóa), là kỹ thuật chia dữ liệu ra nhiều bảng (sử dụng khóa) để chống trùng lặp dữ liệu.\n- Tìm hiểu về kĩ thuật: Tối ưu hiệu năng:\n+ Index (Chỉ mục): Một cấu trúc dữ liệu giúp tăng tốc độ truy xuất (đọc), nhưng làm tăng chi phí ghi.\n+ Partition (Phân vùng): Chia một bảng lớn thành nhiều phần nhỏ để tăng tốc độ truy vấn.\n+ Execution Plan (Kế hoạch thực thi): Là tập hợp các bước mà CSDL quyết định dùng để truy cập dữ liệu (ví dụ: có dùng Index hay không).\n- Tìm hiểu về kĩ thuật: Đảm bảo toàn vẹn và tốc độ:\n+ Database Log (Nhật ký CSDL): Ghi lại tất cả thay đổi, quan trọng cho việc khôi phục (recovery) và đồng bộ hóa (replication).\n+ Buffer (Bộ nhớ đệm): Vùng lưu trữ tạm thời trong RAM, giúp tăng tốc độ đọc vì đọc từ RAM nhanh hơn đọc từ ổ cứng.\n- Bài học: Phân loại CSDL:\n+ RDBMS (ACID): Cấu trúc cố định (Schema), tối ưu lưu trữ (Normalization), mở rộng theo chiều dọc (Vertical Scaling).\n+ NoSQL (BASE): Cấu trúc linh hoạt (Dynamic Schema), tối ưu hiệu năng (Denormalization), mở rộng theo chiều ngang (Horizontal Scaling).\n- Bài học: Phân loại hệ thống:\n+ OLTP (Online Transaction Processing): Hệ thống xử lý giao dịch (ngân hàng, đặt hàng), cần xử lý nhanh các thao tác đọc/ghi/cập nhật và đảm bảo toàn vẹn (roll back).\n+ OLAP (Online Analytical Processing): Hệ thống kho dữ liệu (Data Warehouse), lưu trữ dữ liệu lịch sử để phân tích phức tạp (báo cáo, tìm xu hướng). 13/10/2025 13/10/2025 Documentation: https://cloudjourney.awsstudygroup.com/\nYoutube: https://youtube.com/playlist?list=PLahN4TLWtox2a3vElknwzU_urND8hLn1i\u0026si=W80Cdf_fSc6sjOV\nNotes: https://github.com/DazielNguyen/aws-fcj-report/blob/main/TAKE_NOTES_%26_LABS/Module_06/Take_notes_module_06.md 3 Amazon RDS\n- Học về dịch vụ: Amazon RDS (Relational Database Service), một dịch vụ CSDL quan hệ được quản lý hoàn toàn (managed service), hỗ trợ các engine phổ biến (MySQL, PostgreSQL, Oracle, v.v.).\n- Bài học: Mục tiêu của RDS là tự động hóa các tác vụ quản trị (cập nhật, sao lưu) để người dùng tập trung vào ứng dụng.\n- Tìm hiểu về kĩ thuật: Automated Backups (Sao lưu tự động) CSDL và transaction log, cho phép Point-in-Time Recovery (phục hồi tại một thời điểm) trong vòng 35 ngày.\n- Học về kiến trúc: Multi-AZ (High Availability)\n+ Tự động tạo một bản sao standby (dự phòng) ở một AZ khác.\n+ Sử dụng Synchronous Replication (sao chép đồng bộ).\n+ Hỗ trợ Automatic Failover (tự động chuyển đổi) nếu CSDL chính gặp sự cố.\n- Học về kiến trúc: Read Replicas (Tối ưu Hiệu năng Đọc)\n+ Tạo ra các bản sao chỉ đọc để giảm tải cho CSDL chính (ví dụ: cho các tác vụ báo cáo).\n+ Sử dụng Asynchronous Replication (sao chép bất đồng bộ), có thể gây ra \u0026ldquo;replication lag\u0026rdquo; (độ trễ).\n- Bài học: RDS thường được sử dụng cho các ứng dụng OLTP và được bảo vệ bằng Security Group. 14/10/2025 14/10/2025 Documentation: https://cloudjourney.awsstudygroup.com/\nYoutube: https://youtube.com/playlist?list=PLahN4TLWtox2a3vElknwzU_urND8hLn1i\u0026si=W80Cdf_fSc6sjOV\nNotes: https://github.com/DazielNguyen/aws-fcj-report/blob/main/TAKE_NOTES_%26_LABS/Module_06/Take_notes_module_06.md 4 Amazon Aurora\n- Học về dịch vụ: Amazon Aurora, một CSDL do AWS phát triển, tương thích MySQL/PostgreSQL, thuộc dịch vụ RDS nhưng có hiệu năng cao hơn (gấp 3-5 lần).\n- Học về kiến trúc: Khác biệt lớn nhất của Aurora là tái thiết kế lại tầng lưu trữ.\n- Học về kiến trúc: Một \u0026ldquo;Cluster\u0026rdquo; Aurora bao gồm 1 Writer (bản ghi) và tối đa 15 Readers (bản đọc), tất cả cùng chia sẻ một phân vùng lưu trữ (Cluster Volume) duy nhất.\n- Tìm hiểu về kĩ thuật: Dữ liệu trên Cluster Volume được nhân bản 6 lần qua 3 AZ để đảm bảo độ bền.\n- Bài học: Ưu điểm vượt trội của Aurora là Zero Replication Lag (không có độ trễ sao chép) vì các bản Readers đọc chung volume với Writer.\n- Tìm hiểu về kĩ thuật: Các tính năng doanh nghiệp như Backtrack (tua ngược CSDL mà không cần restore) và Global Database (tạo bản sao chỉ đọc ở các Region khác nhau). 15/10/2025 15/10/2025 Documentation: https://cloudjourney.awsstudygroup.com/\nYoutube: https://youtube.com/playlist?list=PLahN4TLWtox2a3vElknwzU_urND8hLn1i\u0026si=W80Cdf_fSc6sjOV\nNotes: https://github.com/DazielNguyen/aws-fcj-report/blob/main/TAKE_NOTES_%26_LABS/Module_06/Take_notes_module_06.md 5 Amazon Redshift\n- Học về dịch vụ: Amazon Redshift, một dịch vụ Data Warehouse (Kho dữ liệu) quy mô petabyte, được tối ưu cho OLAP.\n- Học về kiến trúc: Massively Parallel Processing (MPP) (Xử lý song song hàng loạt).\n+ Leader Node (Nút Lãnh đạo): Tiếp nhận, phân tích và điều phối truy vấn.\n+ Compute Nodes (Nút Tính toán): Lưu trữ và thực thi các phần công việc song song.\n- Tìm hiểu về kĩ thuật: Columnar Storage (Lưu trữ dạng Cột).\n+ Khác với OLTP (lưu theo hàng), Redshift lưu dữ liệu của cùng một cột gần nhau.\n+ Kỹ thuật này cực kỳ hiệu quả cho các truy vấn phân tích (OLAP) (ví dụ: Tính tuổi trung bình chỉ cần đọc cột Tuổi).\n- Tìm hiểu về kĩ thuật: Redshift Spectrum, cho phép chạy truy vấn SQL trực tiếp trên dữ liệu nằm trong Amazon S3 mà không cần tải về.\nAmazon ElastiCache\n- Học về dịch vụ: Amazon ElastiCache, một dịch vụ bộ nhớ đệm (caching) trong bộ nhớ RAM tốc độ cao.\n- Mục tiêu: Tăng tốc độ ứng dụng và giảm tải cho cơ sở dữ liệu chính (như RDS).\n- Tìm hiểu về các engine hỗ trợ: Redis (hỗ trợ nhiều kiểu dữ liệu, thường được ưu tiên) và Memcached.\n- Bài học: Trách nhiệm của người dùng là phải tự viết và quản lý Caching Logic (logic quyết định cái gì và khi nào cần cache) trong ứng dụng của mình. 16/10/2025 16/10/2025 Documentation: https://cloudjourney.awsstudygroup.com/\nYoutube: https://youtube.com/playlist?list=PLahN4TLWtox2a3vElknwzU_urND8hLn1i\u0026si=W80Cdf_fSc6sjOV\nNotes: https://github.com/DazielNguyen/aws-fcj-report/blob/main/TAKE_NOTES_%26_LABS/Module_06/Take_notes_module_06.md 6 Lab: 000005 - Bắt đầu với Amazon RDS\n1. Tạo cơ sở dữ liệu (database) trên Amazon RDS\n2. Kết nối ứng dụng vào CSDL\n3. Sao lưu và Phục hồi\nLab: 000043 - Dịch chuyển CSDL với DMS và SCT\n1. Các bước chuẩn bị\n2. Oracle sang Amazon Aurora (PostgreSQL)\n2.1 Chuyển dổi Schema\n2.2 Dịch chuyển cơ sở dữ liệu. [Nghiên cứu bổ sung] - Database Internals\n- Tài liệu tìm hiểu cách thức vận hành bên trong của cơ sở dữ liệu. Link: [https://www.amazon.com/Database-Internals-Deep-Distributed-Systems/dp/1492040347]\n[Nghiên cứu bổ sung] - The Data Warehouse Toolkit\n- Tài liệu tìm hiểu cách thức thiết kế và các kỹ thuật được sử dụng trong việc xây dựng Data-warehouse\nLink: [https://www.amazon.com/Data-Warehouse-Toolkit-Definitive-Dimensional/dp/1118530802] 17/10/2025 17/10/2025 Documentation: https://cloudjourney.awsstudygroup.com/\nYoutube: https://youtube.com/playlist?list=PLahN4TLWtox2a3vElknwzU_urND8hLn1i\u0026si=W80Cdf_fSc6sjOV\nNotes: https://github.com/DazielNguyen/aws-fcj-report/blob/main/TAKE_NOTES_%26_LABS/Module_06/Take_notes_module_06.md Kết quả đạt được tuần 6: Bài học (Nền tảng): Phân biệt rõ ràng hai mô hình hệ thống: OLTP (Online Transaction Processing - xử lý giao dịch) và OLAP (Online Analytical Processing - xử lý phân tích, kho dữ liệu). Nắm vững các kỹ thuật tối ưu CSDL cơ bản: Index (tăng tốc độ đọc) và Partition (chia nhỏ bảng). Hiểu vai trò của Database Log (để khôi phục/đồng bộ) và Buffer (dùng RAM để tăng tốc). Dịch vụ (RDS): Biết Amazon RDS là dịch vụ CSDL quan hệ (OLTP) được quản lý. Phân biệt rõ 2 tính năng chính của RDS: Multi-AZ (dùng cho tính Sẵn sàng cao - HA) và Read Replicas (dùng để tăng hiệu năng đọc). Kĩ thuật (Replication): Phân biệt Synchronous Replication (Sao chép đồng bộ - dùng cho RDS Multi-AZ) và Asynchronous Replication (Sao chép bất đồng bộ - dùng cho RDS Read Replicas, có thể bị trễ). Dịch vụ (Aurora): Biết Amazon Aurora là CSDL hiệu năng cao, cloud-native. Hiểu kiến trúc lưu trữ chia sẻ (Cluster Volume) của Aurora và lợi ích vượt trội là Zero Replication Lag (không có độ trễ). Nắm được các tính năng cao cấp như Backtrack và Global Database. Dịch vụ (Redshift): Biết Amazon Redshift là dịch vụ kho dữ liệu (OLAP). Hiểu kiến trúc MPP (Massively Parallel Processing) (gồm Leader Node và Compute Nodes). Nắm vững kỹ thuật cốt lõi của OLAP: Columnar Storage (Lưu trữ dạng Cột), giúp tăng tốc các truy vấn phân tích. Dịch vụ (ElastiCache): Biết Amazon ElastiCache (Redis/Memcached) là dịch vụ caching trong RAM. Hiểu vai trò của caching là giảm tải cho CSDL chính. Nhận thức được trách nhiệm phải tự viết Caching Logic trong ứng dụng. Thực hành: Biết cách tạo và vận hành (backup/restore) một CSDL RDS. Biết cách sử dụng dịch vụ DMS và SCT để dịch chuyển (migrate) CSDL từ Oracle sang Aurora. "
},
{
	"uri": "http://localhost:1313/aws-fcj-report/vi/5-workshop/5.6-cleanup/",
	"title": "Dọn dẹp tài nguyên",
	"tags": [],
	"description": "",
	"content": "Dọn dẹp tài nguyên Xin chúc mừng bạn đã hoàn thành xong lab này! Trong lab này, bạn đã học về các mô hình kiến trúc để truy cập Amazon S3 mà không sử dụng Public Internet.\nBằng cách tạo Gateway endpoint, bạn đã cho phép giao tiếp trực tiếp giữa các tài nguyên EC2 và Amazon S3, mà không đi qua Internet Gateway. Bằng cách tạo Interface endpoint, bạn đã mở rộng kết nối S3 đến các tài nguyên chạy trên trung tâm dữ liệu trên chỗ của bạn thông qua AWS Site-to-Site VPN hoặc Direct Connect. Dọn dẹp Điều hướng đến Hosted Zones trên phía trái của bảng điều khiển Route 53. Nhấp vào tên của s3.us-east-1.amazonaws.com zone. Nhấp vào Delete và xác nhận việc xóa bằng cách nhập từ khóa \u0026ldquo;delete\u0026rdquo;. Disassociate Route 53 Resolver Rule - myS3Rule from \u0026ldquo;VPC Onprem\u0026rdquo; and Delete it. 4.Mở console của CloudFormation và xóa hai stack CloudFormation mà bạn đã tạo cho bài thực hành này:\nPLOnpremSetup PLCloudSetup Xóa các S3 bucket Mở bảng điều khiển S3 Chọn bucket chúng ta đã tạo cho lab, nhấp chuột và xác nhận là empty. Nhấp Delete và xác nhận delete. "
},
{
	"uri": "http://localhost:1313/aws-fcj-report/vi/6-self-evaluation/",
	"title": "Tự đánh giá",
	"tags": [],
	"description": "",
	"content": "Trong suốt thời gian thực tập tại [Tên công ty/tổ chức] từ [ngày bắt đầu] đến [ngày kết thúc], tôi đã có cơ hội học hỏi, rèn luyện và áp dụng kiến thức đã được trang bị tại trường vào môi trường làm việc thực tế.\nTôi đã tham gia [mô tả ngắn gọn dự án hoặc công việc chính], qua đó cải thiện kỹ năng [liệt kê kỹ năng: lập trình, phân tích, viết báo cáo, giao tiếp…].\nVề tác phong, tôi luôn cố gắng hoàn thành tốt nhiệm vụ, tuân thủ nội quy, và tích cực trao đổi với đồng nghiệp để nâng cao hiệu quả công việc.\nĐể phản ánh một cách khách quan quá trình thực tập, tôi xin tự đánh giá bản thân dựa trên các tiêu chí dưới đây:\nSTT Tiêu chí Mô tả Tốt Khá Trung bình 1 Kiến thức và kỹ năng chuyên môn Hiểu biết về ngành, áp dụng kiến thức vào thực tế, kỹ năng sử dụng công cụ, chất lượng công việc ✅ ☐ ☐ 2 Khả năng học hỏi Tiếp thu kiến thức mới, học hỏi nhanh ☐ ✅ ☐ 3 Chủ động Tự tìm hiểu, nhận nhiệm vụ mà không chờ chỉ dẫn ✅ ☐ ☐ 4 Tinh thần trách nhiệm Hoàn thành công việc đúng hạn, đảm bảo chất lượng ✅ ☐ ☐ 5 Kỷ luật Tuân thủ giờ giấc, nội quy, quy trình làm việc ☐ ☐ ✅ 6 Tính cầu tiến Sẵn sàng nhận feedback và cải thiện bản thân ☐ ✅ ☐ 7 Giao tiếp Trình bày ý tưởng, báo cáo công việc rõ ràng ☐ ✅ ☐ 8 Hợp tác nhóm Làm việc hiệu quả với đồng nghiệp, tham gia nhóm ✅ ☐ ☐ 9 Ứng xử chuyên nghiệp Tôn trọng đồng nghiệp, đối tác, môi trường làm việc ✅ ☐ ☐ 10 Tư duy giải quyết vấn đề Nhận diện vấn đề, đề xuất giải pháp, sáng tạo ☐ ✅ ☐ 11 Đóng góp vào dự án/tổ chức Hiệu quả công việc, sáng kiến cải tiến, ghi nhận từ team ✅ ☐ ☐ 12 Tổng thể Đánh giá chung về toàn bộ quá trình thực tập ✅ ☐ ☐ Cần cải thiện Nâng cao tính kỹ luật, chấp hành nghiêm chỉnh nội quy của công ty hoặc bất kỳ trong một tổ chức nào Cải thiện trong cách tư duy giải quyết vấn đề Học cách giao tiếp tốt hơn trong giao tiếp hằng ngày và trong công việc, xử lý tình huống "
},
{
	"uri": "http://localhost:1313/aws-fcj-report/vi/1-worklog/1.7-week7/",
	"title": "Worklog Tuần 7",
	"tags": [],
	"description": "",
	"content": "Mục tiêu tuần 7: Kết nối, làm quen với các thành viên trong First Cloud Journey. Hiểu dịch vụ AWS cơ bản, cách dùng console \u0026amp; CLI. Các công việc cần triển khai trong tuần này: Thứ Công việc Ngày bắt đầu Ngày hoàn thành Nguồn tài liệu 2 - Làm quen với các thành viên FCJ - Đọc và lưu ý các nội quy, quy định tại đơn vị thực tập 11/08/2025 11/08/2025 3 - Tìm hiểu AWS và các loại dịch vụ + Compute + Storage + Networking + Database + \u0026hellip; 12/08/2025 12/08/2025 https://cloudjourney.awsstudygroup.com/ 4 - Tạo AWS Free Tier account - Tìm hiểu AWS Console \u0026amp; AWS CLI - Thực hành: + Tạo AWS account + Cài AWS CLI \u0026amp; cấu hình + Cách sử dụng AWS CLI 13/08/2025 13/08/2025 https://cloudjourney.awsstudygroup.com/ 5 - Tìm hiểu EC2 cơ bản: + Instance types + AMI + EBS + \u0026hellip; - Các cách remote SSH vào EC2 - Tìm hiểu Elastic IP 14/08/2025 15/08/2025 https://cloudjourney.awsstudygroup.com/ 6 - Thực hành: + Tạo EC2 instance + Kết nối SSH + Gắn EBS volume 15/08/2025 15/08/2025 https://cloudjourney.awsstudygroup.com/ Kết quả đạt được tuần 7: Hiểu AWS là gì và nắm được các nhóm dịch vụ cơ bản:\nCompute Storage Networking Database \u0026hellip; Đã tạo và cấu hình AWS Free Tier account thành công.\nLàm quen với AWS Management Console và biết cách tìm, truy cập, sử dụng dịch vụ từ giao diện web.\nCài đặt và cấu hình AWS CLI trên máy tính bao gồm:\nAccess Key Secret Key Region mặc định \u0026hellip; Sử dụng AWS CLI để thực hiện các thao tác cơ bản như:\nKiểm tra thông tin tài khoản \u0026amp; cấu hình Lấy danh sách region Xem dịch vụ EC2 Tạo và quản lý key pair Kiểm tra thông tin dịch vụ đang chạy \u0026hellip; Có khả năng kết nối giữa giao diện web và CLI để quản lý tài nguyên AWS song song.\n\u0026hellip;\n"
},
{
	"uri": "http://localhost:1313/aws-fcj-report/vi/7-feedback/",
	"title": "Chia sẻ, đóng góp ý kiến",
	"tags": [],
	"description": "",
	"content": " Tại đây bạn có thể tự do đóng góp ý kiến cá nhân về những trải nghiệm khi tham gia chương trình First Cloud Journey, giúp team FCJ cải thiện những vấn đề còn thiếu sót dựa trên các hạng mục sau:\nĐánh giá chung 1. Môi trường làm việc\nMôi trường làm việc rất thân thiện và cởi mở. Các thành viên trong FCJ luôn sẵn sàng hỗ trợ khi mình gặp khó khăn, kể cả ngoài giờ làm việc. Không gian làm việc gọn gàng, thoải mái, giúp mình tập trung tốt hơn. Tuy nhiên, mình nghĩ có thể bổ sung thêm một số buổi giao lưu hoặc team bonding để mọi người hiểu nhau hơn.\n2. Sự hỗ trợ của mentor / team admin\nMentor hướng dẫn rất chi tiết, giải thích rõ ràng khi mình chưa hiểu và luôn khuyến khích mình đặt câu hỏi. Team admin hỗ trợ các thủ tục, tài liệu và tạo điều kiện để mình làm việc thuận lợi. Mình đánh giá cao việc mentor cho phép mình thử và tự xử lý vấn đề thay vì chỉ đưa đáp án.\n3. Sự phù hợp giữa công việc và chuyên ngành học\nCông việc mình được giao phù hợp với kiến thức mình đã học ở trường, đồng thời mở rộng thêm những mảng mới mà mình chưa từng được tiếp cận. Nhờ vậy, mình vừa củng cố kiến thức nền tảng, vừa học thêm kỹ năng thực tế.\n4. Cơ hội học hỏi \u0026amp; phát triển kỹ năng\nTrong quá trình thực tập, mình học được nhiều kỹ năng mới như sử dụng công cụ quản lý dự án, kỹ năng làm việc nhóm, và cả cách giao tiếp chuyên nghiệp trong môi trường công ty. Mentor cũng chia sẻ nhiều kinh nghiệm thực tế giúp mình định hướng tốt hơn cho sự nghiệp.\n5. Văn hóa \u0026amp; tinh thần đồng đội\nVăn hóa công ty rất tích cực: mọi người tôn trọng lẫn nhau, làm việc nghiêm túc nhưng vẫn vui vẻ. Khi có dự án gấp, mọi người cùng nhau cố gắng, hỗ trợ không phân biệt vị trí. Điều này giúp mình cảm thấy mình là một phần của tập thể, dù chỉ là thực tập sinh.\n6. Chính sách / phúc lợi cho thực tập sinh\nCông ty có hỗ trợ phụ cấp thực tập và tạo điều kiện về thời gian linh hoạt khi cần thiết. Ngoài ra, việc được tham gia các buổi đào tạo nội bộ là một điểm cộng lớn.\nMột số câu hỏi khác Điều bạn hài lòng nhất trong thời gian thực tập? Điều bạn nghĩ công ty cần cải thiện cho các thực tập sinh sau? Nếu giới thiệu cho bạn bè, bạn có khuyên họ thực tập ở đây không? Vì sao? Đề xuất \u0026amp; mong muốn Bạn có đề xuất gì để cải thiện trải nghiệm trong kỳ thực tập? Bạn có muốn tiếp tục chương trình này trong tương lai? Góp ý khác (tự do chia sẻ): "
},
{
	"uri": "http://localhost:1313/aws-fcj-report/vi/1-worklog/1.8-week8/",
	"title": "Worklog Tuần 8",
	"tags": [],
	"description": "",
	"content": "Mục tiêu tuần 8: Kết nối, làm quen với các thành viên trong First Cloud Journey. Hiểu dịch vụ AWS cơ bản, cách dùng console \u0026amp; CLI. Các công việc cần triển khai trong tuần này: Thứ Công việc Ngày bắt đầu Ngày hoàn thành Nguồn tài liệu 2 - Làm quen với các thành viên FCJ - Đọc và lưu ý các nội quy, quy định tại đơn vị thực tập 11/08/2025 11/08/2025 3 - Tìm hiểu AWS và các loại dịch vụ + Compute + Storage + Networking + Database + \u0026hellip; 12/08/2025 12/08/2025 https://cloudjourney.awsstudygroup.com/ 4 - Tạo AWS Free Tier account - Tìm hiểu AWS Console \u0026amp; AWS CLI - Thực hành: + Tạo AWS account + Cài AWS CLI \u0026amp; cấu hình + Cách sử dụng AWS CLI 13/08/2025 13/08/2025 https://cloudjourney.awsstudygroup.com/ 5 - Tìm hiểu EC2 cơ bản: + Instance types + AMI + EBS + \u0026hellip; - Các cách remote SSH vào EC2 - Tìm hiểu Elastic IP 14/08/2025 15/08/2025 https://cloudjourney.awsstudygroup.com/ 6 - Thực hành: + Tạo EC2 instance + Kết nối SSH + Gắn EBS volume 15/08/2025 15/08/2025 https://cloudjourney.awsstudygroup.com/ Kết quả đạt được tuần 8: Hiểu AWS là gì và nắm được các nhóm dịch vụ cơ bản:\nCompute Storage Networking Database \u0026hellip; Đã tạo và cấu hình AWS Free Tier account thành công.\nLàm quen với AWS Management Console và biết cách tìm, truy cập, sử dụng dịch vụ từ giao diện web.\nCài đặt và cấu hình AWS CLI trên máy tính bao gồm:\nAccess Key Secret Key Region mặc định \u0026hellip; Sử dụng AWS CLI để thực hiện các thao tác cơ bản như:\nKiểm tra thông tin tài khoản \u0026amp; cấu hình Lấy danh sách region Xem dịch vụ EC2 Tạo và quản lý key pair Kiểm tra thông tin dịch vụ đang chạy \u0026hellip; Có khả năng kết nối giữa giao diện web và CLI để quản lý tài nguyên AWS song song.\n\u0026hellip;\n"
},
{
	"uri": "http://localhost:1313/aws-fcj-report/vi/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "http://localhost:1313/aws-fcj-report/vi/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
}]